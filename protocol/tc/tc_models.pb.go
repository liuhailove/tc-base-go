// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tc_models.proto

package tc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AudioCodec int32

const (
	AudioCodec_DEFAULT_AC AudioCodec = 0
	AudioCodec_OPUS       AudioCodec = 1
	AudioCodec_AAC        AudioCodec = 2
)

var AudioCodec_name = map[int32]string{
	0: "DEFAULT_AC",
	1: "OPUS",
	2: "AAC",
}

var AudioCodec_value = map[string]int32{
	"DEFAULT_AC": 0,
	"OPUS":       1,
	"AAC":        2,
}

func (x AudioCodec) String() string {
	return proto.EnumName(AudioCodec_name, int32(x))
}

func (AudioCodec) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5199d6999abb2e1a, []int{0}
}

type VideoCodec int32

const (
	VideoCodec_DEFAULT_VC    VideoCodec = 0
	VideoCodec_H264_BASELINE VideoCodec = 1
	VideoCodec_H264_MAIN     VideoCodec = 2
	VideoCodec_H264_HIGH     VideoCodec = 3
	VideoCodec_VP8           VideoCodec = 4
)

var VideoCodec_name = map[int32]string{
	0: "DEFAULT_VC",
	1: "H264_BASELINE",
	2: "H264_MAIN",
	3: "H264_HIGH",
	4: "VP8",
}

var VideoCodec_value = map[string]int32{
	"DEFAULT_VC":    0,
	"H264_BASELINE": 1,
	"H264_MAIN":     2,
	"H264_HIGH":     3,
	"VP8":           4,
}

func (x VideoCodec) String() string {
	return proto.EnumName(VideoCodec_name, int32(x))
}

func (VideoCodec) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5199d6999abb2e1a, []int{1}
}

type ImageCodec int32

const (
	ImageCodec_IC_DEFAULT ImageCodec = 0
	ImageCodec_IC_JPEG    ImageCodec = 1
)

var ImageCodec_name = map[int32]string{
	0: "IC_DEFAULT",
	1: "IC_JPEG",
}

var ImageCodec_value = map[string]int32{
	"IC_DEFAULT": 0,
	"IC_JPEG":    1,
}

func (x ImageCodec) String() string {
	return proto.EnumName(ImageCodec_name, int32(x))
}

func (ImageCodec) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5199d6999abb2e1a, []int{2}
}

type TrackType int32

const (
	TrackType_AUDIO TrackType = 0
	TrackType_VIDEO TrackType = 1
	TrackType_DATA  TrackType = 2
)

var TrackType_name = map[int32]string{
	0: "AUDIO",
	1: "VIDEO",
	2: "DATA",
}

var TrackType_value = map[string]int32{
	"AUDIO": 0,
	"VIDEO": 1,
	"DATA":  2,
}

func (x TrackType) String() string {
	return proto.EnumName(TrackType_name, int32(x))
}

func (TrackType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5199d6999abb2e1a, []int{3}
}

type TrackSource int32

const (
	TrackSource_UNKNOWN            TrackSource = 0
	TrackSource_CAMERA             TrackSource = 1
	TrackSource_MICROPHONE         TrackSource = 2
	TrackSource_SCREEN_SHARE       TrackSource = 3
	TrackSource_SCREEN_SHARE_AUDIO TrackSource = 4
)

var TrackSource_name = map[int32]string{
	0: "UNKNOWN",
	1: "CAMERA",
	2: "MICROPHONE",
	3: "SCREEN_SHARE",
	4: "SCREEN_SHARE_AUDIO",
}

var TrackSource_value = map[string]int32{
	"UNKNOWN":            0,
	"CAMERA":             1,
	"MICROPHONE":         2,
	"SCREEN_SHARE":       3,
	"SCREEN_SHARE_AUDIO": 4,
}

func (x TrackSource) String() string {
	return proto.EnumName(TrackSource_name, int32(x))
}

func (TrackSource) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5199d6999abb2e1a, []int{4}
}

type VideoQuality int32

const (
	VideoQuality_LOW    VideoQuality = 0
	VideoQuality_MEDIUM VideoQuality = 1
	VideoQuality_HIGH   VideoQuality = 2
	VideoQuality_OFF    VideoQuality = 3
)

var VideoQuality_name = map[int32]string{
	0: "LOW",
	1: "MEDIUM",
	2: "HIGH",
	3: "OFF",
}

var VideoQuality_value = map[string]int32{
	"LOW":    0,
	"MEDIUM": 1,
	"HIGH":   2,
	"OFF":    3,
}

func (x VideoQuality) String() string {
	return proto.EnumName(VideoQuality_name, int32(x))
}

func (VideoQuality) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5199d6999abb2e1a, []int{5}
}

type ConnectionQuality int32

const (
	ConnectionQuality_POOR      ConnectionQuality = 0
	ConnectionQuality_GOOD      ConnectionQuality = 1
	ConnectionQuality_EXCELLENT ConnectionQuality = 2
)

var ConnectionQuality_name = map[int32]string{
	0: "POOR",
	1: "GOOD",
	2: "EXCELLENT",
}

var ConnectionQuality_value = map[string]int32{
	"POOR":      0,
	"GOOD":      1,
	"EXCELLENT": 2,
}

func (x ConnectionQuality) String() string {
	return proto.EnumName(ConnectionQuality_name, int32(x))
}

func (ConnectionQuality) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5199d6999abb2e1a, []int{6}
}

type ClientConfigSetting int32

const (
	ClientConfigSetting_UNSET    ClientConfigSetting = 0
	ClientConfigSetting_DISABLED ClientConfigSetting = 1
	ClientConfigSetting_ENABLED  ClientConfigSetting = 2
)

var ClientConfigSetting_name = map[int32]string{
	0: "UNSET",
	1: "DISABLED",
	2: "ENABLED",
}

var ClientConfigSetting_value = map[string]int32{
	"UNSET":    0,
	"DISABLED": 1,
	"ENABLED":  2,
}

func (x ClientConfigSetting) String() string {
	return proto.EnumName(ClientConfigSetting_name, int32(x))
}

func (ClientConfigSetting) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5199d6999abb2e1a, []int{7}
}

type DisconnectReason int32

const (
	DisconnectReason_UNKNOWN_REASON      DisconnectReason = 0
	DisconnectReason_CLIENT_INITIATED    DisconnectReason = 1
	DisconnectReason_DUPLICATE_IDENTITY  DisconnectReason = 2
	DisconnectReason_SERVER_SHUTDOWN     DisconnectReason = 3
	DisconnectReason_PARTICIPANT_REMOVED DisconnectReason = 4
	DisconnectReason_ROOM_DELETED        DisconnectReason = 5
	DisconnectReason_STATE_MISMATCH      DisconnectReason = 6
	DisconnectReason_JOIN_FAILURE        DisconnectReason = 7
)

var DisconnectReason_name = map[int32]string{
	0: "UNKNOWN_REASON",
	1: "CLIENT_INITIATED",
	2: "DUPLICATE_IDENTITY",
	3: "SERVER_SHUTDOWN",
	4: "PARTICIPANT_REMOVED",
	5: "ROOM_DELETED",
	6: "STATE_MISMATCH",
	7: "JOIN_FAILURE",
}

var DisconnectReason_value = map[string]int32{
	"UNKNOWN_REASON":      0,
	"CLIENT_INITIATED":    1,
	"DUPLICATE_IDENTITY":  2,
	"SERVER_SHUTDOWN":     3,
	"PARTICIPANT_REMOVED": 4,
	"ROOM_DELETED":        5,
	"STATE_MISMATCH":      6,
	"JOIN_FAILURE":        7,
}

func (x DisconnectReason) String() string {
	return proto.EnumName(DisconnectReason_name, int32(x))
}

func (DisconnectReason) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5199d6999abb2e1a, []int{8}
}

type ReconnectReason int32

const (
	ReconnectReason_RR_UNKNOWN             ReconnectReason = 0
	ReconnectReason_RR_SIGNAL_DISCONNECTED ReconnectReason = 1
	ReconnectReason_RR_PUBLISHER_FAILED    ReconnectReason = 2
	ReconnectReason_RR_SUBSCRIBER_FAILED   ReconnectReason = 3
	ReconnectReason_RR_SWITCH_CANDIDATE    ReconnectReason = 4
)

var ReconnectReason_name = map[int32]string{
	0: "RR_UNKNOWN",
	1: "RR_SIGNAL_DISCONNECTED",
	2: "RR_PUBLISHER_FAILED",
	3: "RR_SUBSCRIBER_FAILED",
	4: "RR_SWITCH_CANDIDATE",
}

var ReconnectReason_value = map[string]int32{
	"RR_UNKNOWN":             0,
	"RR_SIGNAL_DISCONNECTED": 1,
	"RR_PUBLISHER_FAILED":    2,
	"RR_SUBSCRIBER_FAILED":   3,
	"RR_SWITCH_CANDIDATE":    4,
}

func (x ReconnectReason) String() string {
	return proto.EnumName(ReconnectReason_name, int32(x))
}

func (ReconnectReason) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5199d6999abb2e1a, []int{9}
}

type SubscriptionError int32

const (
	SubscriptionError_SE_UNKNOWN           SubscriptionError = 0
	SubscriptionError_SE_CODEC_UNSUPPORTED SubscriptionError = 1
	SubscriptionError_SE_TRACK_NOTFOUND    SubscriptionError = 2
)

var SubscriptionError_name = map[int32]string{
	0: "SE_UNKNOWN",
	1: "SE_CODEC_UNSUPPORTED",
	2: "SE_TRACK_NOTFOUND",
}

var SubscriptionError_value = map[string]int32{
	"SE_UNKNOWN":           0,
	"SE_CODEC_UNSUPPORTED": 1,
	"SE_TRACK_NOTFOUND":    2,
}

func (x SubscriptionError) String() string {
	return proto.EnumName(SubscriptionError_name, int32(x))
}

func (SubscriptionError) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5199d6999abb2e1a, []int{10}
}

type ParticipantInfo_State int32

const (
	// websocket' connected, but not offered yet
	ParticipantInfo_JOINING ParticipantInfo_State = 0
	// server received client offer
	ParticipantInfo_JOINED ParticipantInfo_State = 1
	// ICE connectivity established
	ParticipantInfo_ACTIVE ParticipantInfo_State = 2
	// WS disconnected
	ParticipantInfo_DISCONNECTED ParticipantInfo_State = 3
)

var ParticipantInfo_State_name = map[int32]string{
	0: "JOINING",
	1: "JOINED",
	2: "ACTIVE",
	3: "DISCONNECTED",
}

var ParticipantInfo_State_value = map[string]int32{
	"JOINING":      0,
	"JOINED":       1,
	"ACTIVE":       2,
	"DISCONNECTED": 3,
}

func (x ParticipantInfo_State) String() string {
	return proto.EnumName(ParticipantInfo_State_name, int32(x))
}

func (ParticipantInfo_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5199d6999abb2e1a, []int{4, 0}
}

type Encryption_Type int32

const (
	Encryption_NONE   Encryption_Type = 0
	Encryption_GCM    Encryption_Type = 1
	Encryption_CUSTOM Encryption_Type = 2
)

var Encryption_Type_name = map[int32]string{
	0: "NONE",
	1: "GCM",
	2: "CUSTOM",
}

var Encryption_Type_value = map[string]int32{
	"NONE":   0,
	"GCM":    1,
	"CUSTOM": 2,
}

func (x Encryption_Type) String() string {
	return proto.EnumName(Encryption_Type_name, int32(x))
}

func (Encryption_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5199d6999abb2e1a, []int{5, 0}
}

type DataPacket_Kind int32

const (
	DataPacket_RELIABLE DataPacket_Kind = 0
	DataPacket_LOSSY    DataPacket_Kind = 1
)

var DataPacket_Kind_name = map[int32]string{
	0: "RELIABLE",
	1: "LOSSY",
}

var DataPacket_Kind_value = map[string]int32{
	"RELIABLE": 0,
	"LOSSY":    1,
}

func (x DataPacket_Kind) String() string {
	return proto.EnumName(DataPacket_Kind_name, int32(x))
}

func (DataPacket_Kind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5199d6999abb2e1a, []int{9, 0}
}

type ServerInfo_Edition int32

const (
	ServerInfo_Standard ServerInfo_Edition = 0
	ServerInfo_Cloud    ServerInfo_Edition = 1
)

var ServerInfo_Edition_name = map[int32]string{
	0: "Standard",
	1: "Cloud",
}

var ServerInfo_Edition_value = map[string]int32{
	"Standard": 0,
	"Cloud":    1,
}

func (x ServerInfo_Edition) String() string {
	return proto.EnumName(ServerInfo_Edition_name, int32(x))
}

func (ServerInfo_Edition) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5199d6999abb2e1a, []int{14, 0}
}

type ClientInfo_SDK int32

const (
	ClientInfo_UNKNOWN      ClientInfo_SDK = 0
	ClientInfo_JS           ClientInfo_SDK = 1
	ClientInfo_SWIFT        ClientInfo_SDK = 2
	ClientInfo_ANDROID      ClientInfo_SDK = 3
	ClientInfo_FLUTTER      ClientInfo_SDK = 4
	ClientInfo_GO           ClientInfo_SDK = 5
	ClientInfo_UNITY        ClientInfo_SDK = 6
	ClientInfo_REACT_NATIVE ClientInfo_SDK = 7
	ClientInfo_RUST         ClientInfo_SDK = 8
	ClientInfo_PYTHON       ClientInfo_SDK = 9
	ClientInfo_CPP          ClientInfo_SDK = 10
)

var ClientInfo_SDK_name = map[int32]string{
	0:  "UNKNOWN",
	1:  "JS",
	2:  "SWIFT",
	3:  "ANDROID",
	4:  "FLUTTER",
	5:  "GO",
	6:  "UNITY",
	7:  "REACT_NATIVE",
	8:  "RUST",
	9:  "PYTHON",
	10: "CPP",
}

var ClientInfo_SDK_value = map[string]int32{
	"UNKNOWN":      0,
	"JS":           1,
	"SWIFT":        2,
	"ANDROID":      3,
	"FLUTTER":      4,
	"GO":           5,
	"UNITY":        6,
	"REACT_NATIVE": 7,
	"RUST":         8,
	"PYTHON":       9,
	"CPP":          10,
}

func (x ClientInfo_SDK) String() string {
	return proto.EnumName(ClientInfo_SDK_name, int32(x))
}

func (ClientInfo_SDK) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5199d6999abb2e1a, []int{15, 0}
}

type Room struct {
	Sid                  string   `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	EmptyTimeout         uint32   `protobuf:"varint,3,opt,name=empty_timeout,json=emptyTimeout,proto3" json:"empty_timeout,omitempty"`
	MaxParticipants      uint32   `protobuf:"varint,4,opt,name=max_participants,json=maxParticipants,proto3" json:"max_participants,omitempty"`
	CreationTime         int64    `protobuf:"varint,5,opt,name=creation_time,json=creationTime,proto3" json:"creation_time,omitempty"`
	TurnPassword         string   `protobuf:"bytes,6,opt,name=turn_password,json=turnPassword,proto3" json:"turn_password,omitempty"`
	EnabledCodecs        []*Codec `protobuf:"bytes,7,rep,name=enabled_codecs,json=enabledCodecs,proto3" json:"enabled_codecs,omitempty"`
	Metadata             string   `protobuf:"bytes,8,opt,name=metadata,proto3" json:"metadata,omitempty"`
	NumParticipants      uint32   `protobuf:"varint,9,opt,name=num_participants,json=numParticipants,proto3" json:"num_participants,omitempty"`
	NumPublishers        uint32   `protobuf:"varint,11,opt,name=num_publishers,json=numPublishers,proto3" json:"num_publishers,omitempty"`
	ActiveRecording      bool     `protobuf:"varint,10,opt,name=active_recording,json=activeRecording,proto3" json:"active_recording,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Room) Reset()         { *m = Room{} }
func (m *Room) String() string { return proto.CompactTextString(m) }
func (*Room) ProtoMessage()    {}
func (*Room) Descriptor() ([]byte, []int) {
	return fileDescriptor_5199d6999abb2e1a, []int{0}
}

func (m *Room) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Room.Unmarshal(m, b)
}
func (m *Room) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Room.Marshal(b, m, deterministic)
}
func (m *Room) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Room.Merge(m, src)
}
func (m *Room) XXX_Size() int {
	return xxx_messageInfo_Room.Size(m)
}
func (m *Room) XXX_DiscardUnknown() {
	xxx_messageInfo_Room.DiscardUnknown(m)
}

var xxx_messageInfo_Room proto.InternalMessageInfo

func (m *Room) GetSid() string {
	if m != nil {
		return m.Sid
	}
	return ""
}

func (m *Room) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Room) GetEmptyTimeout() uint32 {
	if m != nil {
		return m.EmptyTimeout
	}
	return 0
}

func (m *Room) GetMaxParticipants() uint32 {
	if m != nil {
		return m.MaxParticipants
	}
	return 0
}

func (m *Room) GetCreationTime() int64 {
	if m != nil {
		return m.CreationTime
	}
	return 0
}

func (m *Room) GetTurnPassword() string {
	if m != nil {
		return m.TurnPassword
	}
	return ""
}

func (m *Room) GetEnabledCodecs() []*Codec {
	if m != nil {
		return m.EnabledCodecs
	}
	return nil
}

func (m *Room) GetMetadata() string {
	if m != nil {
		return m.Metadata
	}
	return ""
}

func (m *Room) GetNumParticipants() uint32 {
	if m != nil {
		return m.NumParticipants
	}
	return 0
}

func (m *Room) GetNumPublishers() uint32 {
	if m != nil {
		return m.NumPublishers
	}
	return 0
}

func (m *Room) GetActiveRecording() bool {
	if m != nil {
		return m.ActiveRecording
	}
	return false
}

type Codec struct {
	Mime                 string   `protobuf:"bytes,1,opt,name=mime,proto3" json:"mime,omitempty"`
	FmtpLine             string   `protobuf:"bytes,2,opt,name=fmtp_line,json=fmtpLine,proto3" json:"fmtp_line,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Codec) Reset()         { *m = Codec{} }
func (m *Codec) String() string { return proto.CompactTextString(m) }
func (*Codec) ProtoMessage()    {}
func (*Codec) Descriptor() ([]byte, []int) {
	return fileDescriptor_5199d6999abb2e1a, []int{1}
}

func (m *Codec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Codec.Unmarshal(m, b)
}
func (m *Codec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Codec.Marshal(b, m, deterministic)
}
func (m *Codec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Codec.Merge(m, src)
}
func (m *Codec) XXX_Size() int {
	return xxx_messageInfo_Codec.Size(m)
}
func (m *Codec) XXX_DiscardUnknown() {
	xxx_messageInfo_Codec.DiscardUnknown(m)
}

var xxx_messageInfo_Codec proto.InternalMessageInfo

func (m *Codec) GetMime() string {
	if m != nil {
		return m.Mime
	}
	return ""
}

func (m *Codec) GetFmtpLine() string {
	if m != nil {
		return m.FmtpLine
	}
	return ""
}

type PlayoutDelay struct {
	Enabled              bool     `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Min                  uint32   `protobuf:"varint,2,opt,name=min,proto3" json:"min,omitempty"`
	Max                  uint32   `protobuf:"varint,3,opt,name=max,proto3" json:"max,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayoutDelay) Reset()         { *m = PlayoutDelay{} }
func (m *PlayoutDelay) String() string { return proto.CompactTextString(m) }
func (*PlayoutDelay) ProtoMessage()    {}
func (*PlayoutDelay) Descriptor() ([]byte, []int) {
	return fileDescriptor_5199d6999abb2e1a, []int{2}
}

func (m *PlayoutDelay) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayoutDelay.Unmarshal(m, b)
}
func (m *PlayoutDelay) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayoutDelay.Marshal(b, m, deterministic)
}
func (m *PlayoutDelay) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayoutDelay.Merge(m, src)
}
func (m *PlayoutDelay) XXX_Size() int {
	return xxx_messageInfo_PlayoutDelay.Size(m)
}
func (m *PlayoutDelay) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayoutDelay.DiscardUnknown(m)
}

var xxx_messageInfo_PlayoutDelay proto.InternalMessageInfo

func (m *PlayoutDelay) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *PlayoutDelay) GetMin() uint32 {
	if m != nil {
		return m.Min
	}
	return 0
}

func (m *PlayoutDelay) GetMax() uint32 {
	if m != nil {
		return m.Max
	}
	return 0
}

type ParticipantPermission struct {
	// allow participant to subscribe to other tracks in the room
	CanSubscribe bool `protobuf:"varint,1,opt,name=can_subscribe,json=canSubscribe,proto3" json:"can_subscribe,omitempty"`
	// allow participant to publish new tracks to room
	CanPublish bool `protobuf:"varint,2,opt,name=can_publish,json=canPublish,proto3" json:"can_publish,omitempty"`
	// allow participant to publish data
	CanPublishData bool `protobuf:"varint,3,opt,name=can_publish_data,json=canPublishData,proto3" json:"can_publish_data,omitempty"`
	// sources that are allowed to be published
	CanPublishSources []TrackSource `protobuf:"varint,9,rep,packed,name=can_publish_sources,json=canPublishSources,proto3,enum=tc.TrackSource" json:"can_publish_sources,omitempty"`
	// indicates that it's hidden to others
	Hidden bool `protobuf:"varint,7,opt,name=hidden,proto3" json:"hidden,omitempty"`
	// indicates it's a recorder instance
	Recorder bool `protobuf:"varint,8,opt,name=recorder,proto3" json:"recorder,omitempty"`
	// indicates that participant can update own metadata
	CanUpdateMetadata bool `protobuf:"varint,10,opt,name=can_update_metadata,json=canUpdateMetadata,proto3" json:"can_update_metadata,omitempty"`
	// indicates that participant is an agent
	Agent                bool     `protobuf:"varint,11,opt,name=agent,proto3" json:"agent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ParticipantPermission) Reset()         { *m = ParticipantPermission{} }
func (m *ParticipantPermission) String() string { return proto.CompactTextString(m) }
func (*ParticipantPermission) ProtoMessage()    {}
func (*ParticipantPermission) Descriptor() ([]byte, []int) {
	return fileDescriptor_5199d6999abb2e1a, []int{3}
}

func (m *ParticipantPermission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParticipantPermission.Unmarshal(m, b)
}
func (m *ParticipantPermission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParticipantPermission.Marshal(b, m, deterministic)
}
func (m *ParticipantPermission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParticipantPermission.Merge(m, src)
}
func (m *ParticipantPermission) XXX_Size() int {
	return xxx_messageInfo_ParticipantPermission.Size(m)
}
func (m *ParticipantPermission) XXX_DiscardUnknown() {
	xxx_messageInfo_ParticipantPermission.DiscardUnknown(m)
}

var xxx_messageInfo_ParticipantPermission proto.InternalMessageInfo

func (m *ParticipantPermission) GetCanSubscribe() bool {
	if m != nil {
		return m.CanSubscribe
	}
	return false
}

func (m *ParticipantPermission) GetCanPublish() bool {
	if m != nil {
		return m.CanPublish
	}
	return false
}

func (m *ParticipantPermission) GetCanPublishData() bool {
	if m != nil {
		return m.CanPublishData
	}
	return false
}

func (m *ParticipantPermission) GetCanPublishSources() []TrackSource {
	if m != nil {
		return m.CanPublishSources
	}
	return nil
}

func (m *ParticipantPermission) GetHidden() bool {
	if m != nil {
		return m.Hidden
	}
	return false
}

func (m *ParticipantPermission) GetRecorder() bool {
	if m != nil {
		return m.Recorder
	}
	return false
}

func (m *ParticipantPermission) GetCanUpdateMetadata() bool {
	if m != nil {
		return m.CanUpdateMetadata
	}
	return false
}

func (m *ParticipantPermission) GetAgent() bool {
	if m != nil {
		return m.Agent
	}
	return false
}

type ParticipantInfo struct {
	Sid      string                `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Identity string                `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity,omitempty"`
	State    ParticipantInfo_State `protobuf:"varint,3,opt,name=state,proto3,enum=tc.ParticipantInfo_State" json:"state,omitempty"`
	Tracks   []*TrackInfo          `protobuf:"bytes,4,rep,name=tracks,proto3" json:"tracks,omitempty"`
	Metadata string                `protobuf:"bytes,5,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// timestamp when participant joined room, in seconds
	JoinedAt   int64                  `protobuf:"varint,6,opt,name=joined_at,json=joinedAt,proto3" json:"joined_at,omitempty"`
	Name       string                 `protobuf:"bytes,9,opt,name=name,proto3" json:"name,omitempty"`
	Version    uint32                 `protobuf:"varint,10,opt,name=version,proto3" json:"version,omitempty"`
	Permission *ParticipantPermission `protobuf:"bytes,11,opt,name=permission,proto3" json:"permission,omitempty"`
	Region     string                 `protobuf:"bytes,12,opt,name=region,proto3" json:"region,omitempty"`
	// indicates the participant has an active publisher connection
	// and can publish to the server
	IsPublisher          bool     `protobuf:"varint,13,opt,name=is_publisher,json=isPublisher,proto3" json:"is_publisher,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ParticipantInfo) Reset()         { *m = ParticipantInfo{} }
func (m *ParticipantInfo) String() string { return proto.CompactTextString(m) }
func (*ParticipantInfo) ProtoMessage()    {}
func (*ParticipantInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_5199d6999abb2e1a, []int{4}
}

func (m *ParticipantInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParticipantInfo.Unmarshal(m, b)
}
func (m *ParticipantInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParticipantInfo.Marshal(b, m, deterministic)
}
func (m *ParticipantInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParticipantInfo.Merge(m, src)
}
func (m *ParticipantInfo) XXX_Size() int {
	return xxx_messageInfo_ParticipantInfo.Size(m)
}
func (m *ParticipantInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ParticipantInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ParticipantInfo proto.InternalMessageInfo

func (m *ParticipantInfo) GetSid() string {
	if m != nil {
		return m.Sid
	}
	return ""
}

func (m *ParticipantInfo) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

func (m *ParticipantInfo) GetState() ParticipantInfo_State {
	if m != nil {
		return m.State
	}
	return ParticipantInfo_JOINING
}

func (m *ParticipantInfo) GetTracks() []*TrackInfo {
	if m != nil {
		return m.Tracks
	}
	return nil
}

func (m *ParticipantInfo) GetMetadata() string {
	if m != nil {
		return m.Metadata
	}
	return ""
}

func (m *ParticipantInfo) GetJoinedAt() int64 {
	if m != nil {
		return m.JoinedAt
	}
	return 0
}

func (m *ParticipantInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ParticipantInfo) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *ParticipantInfo) GetPermission() *ParticipantPermission {
	if m != nil {
		return m.Permission
	}
	return nil
}

func (m *ParticipantInfo) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *ParticipantInfo) GetIsPublisher() bool {
	if m != nil {
		return m.IsPublisher
	}
	return false
}

type Encryption struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Encryption) Reset()         { *m = Encryption{} }
func (m *Encryption) String() string { return proto.CompactTextString(m) }
func (*Encryption) ProtoMessage()    {}
func (*Encryption) Descriptor() ([]byte, []int) {
	return fileDescriptor_5199d6999abb2e1a, []int{5}
}

func (m *Encryption) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Encryption.Unmarshal(m, b)
}
func (m *Encryption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Encryption.Marshal(b, m, deterministic)
}
func (m *Encryption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Encryption.Merge(m, src)
}
func (m *Encryption) XXX_Size() int {
	return xxx_messageInfo_Encryption.Size(m)
}
func (m *Encryption) XXX_DiscardUnknown() {
	xxx_messageInfo_Encryption.DiscardUnknown(m)
}

var xxx_messageInfo_Encryption proto.InternalMessageInfo

type SimulcastCodecInfo struct {
	MimeType             string        `protobuf:"bytes,1,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	Mid                  string        `protobuf:"bytes,2,opt,name=mid,proto3" json:"mid,omitempty"`
	Cid                  string        `protobuf:"bytes,3,opt,name=cid,proto3" json:"cid,omitempty"`
	Layers               []*VideoLayer `protobuf:"bytes,4,rep,name=layers,proto3" json:"layers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SimulcastCodecInfo) Reset()         { *m = SimulcastCodecInfo{} }
func (m *SimulcastCodecInfo) String() string { return proto.CompactTextString(m) }
func (*SimulcastCodecInfo) ProtoMessage()    {}
func (*SimulcastCodecInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_5199d6999abb2e1a, []int{6}
}

func (m *SimulcastCodecInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimulcastCodecInfo.Unmarshal(m, b)
}
func (m *SimulcastCodecInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimulcastCodecInfo.Marshal(b, m, deterministic)
}
func (m *SimulcastCodecInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimulcastCodecInfo.Merge(m, src)
}
func (m *SimulcastCodecInfo) XXX_Size() int {
	return xxx_messageInfo_SimulcastCodecInfo.Size(m)
}
func (m *SimulcastCodecInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SimulcastCodecInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SimulcastCodecInfo proto.InternalMessageInfo

func (m *SimulcastCodecInfo) GetMimeType() string {
	if m != nil {
		return m.MimeType
	}
	return ""
}

func (m *SimulcastCodecInfo) GetMid() string {
	if m != nil {
		return m.Mid
	}
	return ""
}

func (m *SimulcastCodecInfo) GetCid() string {
	if m != nil {
		return m.Cid
	}
	return ""
}

func (m *SimulcastCodecInfo) GetLayers() []*VideoLayer {
	if m != nil {
		return m.Layers
	}
	return nil
}

type TrackInfo struct {
	Sid   string    `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Type  TrackType `protobuf:"varint,2,opt,name=type,proto3,enum=tc.TrackType" json:"type,omitempty"`
	Name  string    `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Muted bool      `protobuf:"varint,4,opt,name=muted,proto3" json:"muted,omitempty"`
	// original width of video (unset for audio)
	// clients may receive a lower resolution version with simulcast
	Width uint32 `protobuf:"varint,5,opt,name=width,proto3" json:"width,omitempty"`
	// original height of video (unset for audio)
	Height uint32 `protobuf:"varint,6,opt,name=height,proto3" json:"height,omitempty"`
	// true if track is simulcasted
	Simulcast bool `protobuf:"varint,7,opt,name=simulcast,proto3" json:"simulcast,omitempty"`
	// true if DTX (Discontinuous Transmission) is disabled for audio
	DisableDtx bool `protobuf:"varint,8,opt,name=disable_dtx,json=disableDtx,proto3" json:"disable_dtx,omitempty"`
	// source of media
	Source TrackSource   `protobuf:"varint,9,opt,name=source,proto3,enum=tc.TrackSource" json:"source,omitempty"`
	Layers []*VideoLayer `protobuf:"bytes,10,rep,name=layers,proto3" json:"layers,omitempty"`
	// mime type of codec
	MimeType string                `protobuf:"bytes,11,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	Mid      string                `protobuf:"bytes,12,opt,name=mid,proto3" json:"mid,omitempty"`
	Codecs   []*SimulcastCodecInfo `protobuf:"bytes,13,rep,name=codecs,proto3" json:"codecs,omitempty"`
	Stereo   bool                  `protobuf:"varint,14,opt,name=stereo,proto3" json:"stereo,omitempty"`
	// true if RED (Redundant Encoding) is disabled for audio
	DisableRed           bool            `protobuf:"varint,15,opt,name=disable_red,json=disableRed,proto3" json:"disable_red,omitempty"`
	Encryption           Encryption_Type `protobuf:"varint,16,opt,name=encryption,proto3,enum=tc.Encryption_Type" json:"encryption,omitempty"`
	Stream               string          `protobuf:"bytes,17,opt,name=stream,proto3" json:"stream,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TrackInfo) Reset()         { *m = TrackInfo{} }
func (m *TrackInfo) String() string { return proto.CompactTextString(m) }
func (*TrackInfo) ProtoMessage()    {}
func (*TrackInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_5199d6999abb2e1a, []int{7}
}

func (m *TrackInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrackInfo.Unmarshal(m, b)
}
func (m *TrackInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrackInfo.Marshal(b, m, deterministic)
}
func (m *TrackInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrackInfo.Merge(m, src)
}
func (m *TrackInfo) XXX_Size() int {
	return xxx_messageInfo_TrackInfo.Size(m)
}
func (m *TrackInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TrackInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TrackInfo proto.InternalMessageInfo

func (m *TrackInfo) GetSid() string {
	if m != nil {
		return m.Sid
	}
	return ""
}

func (m *TrackInfo) GetType() TrackType {
	if m != nil {
		return m.Type
	}
	return TrackType_AUDIO
}

func (m *TrackInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TrackInfo) GetMuted() bool {
	if m != nil {
		return m.Muted
	}
	return false
}

func (m *TrackInfo) GetWidth() uint32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *TrackInfo) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *TrackInfo) GetSimulcast() bool {
	if m != nil {
		return m.Simulcast
	}
	return false
}

func (m *TrackInfo) GetDisableDtx() bool {
	if m != nil {
		return m.DisableDtx
	}
	return false
}

func (m *TrackInfo) GetSource() TrackSource {
	if m != nil {
		return m.Source
	}
	return TrackSource_UNKNOWN
}

func (m *TrackInfo) GetLayers() []*VideoLayer {
	if m != nil {
		return m.Layers
	}
	return nil
}

func (m *TrackInfo) GetMimeType() string {
	if m != nil {
		return m.MimeType
	}
	return ""
}

func (m *TrackInfo) GetMid() string {
	if m != nil {
		return m.Mid
	}
	return ""
}

func (m *TrackInfo) GetCodecs() []*SimulcastCodecInfo {
	if m != nil {
		return m.Codecs
	}
	return nil
}

func (m *TrackInfo) GetStereo() bool {
	if m != nil {
		return m.Stereo
	}
	return false
}

func (m *TrackInfo) GetDisableRed() bool {
	if m != nil {
		return m.DisableRed
	}
	return false
}

func (m *TrackInfo) GetEncryption() Encryption_Type {
	if m != nil {
		return m.Encryption
	}
	return Encryption_NONE
}

func (m *TrackInfo) GetStream() string {
	if m != nil {
		return m.Stream
	}
	return ""
}

// provide information about available spatial layers
type VideoLayer struct {
	// for tracks with a single layer, this should be HIGH
	Quality VideoQuality `protobuf:"varint,1,opt,name=quality,proto3,enum=tc.VideoQuality" json:"quality,omitempty"`
	Width   uint32       `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`
	Height  uint32       `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	// target bitrate in bit per second (bps), server will measure actual
	Bitrate              uint32   `protobuf:"varint,4,opt,name=bitrate,proto3" json:"bitrate,omitempty"`
	Ssrc                 uint32   `protobuf:"varint,5,opt,name=ssrc,proto3" json:"ssrc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VideoLayer) Reset()         { *m = VideoLayer{} }
func (m *VideoLayer) String() string { return proto.CompactTextString(m) }
func (*VideoLayer) ProtoMessage()    {}
func (*VideoLayer) Descriptor() ([]byte, []int) {
	return fileDescriptor_5199d6999abb2e1a, []int{8}
}

func (m *VideoLayer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VideoLayer.Unmarshal(m, b)
}
func (m *VideoLayer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VideoLayer.Marshal(b, m, deterministic)
}
func (m *VideoLayer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoLayer.Merge(m, src)
}
func (m *VideoLayer) XXX_Size() int {
	return xxx_messageInfo_VideoLayer.Size(m)
}
func (m *VideoLayer) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoLayer.DiscardUnknown(m)
}

var xxx_messageInfo_VideoLayer proto.InternalMessageInfo

func (m *VideoLayer) GetQuality() VideoQuality {
	if m != nil {
		return m.Quality
	}
	return VideoQuality_LOW
}

func (m *VideoLayer) GetWidth() uint32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *VideoLayer) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *VideoLayer) GetBitrate() uint32 {
	if m != nil {
		return m.Bitrate
	}
	return 0
}

func (m *VideoLayer) GetSsrc() uint32 {
	if m != nil {
		return m.Ssrc
	}
	return 0
}

// new DataPacket API
type DataPacket struct {
	Kind DataPacket_Kind `protobuf:"varint,1,opt,name=kind,proto3,enum=tc.DataPacket_Kind" json:"kind,omitempty"`
	// Types that are valid to be assigned to Value:
	//	*DataPacket_User
	//	*DataPacket_Speaker
	Value                isDataPacket_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DataPacket) Reset()         { *m = DataPacket{} }
func (m *DataPacket) String() string { return proto.CompactTextString(m) }
func (*DataPacket) ProtoMessage()    {}
func (*DataPacket) Descriptor() ([]byte, []int) {
	return fileDescriptor_5199d6999abb2e1a, []int{9}
}

func (m *DataPacket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataPacket.Unmarshal(m, b)
}
func (m *DataPacket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataPacket.Marshal(b, m, deterministic)
}
func (m *DataPacket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataPacket.Merge(m, src)
}
func (m *DataPacket) XXX_Size() int {
	return xxx_messageInfo_DataPacket.Size(m)
}
func (m *DataPacket) XXX_DiscardUnknown() {
	xxx_messageInfo_DataPacket.DiscardUnknown(m)
}

var xxx_messageInfo_DataPacket proto.InternalMessageInfo

func (m *DataPacket) GetKind() DataPacket_Kind {
	if m != nil {
		return m.Kind
	}
	return DataPacket_RELIABLE
}

type isDataPacket_Value interface {
	isDataPacket_Value()
}

type DataPacket_User struct {
	User *UserPacket `protobuf:"bytes,2,opt,name=user,proto3,oneof"`
}

type DataPacket_Speaker struct {
	Speaker *ActiveSpeakerUpdate `protobuf:"bytes,3,opt,name=speaker,proto3,oneof"`
}

func (*DataPacket_User) isDataPacket_Value() {}

func (*DataPacket_Speaker) isDataPacket_Value() {}

func (m *DataPacket) GetValue() isDataPacket_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *DataPacket) GetUser() *UserPacket {
	if x, ok := m.GetValue().(*DataPacket_User); ok {
		return x.User
	}
	return nil
}

func (m *DataPacket) GetSpeaker() *ActiveSpeakerUpdate {
	if x, ok := m.GetValue().(*DataPacket_Speaker); ok {
		return x.Speaker
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*DataPacket) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*DataPacket_User)(nil),
		(*DataPacket_Speaker)(nil),
	}
}

type ActiveSpeakerUpdate struct {
	Speakers             []*SpeakerInfo `protobuf:"bytes,1,rep,name=speakers,proto3" json:"speakers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ActiveSpeakerUpdate) Reset()         { *m = ActiveSpeakerUpdate{} }
func (m *ActiveSpeakerUpdate) String() string { return proto.CompactTextString(m) }
func (*ActiveSpeakerUpdate) ProtoMessage()    {}
func (*ActiveSpeakerUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_5199d6999abb2e1a, []int{10}
}

func (m *ActiveSpeakerUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActiveSpeakerUpdate.Unmarshal(m, b)
}
func (m *ActiveSpeakerUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActiveSpeakerUpdate.Marshal(b, m, deterministic)
}
func (m *ActiveSpeakerUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActiveSpeakerUpdate.Merge(m, src)
}
func (m *ActiveSpeakerUpdate) XXX_Size() int {
	return xxx_messageInfo_ActiveSpeakerUpdate.Size(m)
}
func (m *ActiveSpeakerUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_ActiveSpeakerUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_ActiveSpeakerUpdate proto.InternalMessageInfo

func (m *ActiveSpeakerUpdate) GetSpeakers() []*SpeakerInfo {
	if m != nil {
		return m.Speakers
	}
	return nil
}

type SpeakerInfo struct {
	Sid string `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	// audio level, 0-1.0, 1 is loudest
	Level float32 `protobuf:"fixed32,2,opt,name=level,proto3" json:"level,omitempty"`
	// true if speaker is currently active
	Active               bool     `protobuf:"varint,3,opt,name=active,proto3" json:"active,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpeakerInfo) Reset()         { *m = SpeakerInfo{} }
func (m *SpeakerInfo) String() string { return proto.CompactTextString(m) }
func (*SpeakerInfo) ProtoMessage()    {}
func (*SpeakerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_5199d6999abb2e1a, []int{11}
}

func (m *SpeakerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpeakerInfo.Unmarshal(m, b)
}
func (m *SpeakerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpeakerInfo.Marshal(b, m, deterministic)
}
func (m *SpeakerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpeakerInfo.Merge(m, src)
}
func (m *SpeakerInfo) XXX_Size() int {
	return xxx_messageInfo_SpeakerInfo.Size(m)
}
func (m *SpeakerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SpeakerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SpeakerInfo proto.InternalMessageInfo

func (m *SpeakerInfo) GetSid() string {
	if m != nil {
		return m.Sid
	}
	return ""
}

func (m *SpeakerInfo) GetLevel() float32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *SpeakerInfo) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

type UserPacket struct {
	// participant ID of user that sent the message
	ParticipantSid      string `protobuf:"bytes,1,opt,name=participant_sid,json=participantSid,proto3" json:"participant_sid,omitempty"`
	ParticipantIdentity string `protobuf:"bytes,5,opt,name=participant_identity,json=participantIdentity,proto3" json:"participant_identity,omitempty"`
	// user defined payload
	Payload []byte `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	// the ID of the participants who will receive the message (sent to all by default)
	DestinationSids []string `protobuf:"bytes,3,rep,name=destination_sids,json=destinationSids,proto3" json:"destination_sids,omitempty"`
	// identities of participants who will receive the message (sent to all by default)
	DestinationIdentities []string `protobuf:"bytes,6,rep,name=destination_identities,json=destinationIdentities,proto3" json:"destination_identities,omitempty"`
	// topic under which the message was published
	Topic                string   `protobuf:"bytes,4,opt,name=topic,proto3" json:"topic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserPacket) Reset()         { *m = UserPacket{} }
func (m *UserPacket) String() string { return proto.CompactTextString(m) }
func (*UserPacket) ProtoMessage()    {}
func (*UserPacket) Descriptor() ([]byte, []int) {
	return fileDescriptor_5199d6999abb2e1a, []int{12}
}

func (m *UserPacket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserPacket.Unmarshal(m, b)
}
func (m *UserPacket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserPacket.Marshal(b, m, deterministic)
}
func (m *UserPacket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserPacket.Merge(m, src)
}
func (m *UserPacket) XXX_Size() int {
	return xxx_messageInfo_UserPacket.Size(m)
}
func (m *UserPacket) XXX_DiscardUnknown() {
	xxx_messageInfo_UserPacket.DiscardUnknown(m)
}

var xxx_messageInfo_UserPacket proto.InternalMessageInfo

func (m *UserPacket) GetParticipantSid() string {
	if m != nil {
		return m.ParticipantSid
	}
	return ""
}

func (m *UserPacket) GetParticipantIdentity() string {
	if m != nil {
		return m.ParticipantIdentity
	}
	return ""
}

func (m *UserPacket) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *UserPacket) GetDestinationSids() []string {
	if m != nil {
		return m.DestinationSids
	}
	return nil
}

func (m *UserPacket) GetDestinationIdentities() []string {
	if m != nil {
		return m.DestinationIdentities
	}
	return nil
}

func (m *UserPacket) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

type ParticipantTracks struct {
	// participant ID of participant to whom the tracks belong
	ParticipantSid       string   `protobuf:"bytes,1,opt,name=participant_sid,json=participantSid,proto3" json:"participant_sid,omitempty"`
	TrackSids            []string `protobuf:"bytes,2,rep,name=track_sids,json=trackSids,proto3" json:"track_sids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ParticipantTracks) Reset()         { *m = ParticipantTracks{} }
func (m *ParticipantTracks) String() string { return proto.CompactTextString(m) }
func (*ParticipantTracks) ProtoMessage()    {}
func (*ParticipantTracks) Descriptor() ([]byte, []int) {
	return fileDescriptor_5199d6999abb2e1a, []int{13}
}

func (m *ParticipantTracks) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParticipantTracks.Unmarshal(m, b)
}
func (m *ParticipantTracks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParticipantTracks.Marshal(b, m, deterministic)
}
func (m *ParticipantTracks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParticipantTracks.Merge(m, src)
}
func (m *ParticipantTracks) XXX_Size() int {
	return xxx_messageInfo_ParticipantTracks.Size(m)
}
func (m *ParticipantTracks) XXX_DiscardUnknown() {
	xxx_messageInfo_ParticipantTracks.DiscardUnknown(m)
}

var xxx_messageInfo_ParticipantTracks proto.InternalMessageInfo

func (m *ParticipantTracks) GetParticipantSid() string {
	if m != nil {
		return m.ParticipantSid
	}
	return ""
}

func (m *ParticipantTracks) GetTrackSids() []string {
	if m != nil {
		return m.TrackSids
	}
	return nil
}

// details about the server
type ServerInfo struct {
	Edition  ServerInfo_Edition `protobuf:"varint,1,opt,name=edition,proto3,enum=tc.ServerInfo_Edition" json:"edition,omitempty"`
	Version  string             `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Protocol int32              `protobuf:"varint,3,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Region   string             `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	NodeId   string             `protobuf:"bytes,5,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// additional debugging information. sent only if server is in development mode
	DebugInfo            string   `protobuf:"bytes,6,opt,name=debug_info,json=debugInfo,proto3" json:"debug_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerInfo) Reset()         { *m = ServerInfo{} }
func (m *ServerInfo) String() string { return proto.CompactTextString(m) }
func (*ServerInfo) ProtoMessage()    {}
func (*ServerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_5199d6999abb2e1a, []int{14}
}

func (m *ServerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerInfo.Unmarshal(m, b)
}
func (m *ServerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerInfo.Marshal(b, m, deterministic)
}
func (m *ServerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerInfo.Merge(m, src)
}
func (m *ServerInfo) XXX_Size() int {
	return xxx_messageInfo_ServerInfo.Size(m)
}
func (m *ServerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ServerInfo proto.InternalMessageInfo

func (m *ServerInfo) GetEdition() ServerInfo_Edition {
	if m != nil {
		return m.Edition
	}
	return ServerInfo_Standard
}

func (m *ServerInfo) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ServerInfo) GetProtocol() int32 {
	if m != nil {
		return m.Protocol
	}
	return 0
}

func (m *ServerInfo) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *ServerInfo) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *ServerInfo) GetDebugInfo() string {
	if m != nil {
		return m.DebugInfo
	}
	return ""
}

// details about the client
type ClientInfo struct {
	Sdk            ClientInfo_SDK `protobuf:"varint,1,opt,name=sdk,proto3,enum=tc.ClientInfo_SDK" json:"sdk,omitempty"`
	Version        string         `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Protocol       int32          `protobuf:"varint,3,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Os             string         `protobuf:"bytes,4,opt,name=os,proto3" json:"os,omitempty"`
	OsVersion      string         `protobuf:"bytes,5,opt,name=os_version,json=osVersion,proto3" json:"os_version,omitempty"`
	DeviceModel    string         `protobuf:"bytes,6,opt,name=device_model,json=deviceModel,proto3" json:"device_model,omitempty"`
	Browser        string         `protobuf:"bytes,7,opt,name=browser,proto3" json:"browser,omitempty"`
	BrowserVersion string         `protobuf:"bytes,8,opt,name=browser_version,json=browserVersion,proto3" json:"browser_version,omitempty"`
	Address        string         `protobuf:"bytes,9,opt,name=address,proto3" json:"address,omitempty"`
	// wifi, wired, cellular, vpn, empty if not known
	Network              string   `protobuf:"bytes,10,opt,name=network,proto3" json:"network,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientInfo) Reset()         { *m = ClientInfo{} }
func (m *ClientInfo) String() string { return proto.CompactTextString(m) }
func (*ClientInfo) ProtoMessage()    {}
func (*ClientInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_5199d6999abb2e1a, []int{15}
}

func (m *ClientInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientInfo.Unmarshal(m, b)
}
func (m *ClientInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientInfo.Marshal(b, m, deterministic)
}
func (m *ClientInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientInfo.Merge(m, src)
}
func (m *ClientInfo) XXX_Size() int {
	return xxx_messageInfo_ClientInfo.Size(m)
}
func (m *ClientInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ClientInfo proto.InternalMessageInfo

func (m *ClientInfo) GetSdk() ClientInfo_SDK {
	if m != nil {
		return m.Sdk
	}
	return ClientInfo_UNKNOWN
}

func (m *ClientInfo) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ClientInfo) GetProtocol() int32 {
	if m != nil {
		return m.Protocol
	}
	return 0
}

func (m *ClientInfo) GetOs() string {
	if m != nil {
		return m.Os
	}
	return ""
}

func (m *ClientInfo) GetOsVersion() string {
	if m != nil {
		return m.OsVersion
	}
	return ""
}

func (m *ClientInfo) GetDeviceModel() string {
	if m != nil {
		return m.DeviceModel
	}
	return ""
}

func (m *ClientInfo) GetBrowser() string {
	if m != nil {
		return m.Browser
	}
	return ""
}

func (m *ClientInfo) GetBrowserVersion() string {
	if m != nil {
		return m.BrowserVersion
	}
	return ""
}

func (m *ClientInfo) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ClientInfo) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

// server provided client configuration
type ClientConfiguration struct {
	Video                *VideoConfiguration `protobuf:"bytes,1,opt,name=video,proto3" json:"video,omitempty"`
	Screen               *VideoConfiguration `protobuf:"bytes,2,opt,name=screen,proto3" json:"screen,omitempty"`
	ResumeConnection     ClientConfigSetting `protobuf:"varint,3,opt,name=resume_connection,json=resumeConnection,proto3,enum=tc.ClientConfigSetting" json:"resume_connection,omitempty"`
	DisabledCodecs       *DisabledCodecs     `protobuf:"bytes,4,opt,name=disabled_codecs,json=disabledCodecs,proto3" json:"disabled_codecs,omitempty"`
	ForceRelay           ClientConfigSetting `protobuf:"varint,5,opt,name=force_relay,json=forceRelay,proto3,enum=tc.ClientConfigSetting" json:"force_relay,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ClientConfiguration) Reset()         { *m = ClientConfiguration{} }
func (m *ClientConfiguration) String() string { return proto.CompactTextString(m) }
func (*ClientConfiguration) ProtoMessage()    {}
func (*ClientConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_5199d6999abb2e1a, []int{16}
}

func (m *ClientConfiguration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientConfiguration.Unmarshal(m, b)
}
func (m *ClientConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientConfiguration.Marshal(b, m, deterministic)
}
func (m *ClientConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientConfiguration.Merge(m, src)
}
func (m *ClientConfiguration) XXX_Size() int {
	return xxx_messageInfo_ClientConfiguration.Size(m)
}
func (m *ClientConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_ClientConfiguration proto.InternalMessageInfo

func (m *ClientConfiguration) GetVideo() *VideoConfiguration {
	if m != nil {
		return m.Video
	}
	return nil
}

func (m *ClientConfiguration) GetScreen() *VideoConfiguration {
	if m != nil {
		return m.Screen
	}
	return nil
}

func (m *ClientConfiguration) GetResumeConnection() ClientConfigSetting {
	if m != nil {
		return m.ResumeConnection
	}
	return ClientConfigSetting_UNSET
}

func (m *ClientConfiguration) GetDisabledCodecs() *DisabledCodecs {
	if m != nil {
		return m.DisabledCodecs
	}
	return nil
}

func (m *ClientConfiguration) GetForceRelay() ClientConfigSetting {
	if m != nil {
		return m.ForceRelay
	}
	return ClientConfigSetting_UNSET
}

type VideoConfiguration struct {
	HardwareEncoder      ClientConfigSetting `protobuf:"varint,1,opt,name=hardware_encoder,json=hardwareEncoder,proto3,enum=tc.ClientConfigSetting" json:"hardware_encoder,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *VideoConfiguration) Reset()         { *m = VideoConfiguration{} }
func (m *VideoConfiguration) String() string { return proto.CompactTextString(m) }
func (*VideoConfiguration) ProtoMessage()    {}
func (*VideoConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_5199d6999abb2e1a, []int{17}
}

func (m *VideoConfiguration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VideoConfiguration.Unmarshal(m, b)
}
func (m *VideoConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VideoConfiguration.Marshal(b, m, deterministic)
}
func (m *VideoConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoConfiguration.Merge(m, src)
}
func (m *VideoConfiguration) XXX_Size() int {
	return xxx_messageInfo_VideoConfiguration.Size(m)
}
func (m *VideoConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_VideoConfiguration proto.InternalMessageInfo

func (m *VideoConfiguration) GetHardwareEncoder() ClientConfigSetting {
	if m != nil {
		return m.HardwareEncoder
	}
	return ClientConfigSetting_UNSET
}

type DisabledCodecs struct {
	// disabled for both publish and subscribe
	Codecs []*Codec `protobuf:"bytes,1,rep,name=codecs,proto3" json:"codecs,omitempty"`
	// only disable for publish
	Publish              []*Codec `protobuf:"bytes,2,rep,name=publish,proto3" json:"publish,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisabledCodecs) Reset()         { *m = DisabledCodecs{} }
func (m *DisabledCodecs) String() string { return proto.CompactTextString(m) }
func (*DisabledCodecs) ProtoMessage()    {}
func (*DisabledCodecs) Descriptor() ([]byte, []int) {
	return fileDescriptor_5199d6999abb2e1a, []int{18}
}

func (m *DisabledCodecs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisabledCodecs.Unmarshal(m, b)
}
func (m *DisabledCodecs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisabledCodecs.Marshal(b, m, deterministic)
}
func (m *DisabledCodecs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisabledCodecs.Merge(m, src)
}
func (m *DisabledCodecs) XXX_Size() int {
	return xxx_messageInfo_DisabledCodecs.Size(m)
}
func (m *DisabledCodecs) XXX_DiscardUnknown() {
	xxx_messageInfo_DisabledCodecs.DiscardUnknown(m)
}

var xxx_messageInfo_DisabledCodecs proto.InternalMessageInfo

func (m *DisabledCodecs) GetCodecs() []*Codec {
	if m != nil {
		return m.Codecs
	}
	return nil
}

func (m *DisabledCodecs) GetPublish() []*Codec {
	if m != nil {
		return m.Publish
	}
	return nil
}

type RTPDrift struct {
	StartTime            *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Duration             float64                `protobuf:"fixed64,3,opt,name=duration,proto3" json:"duration,omitempty"`
	StartTimestamp       uint64                 `protobuf:"varint,4,opt,name=start_timestamp,json=startTimestamp,proto3" json:"start_timestamp,omitempty"`
	EndTimestamp         uint64                 `protobuf:"varint,5,opt,name=end_timestamp,json=endTimestamp,proto3" json:"end_timestamp,omitempty"`
	RtpClockTicks        uint64                 `protobuf:"varint,6,opt,name=rtp_clock_ticks,json=rtpClockTicks,proto3" json:"rtp_clock_ticks,omitempty"`
	DriftSamples         int64                  `protobuf:"varint,7,opt,name=drift_samples,json=driftSamples,proto3" json:"drift_samples,omitempty"`
	DriftMs              float64                `protobuf:"fixed64,8,opt,name=drift_ms,json=driftMs,proto3" json:"drift_ms,omitempty"`
	ClockRate            float64                `protobuf:"fixed64,9,opt,name=clock_rate,json=clockRate,proto3" json:"clock_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *RTPDrift) Reset()         { *m = RTPDrift{} }
func (m *RTPDrift) String() string { return proto.CompactTextString(m) }
func (*RTPDrift) ProtoMessage()    {}
func (*RTPDrift) Descriptor() ([]byte, []int) {
	return fileDescriptor_5199d6999abb2e1a, []int{19}
}

func (m *RTPDrift) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RTPDrift.Unmarshal(m, b)
}
func (m *RTPDrift) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RTPDrift.Marshal(b, m, deterministic)
}
func (m *RTPDrift) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RTPDrift.Merge(m, src)
}
func (m *RTPDrift) XXX_Size() int {
	return xxx_messageInfo_RTPDrift.Size(m)
}
func (m *RTPDrift) XXX_DiscardUnknown() {
	xxx_messageInfo_RTPDrift.DiscardUnknown(m)
}

var xxx_messageInfo_RTPDrift proto.InternalMessageInfo

func (m *RTPDrift) GetStartTime() *timestamppb.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *RTPDrift) GetEndTime() *timestamppb.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *RTPDrift) GetDuration() float64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *RTPDrift) GetStartTimestamp() uint64 {
	if m != nil {
		return m.StartTimestamp
	}
	return 0
}

func (m *RTPDrift) GetEndTimestamp() uint64 {
	if m != nil {
		return m.EndTimestamp
	}
	return 0
}

func (m *RTPDrift) GetRtpClockTicks() uint64 {
	if m != nil {
		return m.RtpClockTicks
	}
	return 0
}

func (m *RTPDrift) GetDriftSamples() int64 {
	if m != nil {
		return m.DriftSamples
	}
	return 0
}

func (m *RTPDrift) GetDriftMs() float64 {
	if m != nil {
		return m.DriftMs
	}
	return 0
}

func (m *RTPDrift) GetClockRate() float64 {
	if m != nil {
		return m.ClockRate
	}
	return 0
}

type RTPStats struct {
	StartTime            *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Duration             float64                `protobuf:"fixed64,3,opt,name=duration,proto3" json:"duration,omitempty"`
	Packets              uint32                 `protobuf:"varint,4,opt,name=packets,proto3" json:"packets,omitempty"`
	PacketRate           float64                `protobuf:"fixed64,5,opt,name=packet_rate,json=packetRate,proto3" json:"packet_rate,omitempty"`
	Bytes                uint64                 `protobuf:"varint,6,opt,name=bytes,proto3" json:"bytes,omitempty"`
	HeaderBytes          uint64                 `protobuf:"varint,39,opt,name=header_bytes,json=headerBytes,proto3" json:"header_bytes,omitempty"`
	Bitrate              float64                `protobuf:"fixed64,7,opt,name=bitrate,proto3" json:"bitrate,omitempty"`
	PacketsLost          uint32                 `protobuf:"varint,8,opt,name=packets_lost,json=packetsLost,proto3" json:"packets_lost,omitempty"`
	PacketLossRate       float64                `protobuf:"fixed64,9,opt,name=packet_loss_rate,json=packetLossRate,proto3" json:"packet_loss_rate,omitempty"`
	PacketLossPercentage float32                `protobuf:"fixed32,10,opt,name=packet_loss_percentage,json=packetLossPercentage,proto3" json:"packet_loss_percentage,omitempty"`
	PacketsDuplicate     uint32                 `protobuf:"varint,11,opt,name=packets_duplicate,json=packetsDuplicate,proto3" json:"packets_duplicate,omitempty"`
	PacketDuplicateRate  float64                `protobuf:"fixed64,12,opt,name=packet_duplicate_rate,json=packetDuplicateRate,proto3" json:"packet_duplicate_rate,omitempty"`
	BytesDuplicate       uint64                 `protobuf:"varint,13,opt,name=bytes_duplicate,json=bytesDuplicate,proto3" json:"bytes_duplicate,omitempty"`
	HeaderBytesDuplicate uint64                 `protobuf:"varint,40,opt,name=header_bytes_duplicate,json=headerBytesDuplicate,proto3" json:"header_bytes_duplicate,omitempty"`
	BitrateDuplicate     float64                `protobuf:"fixed64,14,opt,name=bitrate_duplicate,json=bitrateDuplicate,proto3" json:"bitrate_duplicate,omitempty"`
	PacketsPadding       uint32                 `protobuf:"varint,15,opt,name=packets_padding,json=packetsPadding,proto3" json:"packets_padding,omitempty"`
	PacketPaddingRate    float64                `protobuf:"fixed64,16,opt,name=packet_padding_rate,json=packetPaddingRate,proto3" json:"packet_padding_rate,omitempty"`
	BytesPadding         uint64                 `protobuf:"varint,17,opt,name=bytes_padding,json=bytesPadding,proto3" json:"bytes_padding,omitempty"`
	HeaderBytesPadding   uint64                 `protobuf:"varint,41,opt,name=header_bytes_padding,json=headerBytesPadding,proto3" json:"header_bytes_padding,omitempty"`
	BitratePadding       float64                `protobuf:"fixed64,18,opt,name=bitrate_padding,json=bitratePadding,proto3" json:"bitrate_padding,omitempty"`
	PacketsOutOfOrder    uint32                 `protobuf:"varint,19,opt,name=packets_out_of_order,json=packetsOutOfOrder,proto3" json:"packets_out_of_order,omitempty"`
	Frames               uint32                 `protobuf:"varint,20,opt,name=frames,proto3" json:"frames,omitempty"`
	FrameRate            float64                `protobuf:"fixed64,21,opt,name=frame_rate,json=frameRate,proto3" json:"frame_rate,omitempty"`
	JitterCurrent        float64                `protobuf:"fixed64,22,opt,name=jitter_current,json=jitterCurrent,proto3" json:"jitter_current,omitempty"`
	JitterMax            float64                `protobuf:"fixed64,23,opt,name=jitter_max,json=jitterMax,proto3" json:"jitter_max,omitempty"`
	GapHistogram         map[int32]uint32       `protobuf:"bytes,24,rep,name=gap_histogram,json=gapHistogram,proto3" json:"gap_histogram,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Nacks                uint32                 `protobuf:"varint,25,opt,name=nacks,proto3" json:"nacks,omitempty"`
	NackAcks             uint32                 `protobuf:"varint,37,opt,name=nack_acks,json=nackAcks,proto3" json:"nack_acks,omitempty"`
	NackMisses           uint32                 `protobuf:"varint,26,opt,name=nack_misses,json=nackMisses,proto3" json:"nack_misses,omitempty"`
	NackRepeated         uint32                 `protobuf:"varint,38,opt,name=nack_repeated,json=nackRepeated,proto3" json:"nack_repeated,omitempty"`
	Plis                 uint32                 `protobuf:"varint,27,opt,name=plis,proto3" json:"plis,omitempty"`
	LastPli              *timestamppb.Timestamp `protobuf:"bytes,28,opt,name=last_pli,json=lastPli,proto3" json:"last_pli,omitempty"`
	Firs                 uint32                 `protobuf:"varint,29,opt,name=firs,proto3" json:"firs,omitempty"`
	LastFir              *timestamppb.Timestamp `protobuf:"bytes,30,opt,name=last_fir,json=lastFir,proto3" json:"last_fir,omitempty"`
	RttCurrent           uint32                 `protobuf:"varint,31,opt,name=rtt_current,json=rttCurrent,proto3" json:"rtt_current,omitempty"`
	RttMax               uint32                 `protobuf:"varint,32,opt,name=rtt_max,json=rttMax,proto3" json:"rtt_max,omitempty"`
	KeyFrames            uint32                 `protobuf:"varint,33,opt,name=key_frames,json=keyFrames,proto3" json:"key_frames,omitempty"`
	LastKeyFrame         *timestamppb.Timestamp `protobuf:"bytes,34,opt,name=last_key_frame,json=lastKeyFrame,proto3" json:"last_key_frame,omitempty"`
	LayerLockPlis        uint32                 `protobuf:"varint,35,opt,name=layer_lock_plis,json=layerLockPlis,proto3" json:"layer_lock_plis,omitempty"`
	LastLayerLockPli     *timestamppb.Timestamp `protobuf:"bytes,36,opt,name=last_layer_lock_pli,json=lastLayerLockPli,proto3" json:"last_layer_lock_pli,omitempty"`
	PacketDrift          *RTPDrift              `protobuf:"bytes,44,opt,name=packet_drift,json=packetDrift,proto3" json:"packet_drift,omitempty"`
	ReportDrift          *RTPDrift              `protobuf:"bytes,45,opt,name=report_drift,json=reportDrift,proto3" json:"report_drift,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *RTPStats) Reset()         { *m = RTPStats{} }
func (m *RTPStats) String() string { return proto.CompactTextString(m) }
func (*RTPStats) ProtoMessage()    {}
func (*RTPStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_5199d6999abb2e1a, []int{20}
}

func (m *RTPStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RTPStats.Unmarshal(m, b)
}
func (m *RTPStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RTPStats.Marshal(b, m, deterministic)
}
func (m *RTPStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RTPStats.Merge(m, src)
}
func (m *RTPStats) XXX_Size() int {
	return xxx_messageInfo_RTPStats.Size(m)
}
func (m *RTPStats) XXX_DiscardUnknown() {
	xxx_messageInfo_RTPStats.DiscardUnknown(m)
}

var xxx_messageInfo_RTPStats proto.InternalMessageInfo

func (m *RTPStats) GetStartTime() *timestamppb.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *RTPStats) GetEndTime() *timestamppb.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *RTPStats) GetDuration() float64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *RTPStats) GetPackets() uint32 {
	if m != nil {
		return m.Packets
	}
	return 0
}

func (m *RTPStats) GetPacketRate() float64 {
	if m != nil {
		return m.PacketRate
	}
	return 0
}

func (m *RTPStats) GetBytes() uint64 {
	if m != nil {
		return m.Bytes
	}
	return 0
}

func (m *RTPStats) GetHeaderBytes() uint64 {
	if m != nil {
		return m.HeaderBytes
	}
	return 0
}

func (m *RTPStats) GetBitrate() float64 {
	if m != nil {
		return m.Bitrate
	}
	return 0
}

func (m *RTPStats) GetPacketsLost() uint32 {
	if m != nil {
		return m.PacketsLost
	}
	return 0
}

func (m *RTPStats) GetPacketLossRate() float64 {
	if m != nil {
		return m.PacketLossRate
	}
	return 0
}

func (m *RTPStats) GetPacketLossPercentage() float32 {
	if m != nil {
		return m.PacketLossPercentage
	}
	return 0
}

func (m *RTPStats) GetPacketsDuplicate() uint32 {
	if m != nil {
		return m.PacketsDuplicate
	}
	return 0
}

func (m *RTPStats) GetPacketDuplicateRate() float64 {
	if m != nil {
		return m.PacketDuplicateRate
	}
	return 0
}

func (m *RTPStats) GetBytesDuplicate() uint64 {
	if m != nil {
		return m.BytesDuplicate
	}
	return 0
}

func (m *RTPStats) GetHeaderBytesDuplicate() uint64 {
	if m != nil {
		return m.HeaderBytesDuplicate
	}
	return 0
}

func (m *RTPStats) GetBitrateDuplicate() float64 {
	if m != nil {
		return m.BitrateDuplicate
	}
	return 0
}

func (m *RTPStats) GetPacketsPadding() uint32 {
	if m != nil {
		return m.PacketsPadding
	}
	return 0
}

func (m *RTPStats) GetPacketPaddingRate() float64 {
	if m != nil {
		return m.PacketPaddingRate
	}
	return 0
}

func (m *RTPStats) GetBytesPadding() uint64 {
	if m != nil {
		return m.BytesPadding
	}
	return 0
}

func (m *RTPStats) GetHeaderBytesPadding() uint64 {
	if m != nil {
		return m.HeaderBytesPadding
	}
	return 0
}

func (m *RTPStats) GetBitratePadding() float64 {
	if m != nil {
		return m.BitratePadding
	}
	return 0
}

func (m *RTPStats) GetPacketsOutOfOrder() uint32 {
	if m != nil {
		return m.PacketsOutOfOrder
	}
	return 0
}

func (m *RTPStats) GetFrames() uint32 {
	if m != nil {
		return m.Frames
	}
	return 0
}

func (m *RTPStats) GetFrameRate() float64 {
	if m != nil {
		return m.FrameRate
	}
	return 0
}

func (m *RTPStats) GetJitterCurrent() float64 {
	if m != nil {
		return m.JitterCurrent
	}
	return 0
}

func (m *RTPStats) GetJitterMax() float64 {
	if m != nil {
		return m.JitterMax
	}
	return 0
}

func (m *RTPStats) GetGapHistogram() map[int32]uint32 {
	if m != nil {
		return m.GapHistogram
	}
	return nil
}

func (m *RTPStats) GetNacks() uint32 {
	if m != nil {
		return m.Nacks
	}
	return 0
}

func (m *RTPStats) GetNackAcks() uint32 {
	if m != nil {
		return m.NackAcks
	}
	return 0
}

func (m *RTPStats) GetNackMisses() uint32 {
	if m != nil {
		return m.NackMisses
	}
	return 0
}

func (m *RTPStats) GetNackRepeated() uint32 {
	if m != nil {
		return m.NackRepeated
	}
	return 0
}

func (m *RTPStats) GetPlis() uint32 {
	if m != nil {
		return m.Plis
	}
	return 0
}

func (m *RTPStats) GetLastPli() *timestamppb.Timestamp {
	if m != nil {
		return m.LastPli
	}
	return nil
}

func (m *RTPStats) GetFirs() uint32 {
	if m != nil {
		return m.Firs
	}
	return 0
}

func (m *RTPStats) GetLastFir() *timestamppb.Timestamp {
	if m != nil {
		return m.LastFir
	}
	return nil
}

func (m *RTPStats) GetRttCurrent() uint32 {
	if m != nil {
		return m.RttCurrent
	}
	return 0
}

func (m *RTPStats) GetRttMax() uint32 {
	if m != nil {
		return m.RttMax
	}
	return 0
}

func (m *RTPStats) GetKeyFrames() uint32 {
	if m != nil {
		return m.KeyFrames
	}
	return 0
}

func (m *RTPStats) GetLastKeyFrame() *timestamppb.Timestamp {
	if m != nil {
		return m.LastKeyFrame
	}
	return nil
}

func (m *RTPStats) GetLayerLockPlis() uint32 {
	if m != nil {
		return m.LayerLockPlis
	}
	return 0
}

func (m *RTPStats) GetLastLayerLockPli() *timestamppb.Timestamp {
	if m != nil {
		return m.LastLayerLockPli
	}
	return nil
}

func (m *RTPStats) GetPacketDrift() *RTPDrift {
	if m != nil {
		return m.PacketDrift
	}
	return nil
}

func (m *RTPStats) GetReportDrift() *RTPDrift {
	if m != nil {
		return m.ReportDrift
	}
	return nil
}

type TimedVersion struct {
	UnixMicro            int64    `protobuf:"varint,1,opt,name=unix_micro,json=unixMicro,proto3" json:"unix_micro,omitempty"`
	Ticks                int32    `protobuf:"varint,2,opt,name=ticks,proto3" json:"ticks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimedVersion) Reset()         { *m = TimedVersion{} }
func (m *TimedVersion) String() string { return proto.CompactTextString(m) }
func (*TimedVersion) ProtoMessage()    {}
func (*TimedVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_5199d6999abb2e1a, []int{21}
}

func (m *TimedVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimedVersion.Unmarshal(m, b)
}
func (m *TimedVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimedVersion.Marshal(b, m, deterministic)
}
func (m *TimedVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimedVersion.Merge(m, src)
}
func (m *TimedVersion) XXX_Size() int {
	return xxx_messageInfo_TimedVersion.Size(m)
}
func (m *TimedVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_TimedVersion.DiscardUnknown(m)
}

var xxx_messageInfo_TimedVersion proto.InternalMessageInfo

func (m *TimedVersion) GetUnixMicro() int64 {
	if m != nil {
		return m.UnixMicro
	}
	return 0
}

func (m *TimedVersion) GetTicks() int32 {
	if m != nil {
		return m.Ticks
	}
	return 0
}

func init() {
	proto.RegisterEnum("tc.AudioCodec", AudioCodec_name, AudioCodec_value)
	proto.RegisterEnum("tc.VideoCodec", VideoCodec_name, VideoCodec_value)
	proto.RegisterEnum("tc.ImageCodec", ImageCodec_name, ImageCodec_value)
	proto.RegisterEnum("tc.TrackType", TrackType_name, TrackType_value)
	proto.RegisterEnum("tc.TrackSource", TrackSource_name, TrackSource_value)
	proto.RegisterEnum("tc.VideoQuality", VideoQuality_name, VideoQuality_value)
	proto.RegisterEnum("tc.ConnectionQuality", ConnectionQuality_name, ConnectionQuality_value)
	proto.RegisterEnum("tc.ClientConfigSetting", ClientConfigSetting_name, ClientConfigSetting_value)
	proto.RegisterEnum("tc.DisconnectReason", DisconnectReason_name, DisconnectReason_value)
	proto.RegisterEnum("tc.ReconnectReason", ReconnectReason_name, ReconnectReason_value)
	proto.RegisterEnum("tc.SubscriptionError", SubscriptionError_name, SubscriptionError_value)
	proto.RegisterEnum("tc.ParticipantInfo_State", ParticipantInfo_State_name, ParticipantInfo_State_value)
	proto.RegisterEnum("tc.Encryption_Type", Encryption_Type_name, Encryption_Type_value)
	proto.RegisterEnum("tc.DataPacket_Kind", DataPacket_Kind_name, DataPacket_Kind_value)
	proto.RegisterEnum("tc.ServerInfo_Edition", ServerInfo_Edition_name, ServerInfo_Edition_value)
	proto.RegisterEnum("tc.ClientInfo_SDK", ClientInfo_SDK_name, ClientInfo_SDK_value)
	proto.RegisterType((*Room)(nil), "tc.Room")
	proto.RegisterType((*Codec)(nil), "tc.Codec")
	proto.RegisterType((*PlayoutDelay)(nil), "tc.PlayoutDelay")
	proto.RegisterType((*ParticipantPermission)(nil), "tc.ParticipantPermission")
	proto.RegisterType((*ParticipantInfo)(nil), "tc.ParticipantInfo")
	proto.RegisterType((*Encryption)(nil), "tc.Encryption")
	proto.RegisterType((*SimulcastCodecInfo)(nil), "tc.SimulcastCodecInfo")
	proto.RegisterType((*TrackInfo)(nil), "tc.TrackInfo")
	proto.RegisterType((*VideoLayer)(nil), "tc.VideoLayer")
	proto.RegisterType((*DataPacket)(nil), "tc.DataPacket")
	proto.RegisterType((*ActiveSpeakerUpdate)(nil), "tc.ActiveSpeakerUpdate")
	proto.RegisterType((*SpeakerInfo)(nil), "tc.SpeakerInfo")
	proto.RegisterType((*UserPacket)(nil), "tc.UserPacket")
	proto.RegisterType((*ParticipantTracks)(nil), "tc.ParticipantTracks")
	proto.RegisterType((*ServerInfo)(nil), "tc.ServerInfo")
	proto.RegisterType((*ClientInfo)(nil), "tc.ClientInfo")
	proto.RegisterType((*ClientConfiguration)(nil), "tc.ClientConfiguration")
	proto.RegisterType((*VideoConfiguration)(nil), "tc.VideoConfiguration")
	proto.RegisterType((*DisabledCodecs)(nil), "tc.DisabledCodecs")
	proto.RegisterType((*RTPDrift)(nil), "tc.RTPDrift")
	proto.RegisterType((*RTPStats)(nil), "tc.RTPStats")
	proto.RegisterMapType((map[int32]uint32)(nil), "tc.RTPStats.GapHistogramEntry")
	proto.RegisterType((*TimedVersion)(nil), "tc.TimedVersion")
}

func init() { proto.RegisterFile("tc_models.proto", fileDescriptor_5199d6999abb2e1a) }

var fileDescriptor_5199d6999abb2e1a = []byte{
	// 3328 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x59, 0xcd, 0x72, 0xe3, 0x48,
	0x72, 0x6e, 0xfe, 0x89, 0x64, 0x8a, 0xa4, 0x20, 0x48, 0xad, 0xc6, 0x68, 0x76, 0xb6, 0xbb, 0xd9,
	0xf3, 0xa3, 0xd1, 0xac, 0xa5, 0x71, 0xcf, 0xec, 0xc4, 0xd8, 0x1b, 0xe1, 0x35, 0x05, 0x42, 0x2d,
	0x4c, 0xf3, 0xcf, 0x05, 0x50, 0x33, 0x63, 0x1f, 0x60, 0x08, 0x28, 0x49, 0x58, 0x91, 0x00, 0x0d,
	0x14, 0xbb, 0x5b, 0x07, 0x9f, 0x7c, 0xf2, 0xc1, 0x07, 0x47, 0xf8, 0x09, 0xfc, 0x04, 0x3e, 0x38,
	0xc2, 0x11, 0x7b, 0xf4, 0xd3, 0xf8, 0xe2, 0x17, 0xf0, 0xc9, 0x91, 0x59, 0x05, 0x12, 0x9c, 0xee,
	0xdd, 0x9e, 0xf0, 0xc9, 0x37, 0x64, 0xe6, 0x57, 0x59, 0xf9, 0x57, 0x55, 0x59, 0x05, 0xd8, 0x11,
	0x81, 0x37, 0x4f, 0x42, 0x3e, 0xcb, 0x4e, 0x16, 0x69, 0x22, 0x12, 0xbd, 0x2c, 0x82, 0xc3, 0xc7,
	0x37, 0x49, 0x72, 0x33, 0xe3, 0xa7, 0xc4, 0xb9, 0x5a, 0x5e, 0x9f, 0x8a, 0x68, 0xce, 0x33, 0xe1,
	0xcf, 0x17, 0x12, 0xd4, 0xfd, 0xe7, 0x0a, 0x54, 0x59, 0x92, 0xcc, 0x75, 0x0d, 0x2a, 0x59, 0x14,
	0x1a, 0xa5, 0x27, 0xa5, 0xa3, 0x26, 0xc3, 0x4f, 0x5d, 0x87, 0x6a, 0xec, 0xcf, 0xb9, 0x51, 0x26,
	0x16, 0x7d, 0xeb, 0xcf, 0xa0, 0xcd, 0xe7, 0x0b, 0x71, 0xef, 0xa1, 0x9e, 0x64, 0x29, 0x8c, 0xca,
	0x93, 0xd2, 0x51, 0x9b, 0xb5, 0x88, 0xe9, 0x4a, 0x9e, 0xfe, 0x39, 0x68, 0x73, 0xff, 0x8d, 0xb7,
	0xf0, 0x53, 0x11, 0x05, 0xd1, 0xc2, 0x8f, 0x45, 0x66, 0x54, 0x09, 0xb7, 0x33, 0xf7, 0xdf, 0x4c,
	0x0a, 0x6c, 0xd4, 0x17, 0xa4, 0xdc, 0x17, 0x51, 0x12, 0x93, 0x4a, 0xa3, 0xf6, 0xa4, 0x74, 0x54,
	0x61, 0xad, 0x9c, 0x89, 0x2a, 0x11, 0x24, 0x96, 0x69, 0xec, 0x2d, 0xfc, 0x2c, 0x7b, 0x9d, 0xa4,
	0xa1, 0xb1, 0x45, 0x16, 0xb5, 0x90, 0x39, 0x51, 0x3c, 0xfd, 0x4b, 0xe8, 0xf0, 0xd8, 0xbf, 0x9a,
	0xf1, 0xd0, 0x0b, 0x92, 0x90, 0x07, 0x99, 0x51, 0x7f, 0x52, 0x39, 0xda, 0x7e, 0xde, 0x3c, 0x11,
	0xc1, 0x89, 0x89, 0x1c, 0xd6, 0x56, 0x00, 0xa2, 0x32, 0xfd, 0x10, 0x1a, 0x73, 0x2e, 0xfc, 0xd0,
	0x17, 0xbe, 0xd1, 0x20, 0x8d, 0x2b, 0x1a, 0x5d, 0x88, 0x97, 0xf3, 0x4d, 0x17, 0x9a, 0xd2, 0x85,
	0x78, 0x39, 0xdf, 0x70, 0xe1, 0x13, 0xe8, 0x10, 0x74, 0x79, 0x35, 0x8b, 0xb2, 0x5b, 0x9e, 0x66,
	0xc6, 0x36, 0x01, 0xdb, 0x08, 0x5c, 0x31, 0x51, 0xa3, 0x1f, 0x88, 0xe8, 0x15, 0xf7, 0x52, 0x1e,
	0x24, 0x69, 0x18, 0xc5, 0x37, 0x06, 0x3c, 0x29, 0x1d, 0x35, 0xd8, 0x8e, 0xe4, 0xb3, 0x9c, 0xdd,
	0xfd, 0x16, 0x6a, 0x64, 0x22, 0x66, 0x60, 0x8e, 0x41, 0x91, 0x49, 0xa1, 0x6f, 0xfd, 0x43, 0x68,
	0x5e, 0xcf, 0xc5, 0xc2, 0x9b, 0x45, 0x71, 0x9e, 0x9a, 0x06, 0x32, 0x06, 0x51, 0xcc, 0xbb, 0x03,
	0x68, 0x4d, 0x66, 0xfe, 0x7d, 0xb2, 0x14, 0x7d, 0x3e, 0xf3, 0xef, 0x75, 0x03, 0xea, 0xca, 0x67,
	0xd2, 0xd1, 0x60, 0x39, 0x89, 0xe9, 0x9e, 0x47, 0x31, 0x29, 0x68, 0x33, 0xfc, 0x24, 0x8e, 0xff,
	0x46, 0x25, 0x14, 0x3f, 0xbb, 0xff, 0x59, 0x86, 0x87, 0x05, 0x57, 0x27, 0x3c, 0x9d, 0x47, 0x59,
	0x16, 0x25, 0x31, 0xa5, 0xcd, 0x8f, 0xbd, 0x6c, 0x79, 0x95, 0x05, 0x69, 0x74, 0xc5, 0x95, 0xf6,
	0x56, 0xe0, 0xc7, 0x4e, 0xce, 0xd3, 0x1f, 0xc3, 0x36, 0x82, 0x54, 0x60, 0x68, 0xaa, 0x06, 0x83,
	0xc0, 0x8f, 0x55, 0x54, 0xf4, 0x23, 0xd0, 0x0a, 0x00, 0x8f, 0x12, 0x51, 0x21, 0x54, 0x67, 0x8d,
	0xea, 0x63, 0x3a, 0x7e, 0x0b, 0x7b, 0x45, 0x64, 0x96, 0x2c, 0xd3, 0x80, 0x63, 0x46, 0x2a, 0x47,
	0x9d, 0xe7, 0x3b, 0x98, 0x61, 0x37, 0xf5, 0x83, 0x3b, 0x87, 0xf8, 0x6c, 0x77, 0x3d, 0x5a, 0x72,
	0x32, 0xfd, 0x00, 0xb6, 0x6e, 0xa3, 0x30, 0xe4, 0xb1, 0x51, 0xa7, 0x09, 0x14, 0x85, 0x35, 0x20,
	0xd3, 0xc1, 0x53, 0xaa, 0x81, 0x06, 0x5b, 0xd1, 0xfa, 0x89, 0x9c, 0x74, 0xb9, 0x08, 0x7d, 0xc1,
	0xbd, 0x55, 0xa9, 0xc8, 0xa4, 0xe1, 0x1c, 0x53, 0x92, 0x0c, 0xf3, 0x9a, 0xd9, 0x87, 0x9a, 0x7f,
	0xc3, 0x63, 0x41, 0xf9, 0x6f, 0x30, 0x49, 0x74, 0xff, 0xbd, 0x02, 0x3b, 0x85, 0x20, 0xda, 0xf1,
	0x75, 0xf2, 0x8e, 0xb5, 0x76, 0x08, 0x8d, 0x28, 0xe4, 0xb1, 0x88, 0xc4, 0x7d, 0x9e, 0xd4, 0x9c,
	0xd6, 0x4f, 0xa1, 0x96, 0x09, 0x5f, 0x70, 0x8a, 0x4d, 0xe7, 0xf9, 0x07, 0xe8, 0xee, 0x4f, 0x34,
	0x9e, 0x38, 0x08, 0x60, 0x12, 0xa7, 0x7f, 0x02, 0x5b, 0x02, 0xc3, 0x81, 0xab, 0x0e, 0x97, 0x40,
	0x7b, 0x15, 0x20, 0xc4, 0x32, 0x25, 0xdc, 0xa8, 0xff, 0xda, 0x4f, 0xea, 0xff, 0x43, 0x68, 0xfe,
	0x2e, 0x89, 0x62, 0x1e, 0x7a, 0xbe, 0xa0, 0xe5, 0x56, 0x61, 0x0d, 0xc9, 0xe8, 0x89, 0xd5, 0xc6,
	0xd0, 0x2c, 0x6c, 0x0c, 0x06, 0xd4, 0x5f, 0xf1, 0x14, 0x8b, 0x83, 0x02, 0xd4, 0x66, 0x39, 0xa9,
	0xff, 0x19, 0xc0, 0x62, 0x55, 0x39, 0x14, 0x9b, 0xed, 0xb7, 0x7c, 0x58, 0x97, 0x16, 0x2b, 0x80,
	0x31, 0x6b, 0x29, 0xbf, 0xc1, 0x61, 0x2d, 0x9a, 0x4a, 0x51, 0xfa, 0x53, 0x68, 0x45, 0xd9, 0x7a,
	0xc5, 0x19, 0x6d, 0x0a, 0xf8, 0x76, 0x94, 0xad, 0xd6, 0x5b, 0xf7, 0x2f, 0xa0, 0x46, 0x31, 0xd1,
	0xb7, 0xa1, 0xfe, 0xdd, 0xd8, 0x1e, 0xd9, 0xa3, 0x17, 0xda, 0x03, 0x1d, 0x60, 0x0b, 0x09, 0xab,
	0xaf, 0x95, 0xf0, 0xbb, 0x67, 0xba, 0xf6, 0xa5, 0xa5, 0x95, 0x75, 0x0d, 0x5a, 0x7d, 0xdb, 0x31,
	0xc7, 0xa3, 0x91, 0x65, 0xba, 0x56, 0x5f, 0xab, 0x74, 0xbf, 0x02, 0xb0, 0xe2, 0x20, 0xbd, 0x5f,
	0xe0, 0x2e, 0xd4, 0xfd, 0x04, 0xaa, 0xee, 0xfd, 0x82, 0xeb, 0x0d, 0xa8, 0x8e, 0xc6, 0x23, 0x4b,
	0x7b, 0xa0, 0xd7, 0xa1, 0xf2, 0xc2, 0x1c, 0x4a, 0x35, 0xe6, 0xd4, 0x71, 0xc7, 0x43, 0xad, 0xdc,
	0xfd, 0x7b, 0xd0, 0x9d, 0x68, 0xbe, 0x9c, 0x05, 0x7e, 0x26, 0x68, 0x05, 0x53, 0xb6, 0x3f, 0x84,
	0x26, 0xae, 0x5c, 0x4f, 0xdc, 0x2f, 0xf2, 0xa5, 0xdc, 0x40, 0x06, 0x69, 0xa4, 0x75, 0x18, 0xaa,
	0x9c, 0xe3, 0x27, 0x72, 0x82, 0x28, 0xa4, 0x64, 0x37, 0x19, 0x7e, 0xea, 0x9f, 0xc2, 0xd6, 0xcc,
	0xbf, 0xc7, 0x9d, 0x45, 0xe6, 0xb3, 0x83, 0xd1, 0xbb, 0x8c, 0x42, 0x9e, 0x0c, 0x90, 0xcd, 0x94,
	0xb4, 0xfb, 0x4f, 0x55, 0x68, 0xae, 0xd2, 0xfc, 0x8e, 0x22, 0x7b, 0x0a, 0x55, 0xb2, 0xa1, 0x4c,
	0x75, 0xb4, 0xae, 0x0a, 0x34, 0x84, 0x91, 0x68, 0x95, 0xda, 0x4a, 0x21, 0xb5, 0xfb, 0x50, 0x9b,
	0x2f, 0x05, 0x0f, 0x69, 0x0f, 0x6f, 0x30, 0x49, 0x20, 0xf7, 0x75, 0x14, 0x8a, 0x5b, 0x2a, 0x9d,
	0x36, 0x93, 0x04, 0xad, 0x33, 0x1e, 0xdd, 0xdc, 0xca, 0xa2, 0x69, 0x33, 0x45, 0xe9, 0xbf, 0x80,
	0x66, 0x96, 0x47, 0x46, 0x2d, 0xc1, 0x35, 0x03, 0x77, 0x8a, 0x30, 0xca, 0x70, 0x63, 0xf2, 0x42,
	0xf1, 0x46, 0x2d, 0x44, 0x50, 0xac, 0xbe, 0x78, 0xa3, 0x7f, 0x06, 0x5b, 0x72, 0xcd, 0x53, 0xcd,
	0xbd, 0x63, 0xc9, 0x2b, 0x71, 0x21, 0x54, 0xf0, 0xc7, 0x42, 0xb5, 0x99, 0x93, 0xed, 0x77, 0xe7,
	0xa4, 0xb5, 0xce, 0xc9, 0x09, 0x6c, 0xa9, 0x43, 0xa5, 0x4d, 0x6a, 0x0f, 0x50, 0xed, 0xdb, 0xa9,
	0x66, 0x0a, 0x85, 0x61, 0xc8, 0x04, 0x4f, 0x79, 0x62, 0x74, 0xe4, 0x76, 0x23, 0xa9, 0xa2, 0xa3,
	0x29, 0x0f, 0x8d, 0x9d, 0x0d, 0x47, 0x19, 0x0f, 0xf5, 0xaf, 0x00, 0xf8, 0xaa, 0xec, 0x0c, 0x8d,
	0x9c, 0xdd, 0xc3, 0xc9, 0xd6, 0xc5, 0x78, 0x42, 0xe9, 0x2a, 0xc0, 0xe4, 0x6c, 0x29, 0xf7, 0xe7,
	0xc6, 0xae, 0x5c, 0x26, 0x92, 0xea, 0xfe, 0x4b, 0x09, 0x60, 0xed, 0xbb, 0x7e, 0x0c, 0xf5, 0xbf,
	0x5b, 0xfa, 0x33, 0xdc, 0x62, 0x4a, 0xa4, 0x58, 0x5b, 0x05, 0xe7, 0xaf, 0x24, 0x9f, 0xe5, 0x80,
	0x75, 0x76, 0xcb, 0xef, 0xce, 0x6e, 0x65, 0x23, 0xbb, 0x06, 0xd4, 0xaf, 0x22, 0x91, 0xe2, 0x1e,
	0x25, 0xcf, 0xf9, 0x9c, 0xc4, 0x7a, 0xca, 0xb2, 0x34, 0x50, 0x45, 0x42, 0xdf, 0xdd, 0xdf, 0x97,
	0x00, 0x70, 0x57, 0x9f, 0xf8, 0xc1, 0x1d, 0x17, 0xfa, 0x67, 0x50, 0xbd, 0x8b, 0xe2, 0x50, 0xd9,
	0x44, 0xce, 0xae, 0xa5, 0x27, 0x2f, 0xa3, 0x38, 0x64, 0x04, 0xd0, 0x3f, 0x86, 0xea, 0x32, 0xe3,
	0x29, 0x99, 0xa4, 0x32, 0x3b, 0xcd, 0x78, 0x2a, 0x81, 0x17, 0x0f, 0x18, 0x49, 0xf5, 0xaf, 0xa0,
	0x9e, 0x2d, 0xb8, 0x7f, 0xc7, 0x53, 0x32, 0x72, 0xfb, 0xf9, 0x23, 0x04, 0xf6, 0xe8, 0x88, 0x75,
	0xa4, 0x40, 0xee, 0xdb, 0x17, 0x0f, 0x58, 0x8e, 0xec, 0x3e, 0x86, 0x2a, 0x4e, 0xa4, 0xb7, 0xa0,
	0xc1, 0xac, 0x81, 0xdd, 0x3b, 0x1b, 0xe0, 0x1a, 0x6f, 0x42, 0x6d, 0x30, 0x76, 0x9c, 0x1f, 0xb5,
	0xd2, 0x59, 0x1d, 0x6a, 0xaf, 0xfc, 0xd9, 0x92, 0x77, 0xcf, 0x60, 0xef, 0x1d, 0xba, 0xf4, 0x2f,
	0xa0, 0xa1, 0x74, 0x65, 0x46, 0x89, 0x4a, 0x84, 0x4a, 0x54, 0x81, 0xa8, 0x36, 0x56, 0x80, 0xee,
	0x10, 0xb6, 0x0b, 0x82, 0x77, 0x2c, 0xd4, 0x7d, 0xa8, 0xcd, 0xf8, 0x2b, 0x3e, 0x23, 0x57, 0xcb,
	0x4c, 0x12, 0x18, 0x7d, 0xd9, 0x29, 0xa8, 0x43, 0x52, 0x51, 0xdd, 0xff, 0x29, 0x01, 0xac, 0x03,
	0xa1, 0x7f, 0x06, 0x3b, 0x85, 0xb6, 0xc5, 0x5b, 0xab, 0xee, 0x14, 0xd8, 0x4e, 0x14, 0xea, 0x7f,
	0x0a, 0xfb, 0x45, 0xe0, 0xea, 0xfc, 0x91, 0x67, 0xc1, 0x5e, 0x41, 0x66, 0xe7, 0x47, 0x91, 0x01,
	0xf5, 0x85, 0x7f, 0x3f, 0x4b, 0x7c, 0xb9, 0x63, 0xb5, 0x58, 0x4e, 0x62, 0x7b, 0x13, 0xf2, 0x4c,
	0x44, 0xb1, 0xec, 0xe5, 0xb2, 0x28, 0xcc, 0x8c, 0xca, 0x93, 0xca, 0x51, 0x93, 0xed, 0x14, 0xf8,
	0x4e, 0x14, 0x66, 0xfa, 0xaf, 0xe1, 0xa0, 0x08, 0x55, 0xf3, 0x46, 0x3c, 0x33, 0xb6, 0x68, 0xc0,
	0xc3, 0x82, 0xd4, 0x5e, 0x09, 0x31, 0x28, 0x22, 0x59, 0x44, 0x01, 0x95, 0x58, 0x93, 0x49, 0xa2,
	0xfb, 0x37, 0xb0, 0x5b, 0x38, 0x47, 0x5c, 0x79, 0xb2, 0xfd, 0xec, 0x10, 0x7c, 0x04, 0x40, 0x87,
	0xa1, 0xb4, 0xb7, 0x4c, 0xd3, 0x37, 0x89, 0x83, 0x96, 0x76, 0xff, 0xab, 0x04, 0xe0, 0xf0, 0xf4,
	0x95, 0x4a, 0xd4, 0x97, 0x50, 0xe7, 0x61, 0x44, 0x2b, 0x53, 0x16, 0xab, 0xdc, 0x06, 0x56, 0x80,
	0x13, 0x4b, 0x4a, 0x59, 0x0e, 0x2b, 0x9e, 0x8a, 0x72, 0x87, 0x5f, 0x9d, 0x8a, 0x87, 0xd0, 0xa0,
	0x06, 0x3c, 0x48, 0x66, 0x94, 0xce, 0x1a, 0x5b, 0xd1, 0x85, 0x63, 0xaf, 0xba, 0x71, 0xec, 0x3d,
	0x82, 0x7a, 0x9c, 0x84, 0xdc, 0x8b, 0x42, 0x95, 0xa3, 0x2d, 0x24, 0x6d, 0x72, 0x23, 0xe4, 0x57,
	0xcb, 0x1b, 0x2f, 0x8a, 0xaf, 0x13, 0xd5, 0x1d, 0x37, 0x89, 0x83, 0x66, 0x75, 0xbb, 0x50, 0x57,
	0x96, 0x61, 0x81, 0x3b, 0xc2, 0x8f, 0x43, 0x3f, 0x0d, 0x65, 0x81, 0x9b, 0xb3, 0x64, 0x19, 0x6a,
	0xa5, 0xee, 0x7f, 0x54, 0x00, 0xcc, 0x59, 0xc4, 0x55, 0x87, 0xf2, 0x31, 0x54, 0xb2, 0xf0, 0x4e,
	0xb9, 0xa9, 0x53, 0x0b, 0xbd, 0x12, 0x9e, 0x38, 0xfd, 0x97, 0x0c, 0xc5, 0xff, 0x47, 0xf7, 0x3a,
	0x50, 0x4e, 0x32, 0xe5, 0x5a, 0x39, 0xc9, 0xd0, 0xfa, 0x24, 0xf3, 0x72, 0x45, 0xd2, 0xb3, 0x66,
	0x92, 0x5d, 0x2a, 0x55, 0x4f, 0xa1, 0x15, 0xf2, 0x57, 0x51, 0xc0, 0xe5, 0xed, 0x46, 0xb9, 0xb7,
	0x2d, 0x79, 0x43, 0x64, 0xd1, 0xfe, 0x93, 0x26, 0xaf, 0x71, 0x73, 0xa8, 0x4b, 0x3b, 0x14, 0x89,
	0x95, 0xa0, 0x3e, 0x57, 0x13, 0xc8, 0x56, 0xbf, 0xa3, 0xd8, 0xf9, 0x2c, 0x06, 0xd4, 0xfd, 0x30,
	0x4c, 0x79, 0x96, 0xa9, 0xb6, 0x26, 0x27, 0x51, 0x12, 0x73, 0xf1, 0x3a, 0x49, 0xef, 0xa8, 0xb3,
	0x69, 0xb2, 0x9c, 0xec, 0xfe, 0x43, 0x09, 0x2a, 0x4e, 0xff, 0x25, 0xb6, 0x18, 0xd3, 0xd1, 0xcb,
	0xd1, 0xf8, 0xfb, 0x91, 0xf6, 0x40, 0xdf, 0x82, 0xf2, 0x77, 0x8e, 0x56, 0xc2, 0xd8, 0x3a, 0xdf,
	0xdb, 0xe7, 0xae, 0x56, 0x46, 0x79, 0x6f, 0xd4, 0x67, 0x63, 0xbb, 0xaf, 0x55, 0x90, 0x38, 0x1f,
	0x4c, 0x5d, 0xd7, 0x62, 0x5a, 0x15, 0xc1, 0x2f, 0xc6, 0x5a, 0x0d, 0xc1, 0xd3, 0x91, 0xed, 0xfe,
	0xa8, 0x6d, 0x61, 0x2b, 0xc2, 0xac, 0x9e, 0xe9, 0x7a, 0xa3, 0x1e, 0x35, 0x27, 0x75, 0x6c, 0x3a,
	0xd8, 0xd4, 0x71, 0xb5, 0x06, 0xf6, 0x1a, 0x93, 0x1f, 0xdd, 0x8b, 0xf1, 0x48, 0x6b, 0x62, 0x03,
	0x62, 0x4e, 0x26, 0x1a, 0x74, 0xff, 0xad, 0x0c, 0x7b, 0x32, 0x39, 0x66, 0x12, 0x5f, 0x47, 0x37,
	0xcb, 0x94, 0x56, 0x8e, 0xfe, 0x2b, 0xa8, 0xbd, 0xc2, 0xbd, 0x9d, 0x92, 0xa8, 0x8e, 0x2c, 0xda,
	0xec, 0x37, 0x60, 0x4c, 0x82, 0xf0, 0x84, 0xcb, 0x82, 0x94, 0xf3, 0x58, 0x6d, 0xaf, 0x7f, 0x08,
	0xae, 0x50, 0x7a, 0x1f, 0x76, 0x53, 0x9e, 0x2d, 0xe7, 0xdc, 0x0b, 0x92, 0x38, 0xe6, 0x01, 0xad,
	0x0a, 0xd9, 0xa0, 0x3e, 0x5a, 0x97, 0x8b, 0x1c, 0xeb, 0x70, 0x21, 0xa2, 0xf8, 0x86, 0x69, 0x72,
	0x84, 0xb9, 0x1a, 0xa0, 0xff, 0x06, 0x76, 0xd4, 0xe1, 0xb7, 0xba, 0xb5, 0x55, 0x69, 0x7a, 0x2a,
	0xb9, 0xbe, 0x12, 0xc9, 0xfb, 0x1a, 0xeb, 0x84, 0x1b, 0xb4, 0xfe, 0x2d, 0x6c, 0x5f, 0x27, 0x69,
	0x80, 0x47, 0xe9, 0xcc, 0x97, 0xdb, 0xd6, 0x1f, 0x99, 0x1c, 0x08, 0xcb, 0x10, 0xda, 0xfd, 0x01,
	0xf4, 0xb7, 0x5d, 0xd3, 0xcf, 0x40, 0xbb, 0xf5, 0xd3, 0xf0, 0xb5, 0x9f, 0x72, 0x8f, 0xc7, 0x68,
	0x4e, 0xaa, 0x16, 0xc0, 0x1f, 0x54, 0xba, 0x93, 0x0f, 0xb0, 0x24, 0xbe, 0xfb, 0x03, 0x74, 0x36,
	0xad, 0xd6, 0x9f, 0xae, 0x5a, 0x87, 0xd2, 0x4f, 0xef, 0xa3, 0x79, 0xb7, 0xf0, 0x0c, 0xea, 0xeb,
	0x4b, 0xd2, 0x4f, 0x30, 0xb9, 0xa4, 0xfb, 0xdf, 0x65, 0x68, 0x30, 0x77, 0xd2, 0x4f, 0xa3, 0x6b,
	0x81, 0x3d, 0x75, 0x26, 0xfc, 0x54, 0xc8, 0x3b, 0xb3, 0x4c, 0xf0, 0xe1, 0x89, 0xbc, 0xeb, 0x9f,
	0xe4, 0x77, 0xfd, 0x13, 0x37, 0xbf, 0xeb, 0xb3, 0x26, 0xa1, 0xe9, 0x32, 0xfd, 0x6b, 0x68, 0xf0,
	0x38, 0x94, 0x03, 0xcb, 0xef, 0x1d, 0x58, 0xe7, 0x71, 0x48, 0xc3, 0x0e, 0xa1, 0x11, 0xaa, 0x40,
	0x51, 0x9a, 0x4b, 0x6c, 0x45, 0xe3, 0x22, 0x5b, 0x5b, 0x43, 0xe3, 0x28, 0x8b, 0x55, 0xd6, 0x59,
	0x4d, 0x4b, 0x5c, 0x7a, 0x3d, 0x50, 0x73, 0x4b, 0x58, 0x8d, 0x60, 0x2d, 0x35, 0x89, 0x04, 0x7d,
	0x0a, 0x3b, 0xa9, 0x58, 0x78, 0xc1, 0x2c, 0x09, 0xee, 0x3c, 0x11, 0xe1, 0x35, 0x66, 0x8b, 0x60,
	0xed, 0x54, 0x2c, 0x4c, 0xe4, 0xba, 0xc8, 0x44, 0x65, 0x21, 0x06, 0xc3, 0xcb, 0xfc, 0xf9, 0x62,
	0xc6, 0x33, 0x5a, 0xfa, 0x15, 0xd6, 0x22, 0xa6, 0x23, 0x79, 0xfa, 0x07, 0xd0, 0x90, 0xa0, 0x79,
	0x46, 0x0b, 0xbf, 0xc4, 0xea, 0x44, 0x0f, 0x69, 0xdb, 0x91, 0x73, 0x50, 0xdf, 0xd2, 0x24, 0x61,
	0x93, 0x38, 0xcc, 0x17, 0xbc, 0xfb, 0xaf, 0x1d, 0x8a, 0x37, 0x5e, 0x22, 0xb2, 0xff, 0x67, 0xf1,
	0xa6, 0x53, 0x18, 0xcf, 0xfa, 0xfc, 0x59, 0x25, 0x27, 0xb1, 0xbf, 0x94, 0x9f, 0xd2, 0xa9, 0x1a,
	0x0d, 0x04, 0xc9, 0x42, 0xaf, 0xf0, 0x10, 0xbd, 0xba, 0x17, 0x3c, 0x0f, 0xa9, 0x24, 0x70, 0x8b,
	0xbd, 0xe5, 0x7e, 0xc8, 0x53, 0x4f, 0x0a, 0x3f, 0x23, 0xe1, 0xb6, 0xe4, 0x9d, 0x11, 0xa4, 0xd0,
	0xe2, 0xd5, 0x65, 0x1c, 0xf3, 0x16, 0xef, 0x29, 0xb4, 0xd4, 0xf4, 0xde, 0x2c, 0xc9, 0x04, 0x85,
	0xb9, 0xcd, 0x94, 0x1d, 0xd9, 0x20, 0xc9, 0x04, 0x5e, 0xf4, 0x95, 0x59, 0xb3, 0x24, 0xcb, 0x8a,
	0x01, 0xef, 0x48, 0xfe, 0x20, 0xc9, 0x32, 0xb2, 0xef, 0x6b, 0x38, 0x28, 0x22, 0x17, 0x3c, 0x0d,
	0x78, 0x2c, 0xfc, 0x1b, 0x4e, 0x7b, 0x6f, 0x99, 0xed, 0xaf, 0xf1, 0x93, 0x95, 0x4c, 0xff, 0x02,
	0x76, 0x73, 0x13, 0xc2, 0xe5, 0x62, 0x16, 0x05, 0x38, 0x81, 0x7c, 0x85, 0x51, 0x13, 0x67, 0xfd,
	0x9c, 0xaf, 0x3f, 0x87, 0x87, 0x6a, 0x8a, 0x15, 0x56, 0x5a, 0xd4, 0x22, 0x8b, 0xf6, 0xa4, 0x70,
	0x85, 0x27, 0xb3, 0xf0, 0x18, 0xc1, 0x30, 0x14, 0xd4, 0xb7, 0x65, 0x85, 0x13, 0x7b, 0xad, 0xfc,
	0x6b, 0x38, 0x28, 0x46, 0xb2, 0x80, 0x3f, 0x22, 0xfc, 0x7e, 0x21, 0xa6, 0xeb, 0x51, 0x5f, 0xc0,
	0xae, 0x8a, 0x66, 0x61, 0x40, 0x87, 0xcc, 0xd1, 0x94, 0x60, 0x0d, 0xa6, 0xe6, 0x46, 0x3a, 0xbb,
	0xf0, 0x43, 0x7a, 0x47, 0xda, 0x21, 0x57, 0x55, 0x2c, 0xb3, 0x89, 0xe4, 0xea, 0x27, 0xa0, 0x7c,
	0xc9, 0x71, 0xd2, 0x4d, 0x8d, 0xf4, 0xaa, 0x80, 0x29, 0x2c, 0x39, 0xf9, 0x0c, 0xda, 0xd2, 0xe8,
	0x5c, 0xed, 0xae, 0x5c, 0x9d, 0xc4, 0xcc, 0x95, 0x7e, 0x09, 0xfb, 0x1b, 0x0e, 0xe6, 0xd8, 0xcf,
	0x09, 0xab, 0x17, 0xdc, 0xcb, 0x47, 0x60, 0xec, 0x94, 0x73, 0x39, 0x58, 0x97, 0xb9, 0x57, 0xec,
	0x1c, 0x78, 0x0a, 0xfb, 0xb9, 0x63, 0xc9, 0x52, 0x78, 0xc9, 0xb5, 0x27, 0xdf, 0x65, 0xf6, 0xc8,
	0xbb, 0x3c, 0xc3, 0xe3, 0xa5, 0x18, 0x5f, 0x8f, 0xe9, 0x81, 0xe6, 0x00, 0xb6, 0xae, 0x53, 0x7f,
	0xce, 0x33, 0x63, 0x5f, 0x5e, 0x47, 0x24, 0x85, 0x2b, 0x9b, 0xbe, 0xa4, 0xbf, 0x0f, 0xe5, 0xca,
	0x26, 0x0e, 0x93, 0xcf, 0x23, 0x9d, 0xdf, 0x45, 0x42, 0xf0, 0xd4, 0x0b, 0x96, 0x69, 0xca, 0x63,
	0x61, 0x1c, 0x10, 0xa4, 0x2d, 0xb9, 0xa6, 0x64, 0xa2, 0x16, 0x05, 0x9b, 0xfb, 0x6f, 0x8c, 0x47,
	0x52, 0x8b, 0xe4, 0x0c, 0xfd, 0x37, 0xba, 0x09, 0xed, 0x1b, 0x7f, 0xe1, 0xdd, 0x46, 0x99, 0x48,
	0x6e, 0x52, 0x7f, 0x6e, 0x18, 0xb4, 0x75, 0xff, 0x12, 0xb7, 0xee, 0x7c, 0xdf, 0x38, 0x79, 0xe1,
	0x2f, 0x2e, 0x72, 0x80, 0x15, 0x8b, 0xf4, 0x9e, 0xb5, 0x6e, 0x0a, 0x2c, 0x5c, 0x8e, 0x31, 0x3d,
	0xd4, 0x7c, 0x20, 0xaf, 0x59, 0x44, 0xe0, 0xe5, 0x14, 0x3f, 0x3c, 0x92, 0x7c, 0x42, 0x92, 0x06,
	0x32, 0x7a, 0x28, 0x7c, 0x0c, 0xdb, 0x24, 0x9c, 0x47, 0x59, 0xc6, 0x33, 0xe3, 0x90, 0xc4, 0x80,
	0xac, 0x21, 0x71, 0x30, 0x8d, 0x04, 0x48, 0xf9, 0x82, 0xfb, 0x78, 0x6d, 0xff, 0x54, 0x3e, 0xd1,
	0x22, 0x93, 0x29, 0x1e, 0xde, 0xcb, 0x16, 0xb3, 0x28, 0x33, 0x3e, 0x94, 0xf7, 0x32, 0xfc, 0xc6,
	0x9d, 0x6a, 0xe6, 0x67, 0xc2, 0x5b, 0xcc, 0x22, 0xe3, 0x17, 0xef, 0xdf, 0xa9, 0x10, 0x3b, 0x99,
	0x45, 0xa8, 0xea, 0x3a, 0x4a, 0x33, 0xe3, 0x23, 0xa9, 0x0a, 0xbf, 0x57, 0xaa, 0xae, 0xa3, 0xd4,
	0xf8, 0xe5, 0xcf, 0x53, 0x75, 0x1e, 0xa5, 0xe8, 0x5b, 0x2a, 0xc4, 0x2a, 0x2d, 0x8f, 0xa5, 0x6f,
	0xa9, 0x10, 0x79, 0x4e, 0x1e, 0x41, 0x1d, 0x01, 0x98, 0x90, 0x27, 0x32, 0xe5, 0xa9, 0x10, 0x98,
	0x8d, 0x8f, 0x00, 0xee, 0xf8, 0xbd, 0xa7, 0xca, 0xe1, 0x29, 0xc9, 0x9a, 0x77, 0xfc, 0xfe, 0x5c,
	0x56, 0xc4, 0x5f, 0x42, 0x87, 0xec, 0x59, 0x61, 0x8c, 0xee, 0x7b, 0xad, 0x6a, 0xe1, 0x88, 0x97,
	0x4a, 0x05, 0x9e, 0x4a, 0xf4, 0x74, 0xe0, 0xd1, 0x91, 0x41, 0xb1, 0x7b, 0x26, 0x9f, 0x79, 0x89,
	0x3d, 0x48, 0x82, 0xbb, 0x09, 0x06, 0xd1, 0x86, 0x3d, 0x9a, 0x69, 0x13, 0x6c, 0x7c, 0xfc, 0xde,
	0xe9, 0x34, 0x1c, 0x36, 0x28, 0xe8, 0xd2, 0x4f, 0xf3, 0x8d, 0xd5, 0xa3, 0x23, 0xcb, 0xf8, 0x15,
	0xe9, 0x68, 0xa9, 0x02, 0xa3, 0x46, 0x20, 0xdf, 0x66, 0x65, 0x57, 0x70, 0x0a, 0xad, 0x94, 0x2f,
	0x92, 0x34, 0x1f, 0xf0, 0x27, 0xef, 0x1a, 0x20, 0x11, 0x44, 0x1c, 0xfe, 0x16, 0x76, 0xdf, 0xaa,
	0x50, 0xbc, 0x8e, 0xde, 0x71, 0xf9, 0x44, 0x50, 0x63, 0xf8, 0x89, 0x55, 0x4a, 0x97, 0xdf, 0xfc,
	0x31, 0x80, 0x88, 0x3f, 0x2f, 0x7f, 0x5b, 0xea, 0x9a, 0xd0, 0x42, 0x0f, 0xc2, 0xbc, 0x8b, 0xfe,
	0x08, 0x60, 0x19, 0x47, 0x6f, 0xbc, 0x79, 0x14, 0xa4, 0xb2, 0xf1, 0xac, 0xb0, 0x26, 0x72, 0x86,
	0xc8, 0xa0, 0x2b, 0x1c, 0x1d, 0xe8, 0x65, 0x52, 0x2e, 0x89, 0xe3, 0x53, 0x80, 0xde, 0x32, 0x8c,
	0x12, 0xf9, 0xe6, 0xdd, 0x01, 0xe8, 0x5b, 0xe7, 0xbd, 0xe9, 0xc0, 0xf5, 0x7a, 0xa6, 0xf6, 0x00,
	0xbb, 0xdf, 0xf1, 0x64, 0x8a, 0x1d, 0x75, 0x1d, 0x2a, 0xbd, 0x9e, 0xa9, 0x95, 0x8f, 0x2f, 0xd5,
	0xb3, 0xc6, 0x5b, 0x03, 0x2e, 0x71, 0xc0, 0x2e, 0xb4, 0x2f, 0x9e, 0x7f, 0xf3, 0xb5, 0x77, 0xd6,
	0x73, 0xac, 0x81, 0x3d, 0xb2, 0xb4, 0x92, 0xde, 0x86, 0x26, 0xb1, 0x86, 0x3d, 0x7b, 0xa4, 0x95,
	0x57, 0xe4, 0x85, 0xfd, 0xe2, 0x42, 0xab, 0xa0, 0xde, 0xcb, 0xc9, 0xb7, 0x5a, 0xf5, 0xf8, 0x73,
	0x00, 0x7b, 0xee, 0xdf, 0xf0, 0x95, 0x5e, 0xdb, 0xf4, 0x94, 0x6a, 0xed, 0x01, 0x36, 0xee, 0xb6,
	0xe9, 0x7d, 0x37, 0xb1, 0x5e, 0x68, 0xa5, 0xe3, 0x2f, 0xd4, 0x4b, 0x1b, 0xbd, 0x17, 0x35, 0xa1,
	0xd6, 0x9b, 0xf6, 0xed, 0xb1, 0xbc, 0x51, 0x5d, 0xda, 0x7d, 0x6b, 0xac, 0x95, 0xd0, 0xf0, 0x7e,
	0xcf, 0xed, 0x69, 0xe5, 0xe3, 0xbf, 0x85, 0xed, 0xc2, 0x5b, 0xd5, 0xe6, 0x75, 0x01, 0x60, 0xcb,
	0xec, 0x0d, 0x2d, 0xd6, 0xd3, 0x4a, 0x38, 0xe3, 0xd0, 0x36, 0xd9, 0x78, 0x72, 0x31, 0x1e, 0xa9,
	0x57, 0x49, 0xc7, 0x64, 0x96, 0x35, 0xf2, 0x9c, 0x8b, 0x1e, 0xb3, 0xb4, 0x8a, 0x7e, 0x00, 0x7a,
	0x91, 0xe3, 0xc9, 0x69, 0xab, 0xc7, 0xdf, 0x40, 0xab, 0xf8, 0x8e, 0x83, 0x2e, 0x0d, 0xc6, 0xdf,
	0x4b, 0xf5, 0x43, 0xab, 0x6f, 0x4f, 0x87, 0xd2, 0x20, 0xf2, 0xb8, 0x8c, 0xe2, 0xf1, 0xf9, 0xb9,
	0x56, 0x39, 0xfe, 0x06, 0x76, 0xd7, 0xdd, 0x78, 0x3e, 0xb8, 0x01, 0xd5, 0xc9, 0x78, 0xcc, 0x64,
	0xec, 0x5f, 0x8c, 0xc7, 0x7d, 0x19, 0x41, 0xeb, 0x07, 0xd3, 0x1a, 0x0c, 0xac, 0x91, 0xab, 0x95,
	0x8f, 0x7f, 0xb3, 0x79, 0xe5, 0x50, 0xed, 0xb0, 0xbc, 0xc6, 0x38, 0x16, 0x46, 0xab, 0x05, 0x8d,
	0xbe, 0xed, 0xf4, 0xce, 0x06, 0xf4, 0xd6, 0xba, 0x0d, 0x75, 0x6b, 0x24, 0x89, 0xf2, 0xf1, 0xef,
	0x4b, 0xa0, 0xf5, 0xa3, 0x4c, 0xdd, 0x1b, 0x18, 0xf7, 0xb3, 0x24, 0xd6, 0x75, 0xe8, 0xa8, 0xa0,
	0x78, 0xcc, 0xea, 0x39, 0x63, 0x8c, 0xcd, 0x3e, 0x68, 0xe6, 0xc0, 0xb6, 0x46, 0xae, 0x67, 0x8f,
	0x6c, 0xd7, 0xee, 0xb9, 0xa4, 0xeb, 0x00, 0xf4, 0xfe, 0x74, 0x32, 0xb0, 0xcd, 0x9e, 0x6b, 0x79,
	0x76, 0xdf, 0x1a, 0xb9, 0x78, 0x71, 0x2a, 0xeb, 0x7b, 0xb0, 0xe3, 0x58, 0xec, 0xd2, 0x62, 0x9e,
	0x73, 0x31, 0x75, 0xfb, 0x18, 0xde, 0x8a, 0xfe, 0x08, 0xf6, 0x26, 0x3d, 0xe6, 0xda, 0xa6, 0x3d,
	0xe9, 0x8d, 0x5c, 0x8f, 0x59, 0xc3, 0xf1, 0xa5, 0xd5, 0xd7, 0xaa, 0x74, 0xcd, 0x1a, 0x8f, 0x87,
	0x5e, 0xdf, 0x1a, 0x58, 0xa8, 0xb7, 0x86, 0x16, 0x38, 0x2e, 0xea, 0x1c, 0xda, 0xce, 0xb0, 0xe7,
	0x9a, 0x17, 0xf2, 0x32, 0xf6, 0xdd, 0xd8, 0x1e, 0x79, 0xe7, 0x3d, 0x7b, 0x30, 0x65, 0x96, 0x56,
	0x3f, 0xfe, 0xc7, 0x12, 0xec, 0x30, 0xbe, 0x69, 0x7b, 0x07, 0x80, 0x31, 0x6f, 0x9d, 0xd3, 0x43,
	0x38, 0x60, 0xcc, 0x73, 0xec, 0x17, 0xa3, 0xde, 0xc0, 0xdb, 0x78, 0x57, 0x2e, 0xa1, 0x41, 0x8c,
	0x79, 0x93, 0xe9, 0xd9, 0xc0, 0x76, 0x2e, 0x2c, 0x46, 0x9a, 0x31, 0x2a, 0xba, 0x01, 0xfb, 0x38,
	0x68, 0x7a, 0xe6, 0x98, 0xcc, 0x3e, 0x5b, 0x4b, 0x2a, 0x6a, 0x88, 0xf3, 0xbd, 0xed, 0x9a, 0x17,
	0x9e, 0xd9, 0x1b, 0xf5, 0xed, 0x7e, 0xcf, 0xb5, 0xb4, 0xea, 0xb1, 0x0b, 0xbb, 0xea, 0x6f, 0x0b,
	0xbd, 0x03, 0x5a, 0x69, 0x9a, 0xa4, 0x68, 0x8c, 0x63, 0x15, 0x8c, 0x31, 0x60, 0xdf, 0xb1, 0x3c,
	0x73, 0xdc, 0xb7, 0x4c, 0x6f, 0x3a, 0x72, 0xa6, 0x93, 0xc9, 0x98, 0x49, 0x53, 0x1e, 0xc2, 0xae,
	0x63, 0x79, 0x2e, 0xeb, 0x99, 0x2f, 0xbd, 0xd1, 0xd8, 0x3d, 0x1f, 0x4f, 0x47, 0x7d, 0xad, 0x7c,
	0xf6, 0xec, 0xaf, 0x9f, 0xde, 0x44, 0xe2, 0x76, 0x79, 0x75, 0x12, 0x24, 0xf3, 0xd3, 0x59, 0xb4,
	0xbc, 0xf5, 0xa3, 0x59, 0xf2, 0x4a, 0xfd, 0x43, 0x0c, 0x92, 0xd9, 0xa9, 0x08, 0xae, 0xb6, 0x88,
	0xf8, 0xea, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xdf, 0x3a, 0xfc, 0x1b, 0x75, 0x1c, 0x00, 0x00,
}
