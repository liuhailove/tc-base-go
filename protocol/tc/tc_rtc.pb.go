// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tc_rtc.proto

package tc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SignalTarget int32

const (
	SignalTarget_PUBLISHER  SignalTarget = 0
	SignalTarget_SUBSCRIBER SignalTarget = 1
)

var SignalTarget_name = map[int32]string{
	0: "PUBLISHER",
	1: "SUBSCRIBER",
}

var SignalTarget_value = map[string]int32{
	"PUBLISHER":  0,
	"SUBSCRIBER": 1,
}

func (x SignalTarget) String() string {
	return proto.EnumName(SignalTarget_name, int32(x))
}

func (SignalTarget) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{0}
}

type StreamState int32

const (
	StreamState_ACTIVE StreamState = 0
	StreamState_PAUSED StreamState = 1
)

var StreamState_name = map[int32]string{
	0: "ACTIVE",
	1: "PAUSED",
}

var StreamState_value = map[string]int32{
	"ACTIVE": 0,
	"PAUSED": 1,
}

func (x StreamState) String() string {
	return proto.EnumName(StreamState_name, int32(x))
}

func (StreamState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{1}
}

type CandidateProtocol int32

const (
	CandidateProtocol_UDP CandidateProtocol = 0
	CandidateProtocol_TCP CandidateProtocol = 1
	CandidateProtocol_TLS CandidateProtocol = 2
)

var CandidateProtocol_name = map[int32]string{
	0: "UDP",
	1: "TCP",
	2: "TLS",
}

var CandidateProtocol_value = map[string]int32{
	"UDP": 0,
	"TCP": 1,
	"TLS": 2,
}

func (x CandidateProtocol) String() string {
	return proto.EnumName(CandidateProtocol_name, int32(x))
}

func (CandidateProtocol) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{2}
}

type SignalRequest struct {
	// Types that are valid to be assigned to Message:
	//	*SignalRequest_Offer
	//	*SignalRequest_Answer
	//	*SignalRequest_Trickle
	//	*SignalRequest_AddTrack
	//	*SignalRequest_Mute
	//	*SignalRequest_Subscription
	//	*SignalRequest_TrackSetting
	//	*SignalRequest_Leave
	//	*SignalRequest_UpdateLayers
	//	*SignalRequest_SubscriptionPermission
	//	*SignalRequest_SyncState
	//	*SignalRequest_Simulate
	//	*SignalRequest_Ping
	//	*SignalRequest_UpdateMetadata
	//	*SignalRequest_PingReq
	Message              isSignalRequest_Message `protobuf_oneof:"message"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *SignalRequest) Reset()         { *m = SignalRequest{} }
func (m *SignalRequest) String() string { return proto.CompactTextString(m) }
func (*SignalRequest) ProtoMessage()    {}
func (*SignalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{0}
}

func (m *SignalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignalRequest.Unmarshal(m, b)
}
func (m *SignalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignalRequest.Marshal(b, m, deterministic)
}
func (m *SignalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignalRequest.Merge(m, src)
}
func (m *SignalRequest) XXX_Size() int {
	return xxx_messageInfo_SignalRequest.Size(m)
}
func (m *SignalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignalRequest proto.InternalMessageInfo

type isSignalRequest_Message interface {
	isSignalRequest_Message()
}

type SignalRequest_Offer struct {
	Offer *SessionDescription `protobuf:"bytes,1,opt,name=offer,proto3,oneof"`
}

type SignalRequest_Answer struct {
	Answer *SessionDescription `protobuf:"bytes,2,opt,name=answer,proto3,oneof"`
}

type SignalRequest_Trickle struct {
	Trickle *TrickleRequest `protobuf:"bytes,3,opt,name=trickle,proto3,oneof"`
}

type SignalRequest_AddTrack struct {
	AddTrack *AddTrackRequest `protobuf:"bytes,4,opt,name=add_track,json=addTrack,proto3,oneof"`
}

type SignalRequest_Mute struct {
	Mute *MuteTrackRequest `protobuf:"bytes,5,opt,name=mute,proto3,oneof"`
}

type SignalRequest_Subscription struct {
	Subscription *UpdateSubscription `protobuf:"bytes,6,opt,name=subscription,proto3,oneof"`
}

type SignalRequest_TrackSetting struct {
	TrackSetting *UpdateTrackSettings `protobuf:"bytes,7,opt,name=track_setting,json=trackSetting,proto3,oneof"`
}

type SignalRequest_Leave struct {
	Leave *LeaveRequest `protobuf:"bytes,8,opt,name=leave,proto3,oneof"`
}

type SignalRequest_UpdateLayers struct {
	UpdateLayers *UpdateVideoLayers `protobuf:"bytes,10,opt,name=update_layers,json=updateLayers,proto3,oneof"`
}

type SignalRequest_SubscriptionPermission struct {
	SubscriptionPermission *SubscriptionPermission `protobuf:"bytes,11,opt,name=subscription_permission,json=subscriptionPermission,proto3,oneof"`
}

type SignalRequest_SyncState struct {
	SyncState *SyncState `protobuf:"bytes,12,opt,name=sync_state,json=syncState,proto3,oneof"`
}

type SignalRequest_Simulate struct {
	Simulate *SimulateScenario `protobuf:"bytes,13,opt,name=simulate,proto3,oneof"`
}

type SignalRequest_Ping struct {
	Ping int64 `protobuf:"varint,14,opt,name=ping,proto3,oneof"`
}

type SignalRequest_UpdateMetadata struct {
	UpdateMetadata *UpdateParticipantMetadata `protobuf:"bytes,15,opt,name=update_metadata,json=updateMetadata,proto3,oneof"`
}

type SignalRequest_PingReq struct {
	PingReq *Ping `protobuf:"bytes,16,opt,name=ping_req,json=pingReq,proto3,oneof"`
}

func (*SignalRequest_Offer) isSignalRequest_Message() {}

func (*SignalRequest_Answer) isSignalRequest_Message() {}

func (*SignalRequest_Trickle) isSignalRequest_Message() {}

func (*SignalRequest_AddTrack) isSignalRequest_Message() {}

func (*SignalRequest_Mute) isSignalRequest_Message() {}

func (*SignalRequest_Subscription) isSignalRequest_Message() {}

func (*SignalRequest_TrackSetting) isSignalRequest_Message() {}

func (*SignalRequest_Leave) isSignalRequest_Message() {}

func (*SignalRequest_UpdateLayers) isSignalRequest_Message() {}

func (*SignalRequest_SubscriptionPermission) isSignalRequest_Message() {}

func (*SignalRequest_SyncState) isSignalRequest_Message() {}

func (*SignalRequest_Simulate) isSignalRequest_Message() {}

func (*SignalRequest_Ping) isSignalRequest_Message() {}

func (*SignalRequest_UpdateMetadata) isSignalRequest_Message() {}

func (*SignalRequest_PingReq) isSignalRequest_Message() {}

func (m *SignalRequest) GetMessage() isSignalRequest_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *SignalRequest) GetOffer() *SessionDescription {
	if x, ok := m.GetMessage().(*SignalRequest_Offer); ok {
		return x.Offer
	}
	return nil
}

func (m *SignalRequest) GetAnswer() *SessionDescription {
	if x, ok := m.GetMessage().(*SignalRequest_Answer); ok {
		return x.Answer
	}
	return nil
}

func (m *SignalRequest) GetTrickle() *TrickleRequest {
	if x, ok := m.GetMessage().(*SignalRequest_Trickle); ok {
		return x.Trickle
	}
	return nil
}

func (m *SignalRequest) GetAddTrack() *AddTrackRequest {
	if x, ok := m.GetMessage().(*SignalRequest_AddTrack); ok {
		return x.AddTrack
	}
	return nil
}

func (m *SignalRequest) GetMute() *MuteTrackRequest {
	if x, ok := m.GetMessage().(*SignalRequest_Mute); ok {
		return x.Mute
	}
	return nil
}

func (m *SignalRequest) GetSubscription() *UpdateSubscription {
	if x, ok := m.GetMessage().(*SignalRequest_Subscription); ok {
		return x.Subscription
	}
	return nil
}

func (m *SignalRequest) GetTrackSetting() *UpdateTrackSettings {
	if x, ok := m.GetMessage().(*SignalRequest_TrackSetting); ok {
		return x.TrackSetting
	}
	return nil
}

func (m *SignalRequest) GetLeave() *LeaveRequest {
	if x, ok := m.GetMessage().(*SignalRequest_Leave); ok {
		return x.Leave
	}
	return nil
}

func (m *SignalRequest) GetUpdateLayers() *UpdateVideoLayers {
	if x, ok := m.GetMessage().(*SignalRequest_UpdateLayers); ok {
		return x.UpdateLayers
	}
	return nil
}

func (m *SignalRequest) GetSubscriptionPermission() *SubscriptionPermission {
	if x, ok := m.GetMessage().(*SignalRequest_SubscriptionPermission); ok {
		return x.SubscriptionPermission
	}
	return nil
}

func (m *SignalRequest) GetSyncState() *SyncState {
	if x, ok := m.GetMessage().(*SignalRequest_SyncState); ok {
		return x.SyncState
	}
	return nil
}

func (m *SignalRequest) GetSimulate() *SimulateScenario {
	if x, ok := m.GetMessage().(*SignalRequest_Simulate); ok {
		return x.Simulate
	}
	return nil
}

func (m *SignalRequest) GetPing() int64 {
	if x, ok := m.GetMessage().(*SignalRequest_Ping); ok {
		return x.Ping
	}
	return 0
}

func (m *SignalRequest) GetUpdateMetadata() *UpdateParticipantMetadata {
	if x, ok := m.GetMessage().(*SignalRequest_UpdateMetadata); ok {
		return x.UpdateMetadata
	}
	return nil
}

func (m *SignalRequest) GetPingReq() *Ping {
	if x, ok := m.GetMessage().(*SignalRequest_PingReq); ok {
		return x.PingReq
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SignalRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SignalRequest_Offer)(nil),
		(*SignalRequest_Answer)(nil),
		(*SignalRequest_Trickle)(nil),
		(*SignalRequest_AddTrack)(nil),
		(*SignalRequest_Mute)(nil),
		(*SignalRequest_Subscription)(nil),
		(*SignalRequest_TrackSetting)(nil),
		(*SignalRequest_Leave)(nil),
		(*SignalRequest_UpdateLayers)(nil),
		(*SignalRequest_SubscriptionPermission)(nil),
		(*SignalRequest_SyncState)(nil),
		(*SignalRequest_Simulate)(nil),
		(*SignalRequest_Ping)(nil),
		(*SignalRequest_UpdateMetadata)(nil),
		(*SignalRequest_PingReq)(nil),
	}
}

type SignalResponse struct {
	// Types that are valid to be assigned to Message:
	//	*SignalResponse_Join
	//	*SignalResponse_Answer
	//	*SignalResponse_Offer
	//	*SignalResponse_Trickle
	//	*SignalResponse_Update
	//	*SignalResponse_TrackPublished
	//	*SignalResponse_Leave
	//	*SignalResponse_Mute
	//	*SignalResponse_SpeakersChanged
	//	*SignalResponse_RoomUpdate
	//	*SignalResponse_ConnectionQuality
	//	*SignalResponse_StreamStateUpdate
	//	*SignalResponse_SubscribedQualityUpdate
	//	*SignalResponse_SubscriptionPermissionUpdate
	//	*SignalResponse_RefreshToken
	//	*SignalResponse_TrackUnpublished
	//	*SignalResponse_Pong
	//	*SignalResponse_Reconnect
	//	*SignalResponse_PongResp
	//	*SignalResponse_SubscriptionResponse
	Message              isSignalResponse_Message `protobuf_oneof:"message"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *SignalResponse) Reset()         { *m = SignalResponse{} }
func (m *SignalResponse) String() string { return proto.CompactTextString(m) }
func (*SignalResponse) ProtoMessage()    {}
func (*SignalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{1}
}

func (m *SignalResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignalResponse.Unmarshal(m, b)
}
func (m *SignalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignalResponse.Marshal(b, m, deterministic)
}
func (m *SignalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignalResponse.Merge(m, src)
}
func (m *SignalResponse) XXX_Size() int {
	return xxx_messageInfo_SignalResponse.Size(m)
}
func (m *SignalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SignalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SignalResponse proto.InternalMessageInfo

type isSignalResponse_Message interface {
	isSignalResponse_Message()
}

type SignalResponse_Join struct {
	Join *JoinResponse `protobuf:"bytes,1,opt,name=join,proto3,oneof"`
}

type SignalResponse_Answer struct {
	Answer *SessionDescription `protobuf:"bytes,2,opt,name=answer,proto3,oneof"`
}

type SignalResponse_Offer struct {
	Offer *SessionDescription `protobuf:"bytes,3,opt,name=offer,proto3,oneof"`
}

type SignalResponse_Trickle struct {
	Trickle *TrickleRequest `protobuf:"bytes,4,opt,name=trickle,proto3,oneof"`
}

type SignalResponse_Update struct {
	Update *ParticipantUpdate `protobuf:"bytes,5,opt,name=update,proto3,oneof"`
}

type SignalResponse_TrackPublished struct {
	TrackPublished *TrackPublishedResponse `protobuf:"bytes,6,opt,name=track_published,json=trackPublished,proto3,oneof"`
}

type SignalResponse_Leave struct {
	Leave *LeaveRequest `protobuf:"bytes,8,opt,name=leave,proto3,oneof"`
}

type SignalResponse_Mute struct {
	Mute *MuteTrackRequest `protobuf:"bytes,9,opt,name=mute,proto3,oneof"`
}

type SignalResponse_SpeakersChanged struct {
	SpeakersChanged *SpeakersChanged `protobuf:"bytes,10,opt,name=speakers_changed,json=speakersChanged,proto3,oneof"`
}

type SignalResponse_RoomUpdate struct {
	RoomUpdate *RoomUpdate `protobuf:"bytes,11,opt,name=room_update,json=roomUpdate,proto3,oneof"`
}

type SignalResponse_ConnectionQuality struct {
	ConnectionQuality *ConnectionQualityUpdate `protobuf:"bytes,12,opt,name=connection_quality,json=connectionQuality,proto3,oneof"`
}

type SignalResponse_StreamStateUpdate struct {
	StreamStateUpdate *StreamStateUpdate `protobuf:"bytes,13,opt,name=stream_state_update,json=streamStateUpdate,proto3,oneof"`
}

type SignalResponse_SubscribedQualityUpdate struct {
	SubscribedQualityUpdate *SubscribedQualityUpdate `protobuf:"bytes,14,opt,name=subscribed_quality_update,json=subscribedQualityUpdate,proto3,oneof"`
}

type SignalResponse_SubscriptionPermissionUpdate struct {
	SubscriptionPermissionUpdate *SubscriptionPermissionUpdate `protobuf:"bytes,15,opt,name=subscription_permission_update,json=subscriptionPermissionUpdate,proto3,oneof"`
}

type SignalResponse_RefreshToken struct {
	RefreshToken string `protobuf:"bytes,16,opt,name=refresh_token,json=refreshToken,proto3,oneof"`
}

type SignalResponse_TrackUnpublished struct {
	TrackUnpublished *TrackUnpublishedResponse `protobuf:"bytes,17,opt,name=track_unpublished,json=trackUnpublished,proto3,oneof"`
}

type SignalResponse_Pong struct {
	Pong int64 `protobuf:"varint,18,opt,name=pong,proto3,oneof"`
}

type SignalResponse_Reconnect struct {
	Reconnect *ReconnectResponse `protobuf:"bytes,19,opt,name=reconnect,proto3,oneof"`
}

type SignalResponse_PongResp struct {
	PongResp *Pong `protobuf:"bytes,20,opt,name=pong_resp,json=pongResp,proto3,oneof"`
}

type SignalResponse_SubscriptionResponse struct {
	SubscriptionResponse *SubscriptionResponse `protobuf:"bytes,21,opt,name=subscription_response,json=subscriptionResponse,proto3,oneof"`
}

func (*SignalResponse_Join) isSignalResponse_Message() {}

func (*SignalResponse_Answer) isSignalResponse_Message() {}

func (*SignalResponse_Offer) isSignalResponse_Message() {}

func (*SignalResponse_Trickle) isSignalResponse_Message() {}

func (*SignalResponse_Update) isSignalResponse_Message() {}

func (*SignalResponse_TrackPublished) isSignalResponse_Message() {}

func (*SignalResponse_Leave) isSignalResponse_Message() {}

func (*SignalResponse_Mute) isSignalResponse_Message() {}

func (*SignalResponse_SpeakersChanged) isSignalResponse_Message() {}

func (*SignalResponse_RoomUpdate) isSignalResponse_Message() {}

func (*SignalResponse_ConnectionQuality) isSignalResponse_Message() {}

func (*SignalResponse_StreamStateUpdate) isSignalResponse_Message() {}

func (*SignalResponse_SubscribedQualityUpdate) isSignalResponse_Message() {}

func (*SignalResponse_SubscriptionPermissionUpdate) isSignalResponse_Message() {}

func (*SignalResponse_RefreshToken) isSignalResponse_Message() {}

func (*SignalResponse_TrackUnpublished) isSignalResponse_Message() {}

func (*SignalResponse_Pong) isSignalResponse_Message() {}

func (*SignalResponse_Reconnect) isSignalResponse_Message() {}

func (*SignalResponse_PongResp) isSignalResponse_Message() {}

func (*SignalResponse_SubscriptionResponse) isSignalResponse_Message() {}

func (m *SignalResponse) GetMessage() isSignalResponse_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *SignalResponse) GetJoin() *JoinResponse {
	if x, ok := m.GetMessage().(*SignalResponse_Join); ok {
		return x.Join
	}
	return nil
}

func (m *SignalResponse) GetAnswer() *SessionDescription {
	if x, ok := m.GetMessage().(*SignalResponse_Answer); ok {
		return x.Answer
	}
	return nil
}

func (m *SignalResponse) GetOffer() *SessionDescription {
	if x, ok := m.GetMessage().(*SignalResponse_Offer); ok {
		return x.Offer
	}
	return nil
}

func (m *SignalResponse) GetTrickle() *TrickleRequest {
	if x, ok := m.GetMessage().(*SignalResponse_Trickle); ok {
		return x.Trickle
	}
	return nil
}

func (m *SignalResponse) GetUpdate() *ParticipantUpdate {
	if x, ok := m.GetMessage().(*SignalResponse_Update); ok {
		return x.Update
	}
	return nil
}

func (m *SignalResponse) GetTrackPublished() *TrackPublishedResponse {
	if x, ok := m.GetMessage().(*SignalResponse_TrackPublished); ok {
		return x.TrackPublished
	}
	return nil
}

func (m *SignalResponse) GetLeave() *LeaveRequest {
	if x, ok := m.GetMessage().(*SignalResponse_Leave); ok {
		return x.Leave
	}
	return nil
}

func (m *SignalResponse) GetMute() *MuteTrackRequest {
	if x, ok := m.GetMessage().(*SignalResponse_Mute); ok {
		return x.Mute
	}
	return nil
}

func (m *SignalResponse) GetSpeakersChanged() *SpeakersChanged {
	if x, ok := m.GetMessage().(*SignalResponse_SpeakersChanged); ok {
		return x.SpeakersChanged
	}
	return nil
}

func (m *SignalResponse) GetRoomUpdate() *RoomUpdate {
	if x, ok := m.GetMessage().(*SignalResponse_RoomUpdate); ok {
		return x.RoomUpdate
	}
	return nil
}

func (m *SignalResponse) GetConnectionQuality() *ConnectionQualityUpdate {
	if x, ok := m.GetMessage().(*SignalResponse_ConnectionQuality); ok {
		return x.ConnectionQuality
	}
	return nil
}

func (m *SignalResponse) GetStreamStateUpdate() *StreamStateUpdate {
	if x, ok := m.GetMessage().(*SignalResponse_StreamStateUpdate); ok {
		return x.StreamStateUpdate
	}
	return nil
}

func (m *SignalResponse) GetSubscribedQualityUpdate() *SubscribedQualityUpdate {
	if x, ok := m.GetMessage().(*SignalResponse_SubscribedQualityUpdate); ok {
		return x.SubscribedQualityUpdate
	}
	return nil
}

func (m *SignalResponse) GetSubscriptionPermissionUpdate() *SubscriptionPermissionUpdate {
	if x, ok := m.GetMessage().(*SignalResponse_SubscriptionPermissionUpdate); ok {
		return x.SubscriptionPermissionUpdate
	}
	return nil
}

func (m *SignalResponse) GetRefreshToken() string {
	if x, ok := m.GetMessage().(*SignalResponse_RefreshToken); ok {
		return x.RefreshToken
	}
	return ""
}

func (m *SignalResponse) GetTrackUnpublished() *TrackUnpublishedResponse {
	if x, ok := m.GetMessage().(*SignalResponse_TrackUnpublished); ok {
		return x.TrackUnpublished
	}
	return nil
}

func (m *SignalResponse) GetPong() int64 {
	if x, ok := m.GetMessage().(*SignalResponse_Pong); ok {
		return x.Pong
	}
	return 0
}

func (m *SignalResponse) GetReconnect() *ReconnectResponse {
	if x, ok := m.GetMessage().(*SignalResponse_Reconnect); ok {
		return x.Reconnect
	}
	return nil
}

func (m *SignalResponse) GetPongResp() *Pong {
	if x, ok := m.GetMessage().(*SignalResponse_PongResp); ok {
		return x.PongResp
	}
	return nil
}

func (m *SignalResponse) GetSubscriptionResponse() *SubscriptionResponse {
	if x, ok := m.GetMessage().(*SignalResponse_SubscriptionResponse); ok {
		return x.SubscriptionResponse
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SignalResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SignalResponse_Join)(nil),
		(*SignalResponse_Answer)(nil),
		(*SignalResponse_Offer)(nil),
		(*SignalResponse_Trickle)(nil),
		(*SignalResponse_Update)(nil),
		(*SignalResponse_TrackPublished)(nil),
		(*SignalResponse_Leave)(nil),
		(*SignalResponse_Mute)(nil),
		(*SignalResponse_SpeakersChanged)(nil),
		(*SignalResponse_RoomUpdate)(nil),
		(*SignalResponse_ConnectionQuality)(nil),
		(*SignalResponse_StreamStateUpdate)(nil),
		(*SignalResponse_SubscribedQualityUpdate)(nil),
		(*SignalResponse_SubscriptionPermissionUpdate)(nil),
		(*SignalResponse_RefreshToken)(nil),
		(*SignalResponse_TrackUnpublished)(nil),
		(*SignalResponse_Pong)(nil),
		(*SignalResponse_Reconnect)(nil),
		(*SignalResponse_PongResp)(nil),
		(*SignalResponse_SubscriptionResponse)(nil),
	}
}

type SimulcastCodec struct {
	Codec                string   `protobuf:"bytes,1,opt,name=codec,proto3" json:"codec,omitempty"`
	Cid                  string   `protobuf:"bytes,2,opt,name=cid,proto3" json:"cid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SimulcastCodec) Reset()         { *m = SimulcastCodec{} }
func (m *SimulcastCodec) String() string { return proto.CompactTextString(m) }
func (*SimulcastCodec) ProtoMessage()    {}
func (*SimulcastCodec) Descriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{2}
}

func (m *SimulcastCodec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimulcastCodec.Unmarshal(m, b)
}
func (m *SimulcastCodec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimulcastCodec.Marshal(b, m, deterministic)
}
func (m *SimulcastCodec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimulcastCodec.Merge(m, src)
}
func (m *SimulcastCodec) XXX_Size() int {
	return xxx_messageInfo_SimulcastCodec.Size(m)
}
func (m *SimulcastCodec) XXX_DiscardUnknown() {
	xxx_messageInfo_SimulcastCodec.DiscardUnknown(m)
}

var xxx_messageInfo_SimulcastCodec proto.InternalMessageInfo

func (m *SimulcastCodec) GetCodec() string {
	if m != nil {
		return m.Codec
	}
	return ""
}

func (m *SimulcastCodec) GetCid() string {
	if m != nil {
		return m.Cid
	}
	return ""
}

type AddTrackRequest struct {
	// client ID of track, to match it when RTC track is received
	Cid  string    `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Name string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type TrackType `protobuf:"varint,3,opt,name=type,proto3,enum=tc.TrackType" json:"type,omitempty"`
	// to be deprecated in favor of layers
	Width  uint32 `protobuf:"varint,4,opt,name=width,proto3" json:"width,omitempty"`
	Height uint32 `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
	// true to add track and initialize to muted
	Muted bool `protobuf:"varint,6,opt,name=muted,proto3" json:"muted,omitempty"`
	// true if DTX (Discontinuous Transmission) is disabled for audio
	DisableDtx      bool              `protobuf:"varint,7,opt,name=disable_dtx,json=disableDtx,proto3" json:"disable_dtx,omitempty"`
	Source          TrackSource       `protobuf:"varint,8,opt,name=source,proto3,enum=tc.TrackSource" json:"source,omitempty"`
	Layers          []*VideoLayer     `protobuf:"bytes,9,rep,name=layers,proto3" json:"layers,omitempty"`
	SimulcastCodecs []*SimulcastCodec `protobuf:"bytes,10,rep,name=simulcast_codecs,json=simulcastCodecs,proto3" json:"simulcast_codecs,omitempty"`
	// server ID of track, publish new codec to exist track
	Sid    string `protobuf:"bytes,11,opt,name=sid,proto3" json:"sid,omitempty"`
	Stereo bool   `protobuf:"varint,12,opt,name=stereo,proto3" json:"stereo,omitempty"`
	// true if RED (Redundant Encoding) is disabled for audio
	DisableRed bool            `protobuf:"varint,13,opt,name=disable_red,json=disableRed,proto3" json:"disable_red,omitempty"`
	Encryption Encryption_Type `protobuf:"varint,14,opt,name=encryption,proto3,enum=tc.Encryption_Type" json:"encryption,omitempty"`
	// which stream the track belongs to, used to group tracks together.
	// if not specified, server will infer it from track source to bundle camera/microphone, screenshare/audio together
	Stream               string   `protobuf:"bytes,15,opt,name=stream,proto3" json:"stream,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddTrackRequest) Reset()         { *m = AddTrackRequest{} }
func (m *AddTrackRequest) String() string { return proto.CompactTextString(m) }
func (*AddTrackRequest) ProtoMessage()    {}
func (*AddTrackRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{3}
}

func (m *AddTrackRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddTrackRequest.Unmarshal(m, b)
}
func (m *AddTrackRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddTrackRequest.Marshal(b, m, deterministic)
}
func (m *AddTrackRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddTrackRequest.Merge(m, src)
}
func (m *AddTrackRequest) XXX_Size() int {
	return xxx_messageInfo_AddTrackRequest.Size(m)
}
func (m *AddTrackRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddTrackRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddTrackRequest proto.InternalMessageInfo

func (m *AddTrackRequest) GetCid() string {
	if m != nil {
		return m.Cid
	}
	return ""
}

func (m *AddTrackRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AddTrackRequest) GetType() TrackType {
	if m != nil {
		return m.Type
	}
	return TrackType_AUDIO
}

func (m *AddTrackRequest) GetWidth() uint32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *AddTrackRequest) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *AddTrackRequest) GetMuted() bool {
	if m != nil {
		return m.Muted
	}
	return false
}

func (m *AddTrackRequest) GetDisableDtx() bool {
	if m != nil {
		return m.DisableDtx
	}
	return false
}

func (m *AddTrackRequest) GetSource() TrackSource {
	if m != nil {
		return m.Source
	}
	return TrackSource_UNKNOWN
}

func (m *AddTrackRequest) GetLayers() []*VideoLayer {
	if m != nil {
		return m.Layers
	}
	return nil
}

func (m *AddTrackRequest) GetSimulcastCodecs() []*SimulcastCodec {
	if m != nil {
		return m.SimulcastCodecs
	}
	return nil
}

func (m *AddTrackRequest) GetSid() string {
	if m != nil {
		return m.Sid
	}
	return ""
}

func (m *AddTrackRequest) GetStereo() bool {
	if m != nil {
		return m.Stereo
	}
	return false
}

func (m *AddTrackRequest) GetDisableRed() bool {
	if m != nil {
		return m.DisableRed
	}
	return false
}

func (m *AddTrackRequest) GetEncryption() Encryption_Type {
	if m != nil {
		return m.Encryption
	}
	return Encryption_NONE
}

func (m *AddTrackRequest) GetStream() string {
	if m != nil {
		return m.Stream
	}
	return ""
}

type TrickleRequest struct {
	CandidateInit        string       `protobuf:"bytes,1,opt,name=candidateInit,proto3" json:"candidateInit,omitempty"`
	Target               SignalTarget `protobuf:"varint,2,opt,name=target,proto3,enum=tc.SignalTarget" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TrickleRequest) Reset()         { *m = TrickleRequest{} }
func (m *TrickleRequest) String() string { return proto.CompactTextString(m) }
func (*TrickleRequest) ProtoMessage()    {}
func (*TrickleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{4}
}

func (m *TrickleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrickleRequest.Unmarshal(m, b)
}
func (m *TrickleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrickleRequest.Marshal(b, m, deterministic)
}
func (m *TrickleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrickleRequest.Merge(m, src)
}
func (m *TrickleRequest) XXX_Size() int {
	return xxx_messageInfo_TrickleRequest.Size(m)
}
func (m *TrickleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TrickleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TrickleRequest proto.InternalMessageInfo

func (m *TrickleRequest) GetCandidateInit() string {
	if m != nil {
		return m.CandidateInit
	}
	return ""
}

func (m *TrickleRequest) GetTarget() SignalTarget {
	if m != nil {
		return m.Target
	}
	return SignalTarget_PUBLISHER
}

type MuteTrackRequest struct {
	Sid                  string   `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Muted                bool     `protobuf:"varint,2,opt,name=muted,proto3" json:"muted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MuteTrackRequest) Reset()         { *m = MuteTrackRequest{} }
func (m *MuteTrackRequest) String() string { return proto.CompactTextString(m) }
func (*MuteTrackRequest) ProtoMessage()    {}
func (*MuteTrackRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{5}
}

func (m *MuteTrackRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MuteTrackRequest.Unmarshal(m, b)
}
func (m *MuteTrackRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MuteTrackRequest.Marshal(b, m, deterministic)
}
func (m *MuteTrackRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MuteTrackRequest.Merge(m, src)
}
func (m *MuteTrackRequest) XXX_Size() int {
	return xxx_messageInfo_MuteTrackRequest.Size(m)
}
func (m *MuteTrackRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MuteTrackRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MuteTrackRequest proto.InternalMessageInfo

func (m *MuteTrackRequest) GetSid() string {
	if m != nil {
		return m.Sid
	}
	return ""
}

func (m *MuteTrackRequest) GetMuted() bool {
	if m != nil {
		return m.Muted
	}
	return false
}

type JoinResponse struct {
	Room              *Room              `protobuf:"bytes,1,opt,name=room,proto3" json:"room,omitempty"`
	Participant       *ParticipantInfo   `protobuf:"bytes,2,opt,name=participant,proto3" json:"participant,omitempty"`
	OtherParticipants []*ParticipantInfo `protobuf:"bytes,3,rep,name=other_participants,json=otherParticipants,proto3" json:"other_participants,omitempty"`
	// deprecated. use server_info.version instead.
	ServerVersion string       `protobuf:"bytes,4,opt,name=server_version,json=serverVersion,proto3" json:"server_version,omitempty"`
	IceServers    []*ICEServer `protobuf:"bytes,5,rep,name=ice_servers,json=iceServers,proto3" json:"ice_servers,omitempty"`
	// use subscriber as the primary PeerConnection
	SubscriberPrimary bool `protobuf:"varint,6,opt,name=subscriber_primary,json=subscriberPrimary,proto3" json:"subscriber_primary,omitempty"`
	// when the current server isn't available, return alternate url to retry connection
	// when this is set, the other fields will be largely empty
	AlternativeUrl      string               `protobuf:"bytes,7,opt,name=alternative_url,json=alternativeUrl,proto3" json:"alternative_url,omitempty"`
	ClientConfiguration *ClientConfiguration `protobuf:"bytes,8,opt,name=client_configuration,json=clientConfiguration,proto3" json:"client_configuration,omitempty"`
	// deprecated. use server_info.region instead.
	ServerRegion string      `protobuf:"bytes,9,opt,name=server_region,json=serverRegion,proto3" json:"server_region,omitempty"`
	PingTimeout  int32       `protobuf:"varint,10,opt,name=ping_timeout,json=pingTimeout,proto3" json:"ping_timeout,omitempty"`
	PingInterval int32       `protobuf:"varint,11,opt,name=ping_interval,json=pingInterval,proto3" json:"ping_interval,omitempty"`
	ServerInfo   *ServerInfo `protobuf:"bytes,12,opt,name=server_info,json=serverInfo,proto3" json:"server_info,omitempty"`
	// Server-Injected-Frame byte trailer, used to identify unencrypted frames when e2ee is enabled
	SifTrailer           []byte   `protobuf:"bytes,13,opt,name=sif_trailer,json=sifTrailer,proto3" json:"sif_trailer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinResponse) Reset()         { *m = JoinResponse{} }
func (m *JoinResponse) String() string { return proto.CompactTextString(m) }
func (*JoinResponse) ProtoMessage()    {}
func (*JoinResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{6}
}

func (m *JoinResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinResponse.Unmarshal(m, b)
}
func (m *JoinResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinResponse.Marshal(b, m, deterministic)
}
func (m *JoinResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinResponse.Merge(m, src)
}
func (m *JoinResponse) XXX_Size() int {
	return xxx_messageInfo_JoinResponse.Size(m)
}
func (m *JoinResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinResponse.DiscardUnknown(m)
}

var xxx_messageInfo_JoinResponse proto.InternalMessageInfo

func (m *JoinResponse) GetRoom() *Room {
	if m != nil {
		return m.Room
	}
	return nil
}

func (m *JoinResponse) GetParticipant() *ParticipantInfo {
	if m != nil {
		return m.Participant
	}
	return nil
}

func (m *JoinResponse) GetOtherParticipants() []*ParticipantInfo {
	if m != nil {
		return m.OtherParticipants
	}
	return nil
}

func (m *JoinResponse) GetServerVersion() string {
	if m != nil {
		return m.ServerVersion
	}
	return ""
}

func (m *JoinResponse) GetIceServers() []*ICEServer {
	if m != nil {
		return m.IceServers
	}
	return nil
}

func (m *JoinResponse) GetSubscriberPrimary() bool {
	if m != nil {
		return m.SubscriberPrimary
	}
	return false
}

func (m *JoinResponse) GetAlternativeUrl() string {
	if m != nil {
		return m.AlternativeUrl
	}
	return ""
}

func (m *JoinResponse) GetClientConfiguration() *ClientConfiguration {
	if m != nil {
		return m.ClientConfiguration
	}
	return nil
}

func (m *JoinResponse) GetServerRegion() string {
	if m != nil {
		return m.ServerRegion
	}
	return ""
}

func (m *JoinResponse) GetPingTimeout() int32 {
	if m != nil {
		return m.PingTimeout
	}
	return 0
}

func (m *JoinResponse) GetPingInterval() int32 {
	if m != nil {
		return m.PingInterval
	}
	return 0
}

func (m *JoinResponse) GetServerInfo() *ServerInfo {
	if m != nil {
		return m.ServerInfo
	}
	return nil
}

func (m *JoinResponse) GetSifTrailer() []byte {
	if m != nil {
		return m.SifTrailer
	}
	return nil
}

type ReconnectResponse struct {
	IceServers           []*ICEServer         `protobuf:"bytes,1,rep,name=ice_servers,json=iceServers,proto3" json:"ice_servers,omitempty"`
	ClientConfiguration  *ClientConfiguration `protobuf:"bytes,2,opt,name=client_configuration,json=clientConfiguration,proto3" json:"client_configuration,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ReconnectResponse) Reset()         { *m = ReconnectResponse{} }
func (m *ReconnectResponse) String() string { return proto.CompactTextString(m) }
func (*ReconnectResponse) ProtoMessage()    {}
func (*ReconnectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{7}
}

func (m *ReconnectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReconnectResponse.Unmarshal(m, b)
}
func (m *ReconnectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReconnectResponse.Marshal(b, m, deterministic)
}
func (m *ReconnectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReconnectResponse.Merge(m, src)
}
func (m *ReconnectResponse) XXX_Size() int {
	return xxx_messageInfo_ReconnectResponse.Size(m)
}
func (m *ReconnectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReconnectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReconnectResponse proto.InternalMessageInfo

func (m *ReconnectResponse) GetIceServers() []*ICEServer {
	if m != nil {
		return m.IceServers
	}
	return nil
}

func (m *ReconnectResponse) GetClientConfiguration() *ClientConfiguration {
	if m != nil {
		return m.ClientConfiguration
	}
	return nil
}

type TrackPublishedResponse struct {
	Cid                  string     `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Track                *TrackInfo `protobuf:"bytes,2,opt,name=track,proto3" json:"track,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TrackPublishedResponse) Reset()         { *m = TrackPublishedResponse{} }
func (m *TrackPublishedResponse) String() string { return proto.CompactTextString(m) }
func (*TrackPublishedResponse) ProtoMessage()    {}
func (*TrackPublishedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{8}
}

func (m *TrackPublishedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrackPublishedResponse.Unmarshal(m, b)
}
func (m *TrackPublishedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrackPublishedResponse.Marshal(b, m, deterministic)
}
func (m *TrackPublishedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrackPublishedResponse.Merge(m, src)
}
func (m *TrackPublishedResponse) XXX_Size() int {
	return xxx_messageInfo_TrackPublishedResponse.Size(m)
}
func (m *TrackPublishedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TrackPublishedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TrackPublishedResponse proto.InternalMessageInfo

func (m *TrackPublishedResponse) GetCid() string {
	if m != nil {
		return m.Cid
	}
	return ""
}

func (m *TrackPublishedResponse) GetTrack() *TrackInfo {
	if m != nil {
		return m.Track
	}
	return nil
}

type TrackUnpublishedResponse struct {
	TrackSid             string   `protobuf:"bytes,1,opt,name=track_sid,json=trackSid,proto3" json:"track_sid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrackUnpublishedResponse) Reset()         { *m = TrackUnpublishedResponse{} }
func (m *TrackUnpublishedResponse) String() string { return proto.CompactTextString(m) }
func (*TrackUnpublishedResponse) ProtoMessage()    {}
func (*TrackUnpublishedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{9}
}

func (m *TrackUnpublishedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrackUnpublishedResponse.Unmarshal(m, b)
}
func (m *TrackUnpublishedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrackUnpublishedResponse.Marshal(b, m, deterministic)
}
func (m *TrackUnpublishedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrackUnpublishedResponse.Merge(m, src)
}
func (m *TrackUnpublishedResponse) XXX_Size() int {
	return xxx_messageInfo_TrackUnpublishedResponse.Size(m)
}
func (m *TrackUnpublishedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TrackUnpublishedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TrackUnpublishedResponse proto.InternalMessageInfo

func (m *TrackUnpublishedResponse) GetTrackSid() string {
	if m != nil {
		return m.TrackSid
	}
	return ""
}

type SessionDescription struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Sdp                  string   `protobuf:"bytes,2,opt,name=sdp,proto3" json:"sdp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionDescription) Reset()         { *m = SessionDescription{} }
func (m *SessionDescription) String() string { return proto.CompactTextString(m) }
func (*SessionDescription) ProtoMessage()    {}
func (*SessionDescription) Descriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{10}
}

func (m *SessionDescription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionDescription.Unmarshal(m, b)
}
func (m *SessionDescription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionDescription.Marshal(b, m, deterministic)
}
func (m *SessionDescription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionDescription.Merge(m, src)
}
func (m *SessionDescription) XXX_Size() int {
	return xxx_messageInfo_SessionDescription.Size(m)
}
func (m *SessionDescription) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionDescription.DiscardUnknown(m)
}

var xxx_messageInfo_SessionDescription proto.InternalMessageInfo

func (m *SessionDescription) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *SessionDescription) GetSdp() string {
	if m != nil {
		return m.Sdp
	}
	return ""
}

type ParticipantUpdate struct {
	Participants         []*ParticipantInfo `protobuf:"bytes,1,rep,name=participants,proto3" json:"participants,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ParticipantUpdate) Reset()         { *m = ParticipantUpdate{} }
func (m *ParticipantUpdate) String() string { return proto.CompactTextString(m) }
func (*ParticipantUpdate) ProtoMessage()    {}
func (*ParticipantUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{11}
}

func (m *ParticipantUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParticipantUpdate.Unmarshal(m, b)
}
func (m *ParticipantUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParticipantUpdate.Marshal(b, m, deterministic)
}
func (m *ParticipantUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParticipantUpdate.Merge(m, src)
}
func (m *ParticipantUpdate) XXX_Size() int {
	return xxx_messageInfo_ParticipantUpdate.Size(m)
}
func (m *ParticipantUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_ParticipantUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_ParticipantUpdate proto.InternalMessageInfo

func (m *ParticipantUpdate) GetParticipants() []*ParticipantInfo {
	if m != nil {
		return m.Participants
	}
	return nil
}

type UpdateSubscription struct {
	TrackSids            []string             `protobuf:"bytes,1,rep,name=track_sids,json=trackSids,proto3" json:"track_sids,omitempty"`
	Subscribe            bool                 `protobuf:"varint,2,opt,name=subscribe,proto3" json:"subscribe,omitempty"`
	ParticipantTracks    []*ParticipantTracks `protobuf:"bytes,3,rep,name=participant_tracks,json=participantTracks,proto3" json:"participant_tracks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UpdateSubscription) Reset()         { *m = UpdateSubscription{} }
func (m *UpdateSubscription) String() string { return proto.CompactTextString(m) }
func (*UpdateSubscription) ProtoMessage()    {}
func (*UpdateSubscription) Descriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{12}
}

func (m *UpdateSubscription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateSubscription.Unmarshal(m, b)
}
func (m *UpdateSubscription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateSubscription.Marshal(b, m, deterministic)
}
func (m *UpdateSubscription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateSubscription.Merge(m, src)
}
func (m *UpdateSubscription) XXX_Size() int {
	return xxx_messageInfo_UpdateSubscription.Size(m)
}
func (m *UpdateSubscription) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateSubscription.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateSubscription proto.InternalMessageInfo

func (m *UpdateSubscription) GetTrackSids() []string {
	if m != nil {
		return m.TrackSids
	}
	return nil
}

func (m *UpdateSubscription) GetSubscribe() bool {
	if m != nil {
		return m.Subscribe
	}
	return false
}

func (m *UpdateSubscription) GetParticipantTracks() []*ParticipantTracks {
	if m != nil {
		return m.ParticipantTracks
	}
	return nil
}

type UpdateTrackSettings struct {
	TrackSids []string `protobuf:"bytes,1,rep,name=track_sids,json=trackSids,proto3" json:"track_sids,omitempty"`
	// when true, the track is placed in a paused state, with no new data returned
	Disabled bool `protobuf:"varint,3,opt,name=disabled,proto3" json:"disabled,omitempty"`
	// deprecated in favor of width & height
	Quality VideoQuality `protobuf:"varint,4,opt,name=quality,proto3,enum=tc.VideoQuality" json:"quality,omitempty"`
	// for video, width to receive
	Width uint32 `protobuf:"varint,5,opt,name=width,proto3" json:"width,omitempty"`
	// for video, height to receive
	Height uint32 `protobuf:"varint,6,opt,name=height,proto3" json:"height,omitempty"`
	Fps    uint32 `protobuf:"varint,7,opt,name=fps,proto3" json:"fps,omitempty"`
	// subscription priority. 1 being the highest (0 is unset)
	// when unset, server sill assign priority based on the order of subscription
	// server will use priority in the following ways:
	// 1. when subscribed tracks exceed per-participant subscription limit, server will
	//    pause the lowest priority tracks
	// 2. when the network is congested, server will assign available bandwidth to
	//    higher priority tracks first. lowest priority tracks can be paused
	Priority             uint32   `protobuf:"varint,8,opt,name=priority,proto3" json:"priority,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateTrackSettings) Reset()         { *m = UpdateTrackSettings{} }
func (m *UpdateTrackSettings) String() string { return proto.CompactTextString(m) }
func (*UpdateTrackSettings) ProtoMessage()    {}
func (*UpdateTrackSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{13}
}

func (m *UpdateTrackSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTrackSettings.Unmarshal(m, b)
}
func (m *UpdateTrackSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTrackSettings.Marshal(b, m, deterministic)
}
func (m *UpdateTrackSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTrackSettings.Merge(m, src)
}
func (m *UpdateTrackSettings) XXX_Size() int {
	return xxx_messageInfo_UpdateTrackSettings.Size(m)
}
func (m *UpdateTrackSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTrackSettings.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTrackSettings proto.InternalMessageInfo

func (m *UpdateTrackSettings) GetTrackSids() []string {
	if m != nil {
		return m.TrackSids
	}
	return nil
}

func (m *UpdateTrackSettings) GetDisabled() bool {
	if m != nil {
		return m.Disabled
	}
	return false
}

func (m *UpdateTrackSettings) GetQuality() VideoQuality {
	if m != nil {
		return m.Quality
	}
	return VideoQuality_LOW
}

func (m *UpdateTrackSettings) GetWidth() uint32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *UpdateTrackSettings) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *UpdateTrackSettings) GetFps() uint32 {
	if m != nil {
		return m.Fps
	}
	return 0
}

func (m *UpdateTrackSettings) GetPriority() uint32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

type LeaveRequest struct {
	// sent when server initiates the disconnect due to server-restart
	// indicates clients should attempt full-reconnect sequence
	CanReconnect         bool             `protobuf:"varint,1,opt,name=can_reconnect,json=canReconnect,proto3" json:"can_reconnect,omitempty"`
	Reason               DisconnectReason `protobuf:"varint,2,opt,name=reason,proto3,enum=tc.DisconnectReason" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *LeaveRequest) Reset()         { *m = LeaveRequest{} }
func (m *LeaveRequest) String() string { return proto.CompactTextString(m) }
func (*LeaveRequest) ProtoMessage()    {}
func (*LeaveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{14}
}

func (m *LeaveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeaveRequest.Unmarshal(m, b)
}
func (m *LeaveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeaveRequest.Marshal(b, m, deterministic)
}
func (m *LeaveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeaveRequest.Merge(m, src)
}
func (m *LeaveRequest) XXX_Size() int {
	return xxx_messageInfo_LeaveRequest.Size(m)
}
func (m *LeaveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LeaveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LeaveRequest proto.InternalMessageInfo

func (m *LeaveRequest) GetCanReconnect() bool {
	if m != nil {
		return m.CanReconnect
	}
	return false
}

func (m *LeaveRequest) GetReason() DisconnectReason {
	if m != nil {
		return m.Reason
	}
	return DisconnectReason_UNKNOWN_REASON
}

// message to indicate published video track dimensions are changing
type UpdateVideoLayers struct {
	TrackSid             string        `protobuf:"bytes,1,opt,name=track_sid,json=trackSid,proto3" json:"track_sid,omitempty"`
	Layers               []*VideoLayer `protobuf:"bytes,2,rep,name=layers,proto3" json:"layers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *UpdateVideoLayers) Reset()         { *m = UpdateVideoLayers{} }
func (m *UpdateVideoLayers) String() string { return proto.CompactTextString(m) }
func (*UpdateVideoLayers) ProtoMessage()    {}
func (*UpdateVideoLayers) Descriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{15}
}

func (m *UpdateVideoLayers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateVideoLayers.Unmarshal(m, b)
}
func (m *UpdateVideoLayers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateVideoLayers.Marshal(b, m, deterministic)
}
func (m *UpdateVideoLayers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateVideoLayers.Merge(m, src)
}
func (m *UpdateVideoLayers) XXX_Size() int {
	return xxx_messageInfo_UpdateVideoLayers.Size(m)
}
func (m *UpdateVideoLayers) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateVideoLayers.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateVideoLayers proto.InternalMessageInfo

func (m *UpdateVideoLayers) GetTrackSid() string {
	if m != nil {
		return m.TrackSid
	}
	return ""
}

func (m *UpdateVideoLayers) GetLayers() []*VideoLayer {
	if m != nil {
		return m.Layers
	}
	return nil
}

type UpdateParticipantMetadata struct {
	Metadata             string   `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateParticipantMetadata) Reset()         { *m = UpdateParticipantMetadata{} }
func (m *UpdateParticipantMetadata) String() string { return proto.CompactTextString(m) }
func (*UpdateParticipantMetadata) ProtoMessage()    {}
func (*UpdateParticipantMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{16}
}

func (m *UpdateParticipantMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateParticipantMetadata.Unmarshal(m, b)
}
func (m *UpdateParticipantMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateParticipantMetadata.Marshal(b, m, deterministic)
}
func (m *UpdateParticipantMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateParticipantMetadata.Merge(m, src)
}
func (m *UpdateParticipantMetadata) XXX_Size() int {
	return xxx_messageInfo_UpdateParticipantMetadata.Size(m)
}
func (m *UpdateParticipantMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateParticipantMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateParticipantMetadata proto.InternalMessageInfo

func (m *UpdateParticipantMetadata) GetMetadata() string {
	if m != nil {
		return m.Metadata
	}
	return ""
}

func (m *UpdateParticipantMetadata) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ICEServer struct {
	Urls                 []string `protobuf:"bytes,1,rep,name=urls,proto3" json:"urls,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Credential           string   `protobuf:"bytes,3,opt,name=credential,proto3" json:"credential,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ICEServer) Reset()         { *m = ICEServer{} }
func (m *ICEServer) String() string { return proto.CompactTextString(m) }
func (*ICEServer) ProtoMessage()    {}
func (*ICEServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{17}
}

func (m *ICEServer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ICEServer.Unmarshal(m, b)
}
func (m *ICEServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ICEServer.Marshal(b, m, deterministic)
}
func (m *ICEServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ICEServer.Merge(m, src)
}
func (m *ICEServer) XXX_Size() int {
	return xxx_messageInfo_ICEServer.Size(m)
}
func (m *ICEServer) XXX_DiscardUnknown() {
	xxx_messageInfo_ICEServer.DiscardUnknown(m)
}

var xxx_messageInfo_ICEServer proto.InternalMessageInfo

func (m *ICEServer) GetUrls() []string {
	if m != nil {
		return m.Urls
	}
	return nil
}

func (m *ICEServer) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ICEServer) GetCredential() string {
	if m != nil {
		return m.Credential
	}
	return ""
}

type SpeakersChanged struct {
	Speakers             []*SpeakerInfo `protobuf:"bytes,1,rep,name=speakers,proto3" json:"speakers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SpeakersChanged) Reset()         { *m = SpeakersChanged{} }
func (m *SpeakersChanged) String() string { return proto.CompactTextString(m) }
func (*SpeakersChanged) ProtoMessage()    {}
func (*SpeakersChanged) Descriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{18}
}

func (m *SpeakersChanged) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpeakersChanged.Unmarshal(m, b)
}
func (m *SpeakersChanged) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpeakersChanged.Marshal(b, m, deterministic)
}
func (m *SpeakersChanged) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpeakersChanged.Merge(m, src)
}
func (m *SpeakersChanged) XXX_Size() int {
	return xxx_messageInfo_SpeakersChanged.Size(m)
}
func (m *SpeakersChanged) XXX_DiscardUnknown() {
	xxx_messageInfo_SpeakersChanged.DiscardUnknown(m)
}

var xxx_messageInfo_SpeakersChanged proto.InternalMessageInfo

func (m *SpeakersChanged) GetSpeakers() []*SpeakerInfo {
	if m != nil {
		return m.Speakers
	}
	return nil
}

type RoomUpdate struct {
	Room                 *Room    `protobuf:"bytes,1,opt,name=room,proto3" json:"room,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoomUpdate) Reset()         { *m = RoomUpdate{} }
func (m *RoomUpdate) String() string { return proto.CompactTextString(m) }
func (*RoomUpdate) ProtoMessage()    {}
func (*RoomUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{19}
}

func (m *RoomUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoomUpdate.Unmarshal(m, b)
}
func (m *RoomUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoomUpdate.Marshal(b, m, deterministic)
}
func (m *RoomUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomUpdate.Merge(m, src)
}
func (m *RoomUpdate) XXX_Size() int {
	return xxx_messageInfo_RoomUpdate.Size(m)
}
func (m *RoomUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_RoomUpdate proto.InternalMessageInfo

func (m *RoomUpdate) GetRoom() *Room {
	if m != nil {
		return m.Room
	}
	return nil
}

type ConnectionQualityInfo struct {
	ParticipantSid       string            `protobuf:"bytes,1,opt,name=participant_sid,json=participantSid,proto3" json:"participant_sid,omitempty"`
	Quality              ConnectionQuality `protobuf:"varint,2,opt,name=quality,proto3,enum=tc.ConnectionQuality" json:"quality,omitempty"`
	Score                float32           `protobuf:"fixed32,3,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ConnectionQualityInfo) Reset()         { *m = ConnectionQualityInfo{} }
func (m *ConnectionQualityInfo) String() string { return proto.CompactTextString(m) }
func (*ConnectionQualityInfo) ProtoMessage()    {}
func (*ConnectionQualityInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{20}
}

func (m *ConnectionQualityInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectionQualityInfo.Unmarshal(m, b)
}
func (m *ConnectionQualityInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectionQualityInfo.Marshal(b, m, deterministic)
}
func (m *ConnectionQualityInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectionQualityInfo.Merge(m, src)
}
func (m *ConnectionQualityInfo) XXX_Size() int {
	return xxx_messageInfo_ConnectionQualityInfo.Size(m)
}
func (m *ConnectionQualityInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectionQualityInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectionQualityInfo proto.InternalMessageInfo

func (m *ConnectionQualityInfo) GetParticipantSid() string {
	if m != nil {
		return m.ParticipantSid
	}
	return ""
}

func (m *ConnectionQualityInfo) GetQuality() ConnectionQuality {
	if m != nil {
		return m.Quality
	}
	return ConnectionQuality_POOR
}

func (m *ConnectionQualityInfo) GetScore() float32 {
	if m != nil {
		return m.Score
	}
	return 0
}

type ConnectionQualityUpdate struct {
	Updates              []*ConnectionQualityInfo `protobuf:"bytes,1,rep,name=updates,proto3" json:"updates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ConnectionQualityUpdate) Reset()         { *m = ConnectionQualityUpdate{} }
func (m *ConnectionQualityUpdate) String() string { return proto.CompactTextString(m) }
func (*ConnectionQualityUpdate) ProtoMessage()    {}
func (*ConnectionQualityUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{21}
}

func (m *ConnectionQualityUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectionQualityUpdate.Unmarshal(m, b)
}
func (m *ConnectionQualityUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectionQualityUpdate.Marshal(b, m, deterministic)
}
func (m *ConnectionQualityUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectionQualityUpdate.Merge(m, src)
}
func (m *ConnectionQualityUpdate) XXX_Size() int {
	return xxx_messageInfo_ConnectionQualityUpdate.Size(m)
}
func (m *ConnectionQualityUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectionQualityUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectionQualityUpdate proto.InternalMessageInfo

func (m *ConnectionQualityUpdate) GetUpdates() []*ConnectionQualityInfo {
	if m != nil {
		return m.Updates
	}
	return nil
}

type StreamStateInfo struct {
	ParticipantSid       string      `protobuf:"bytes,1,opt,name=participant_sid,json=participantSid,proto3" json:"participant_sid,omitempty"`
	TrackSid             string      `protobuf:"bytes,2,opt,name=track_sid,json=trackSid,proto3" json:"track_sid,omitempty"`
	State                StreamState `protobuf:"varint,3,opt,name=state,proto3,enum=tc.StreamState" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *StreamStateInfo) Reset()         { *m = StreamStateInfo{} }
func (m *StreamStateInfo) String() string { return proto.CompactTextString(m) }
func (*StreamStateInfo) ProtoMessage()    {}
func (*StreamStateInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{22}
}

func (m *StreamStateInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamStateInfo.Unmarshal(m, b)
}
func (m *StreamStateInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamStateInfo.Marshal(b, m, deterministic)
}
func (m *StreamStateInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamStateInfo.Merge(m, src)
}
func (m *StreamStateInfo) XXX_Size() int {
	return xxx_messageInfo_StreamStateInfo.Size(m)
}
func (m *StreamStateInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamStateInfo.DiscardUnknown(m)
}

var xxx_messageInfo_StreamStateInfo proto.InternalMessageInfo

func (m *StreamStateInfo) GetParticipantSid() string {
	if m != nil {
		return m.ParticipantSid
	}
	return ""
}

func (m *StreamStateInfo) GetTrackSid() string {
	if m != nil {
		return m.TrackSid
	}
	return ""
}

func (m *StreamStateInfo) GetState() StreamState {
	if m != nil {
		return m.State
	}
	return StreamState_ACTIVE
}

type StreamStateUpdate struct {
	StreamStates         []*StreamStateInfo `protobuf:"bytes,1,rep,name=stream_states,json=streamStates,proto3" json:"stream_states,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *StreamStateUpdate) Reset()         { *m = StreamStateUpdate{} }
func (m *StreamStateUpdate) String() string { return proto.CompactTextString(m) }
func (*StreamStateUpdate) ProtoMessage()    {}
func (*StreamStateUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{23}
}

func (m *StreamStateUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamStateUpdate.Unmarshal(m, b)
}
func (m *StreamStateUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamStateUpdate.Marshal(b, m, deterministic)
}
func (m *StreamStateUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamStateUpdate.Merge(m, src)
}
func (m *StreamStateUpdate) XXX_Size() int {
	return xxx_messageInfo_StreamStateUpdate.Size(m)
}
func (m *StreamStateUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamStateUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_StreamStateUpdate proto.InternalMessageInfo

func (m *StreamStateUpdate) GetStreamStates() []*StreamStateInfo {
	if m != nil {
		return m.StreamStates
	}
	return nil
}

type SubscribedQuality struct {
	Quality              VideoQuality `protobuf:"varint,1,opt,name=quality,proto3,enum=tc.VideoQuality" json:"quality,omitempty"`
	Enabled              bool         `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SubscribedQuality) Reset()         { *m = SubscribedQuality{} }
func (m *SubscribedQuality) String() string { return proto.CompactTextString(m) }
func (*SubscribedQuality) ProtoMessage()    {}
func (*SubscribedQuality) Descriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{24}
}

func (m *SubscribedQuality) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribedQuality.Unmarshal(m, b)
}
func (m *SubscribedQuality) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribedQuality.Marshal(b, m, deterministic)
}
func (m *SubscribedQuality) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribedQuality.Merge(m, src)
}
func (m *SubscribedQuality) XXX_Size() int {
	return xxx_messageInfo_SubscribedQuality.Size(m)
}
func (m *SubscribedQuality) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribedQuality.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribedQuality proto.InternalMessageInfo

func (m *SubscribedQuality) GetQuality() VideoQuality {
	if m != nil {
		return m.Quality
	}
	return VideoQuality_LOW
}

func (m *SubscribedQuality) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

type SubscribedCodec struct {
	Codec                string               `protobuf:"bytes,1,opt,name=codec,proto3" json:"codec,omitempty"`
	Qualities            []*SubscribedQuality `protobuf:"bytes,2,rep,name=qualities,proto3" json:"qualities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SubscribedCodec) Reset()         { *m = SubscribedCodec{} }
func (m *SubscribedCodec) String() string { return proto.CompactTextString(m) }
func (*SubscribedCodec) ProtoMessage()    {}
func (*SubscribedCodec) Descriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{25}
}

func (m *SubscribedCodec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribedCodec.Unmarshal(m, b)
}
func (m *SubscribedCodec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribedCodec.Marshal(b, m, deterministic)
}
func (m *SubscribedCodec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribedCodec.Merge(m, src)
}
func (m *SubscribedCodec) XXX_Size() int {
	return xxx_messageInfo_SubscribedCodec.Size(m)
}
func (m *SubscribedCodec) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribedCodec.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribedCodec proto.InternalMessageInfo

func (m *SubscribedCodec) GetCodec() string {
	if m != nil {
		return m.Codec
	}
	return ""
}

func (m *SubscribedCodec) GetQualities() []*SubscribedQuality {
	if m != nil {
		return m.Qualities
	}
	return nil
}

type SubscribedQualityUpdate struct {
	TrackSid             string               `protobuf:"bytes,1,opt,name=track_sid,json=trackSid,proto3" json:"track_sid,omitempty"`
	SubscribedQualities  []*SubscribedQuality `protobuf:"bytes,2,rep,name=subscribed_qualities,json=subscribedQualities,proto3" json:"subscribed_qualities,omitempty"`
	SubscribedCodecs     []*SubscribedCodec   `protobuf:"bytes,3,rep,name=subscribed_codecs,json=subscribedCodecs,proto3" json:"subscribed_codecs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SubscribedQualityUpdate) Reset()         { *m = SubscribedQualityUpdate{} }
func (m *SubscribedQualityUpdate) String() string { return proto.CompactTextString(m) }
func (*SubscribedQualityUpdate) ProtoMessage()    {}
func (*SubscribedQualityUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{26}
}

func (m *SubscribedQualityUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribedQualityUpdate.Unmarshal(m, b)
}
func (m *SubscribedQualityUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribedQualityUpdate.Marshal(b, m, deterministic)
}
func (m *SubscribedQualityUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribedQualityUpdate.Merge(m, src)
}
func (m *SubscribedQualityUpdate) XXX_Size() int {
	return xxx_messageInfo_SubscribedQualityUpdate.Size(m)
}
func (m *SubscribedQualityUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribedQualityUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribedQualityUpdate proto.InternalMessageInfo

func (m *SubscribedQualityUpdate) GetTrackSid() string {
	if m != nil {
		return m.TrackSid
	}
	return ""
}

func (m *SubscribedQualityUpdate) GetSubscribedQualities() []*SubscribedQuality {
	if m != nil {
		return m.SubscribedQualities
	}
	return nil
}

func (m *SubscribedQualityUpdate) GetSubscribedCodecs() []*SubscribedCodec {
	if m != nil {
		return m.SubscribedCodecs
	}
	return nil
}

type TrackPermission struct {
	// permission could be granted either by participant sid or identity
	ParticipantSid       string   `protobuf:"bytes,1,opt,name=participant_sid,json=participantSid,proto3" json:"participant_sid,omitempty"`
	AllTracks            bool     `protobuf:"varint,2,opt,name=all_tracks,json=allTracks,proto3" json:"all_tracks,omitempty"`
	TrackSids            []string `protobuf:"bytes,3,rep,name=track_sids,json=trackSids,proto3" json:"track_sids,omitempty"`
	ParticipantIdentity  string   `protobuf:"bytes,4,opt,name=participant_identity,json=participantIdentity,proto3" json:"participant_identity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrackPermission) Reset()         { *m = TrackPermission{} }
func (m *TrackPermission) String() string { return proto.CompactTextString(m) }
func (*TrackPermission) ProtoMessage()    {}
func (*TrackPermission) Descriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{27}
}

func (m *TrackPermission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrackPermission.Unmarshal(m, b)
}
func (m *TrackPermission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrackPermission.Marshal(b, m, deterministic)
}
func (m *TrackPermission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrackPermission.Merge(m, src)
}
func (m *TrackPermission) XXX_Size() int {
	return xxx_messageInfo_TrackPermission.Size(m)
}
func (m *TrackPermission) XXX_DiscardUnknown() {
	xxx_messageInfo_TrackPermission.DiscardUnknown(m)
}

var xxx_messageInfo_TrackPermission proto.InternalMessageInfo

func (m *TrackPermission) GetParticipantSid() string {
	if m != nil {
		return m.ParticipantSid
	}
	return ""
}

func (m *TrackPermission) GetAllTracks() bool {
	if m != nil {
		return m.AllTracks
	}
	return false
}

func (m *TrackPermission) GetTrackSids() []string {
	if m != nil {
		return m.TrackSids
	}
	return nil
}

func (m *TrackPermission) GetParticipantIdentity() string {
	if m != nil {
		return m.ParticipantIdentity
	}
	return ""
}

type SubscriptionPermission struct {
	AllParticipants      bool               `protobuf:"varint,1,opt,name=all_participants,json=allParticipants,proto3" json:"all_participants,omitempty"`
	TrackPermissions     []*TrackPermission `protobuf:"bytes,2,rep,name=track_permissions,json=trackPermissions,proto3" json:"track_permissions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SubscriptionPermission) Reset()         { *m = SubscriptionPermission{} }
func (m *SubscriptionPermission) String() string { return proto.CompactTextString(m) }
func (*SubscriptionPermission) ProtoMessage()    {}
func (*SubscriptionPermission) Descriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{28}
}

func (m *SubscriptionPermission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriptionPermission.Unmarshal(m, b)
}
func (m *SubscriptionPermission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriptionPermission.Marshal(b, m, deterministic)
}
func (m *SubscriptionPermission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriptionPermission.Merge(m, src)
}
func (m *SubscriptionPermission) XXX_Size() int {
	return xxx_messageInfo_SubscriptionPermission.Size(m)
}
func (m *SubscriptionPermission) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriptionPermission.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriptionPermission proto.InternalMessageInfo

func (m *SubscriptionPermission) GetAllParticipants() bool {
	if m != nil {
		return m.AllParticipants
	}
	return false
}

func (m *SubscriptionPermission) GetTrackPermissions() []*TrackPermission {
	if m != nil {
		return m.TrackPermissions
	}
	return nil
}

type SubscriptionPermissionUpdate struct {
	ParticipantSid       string   `protobuf:"bytes,1,opt,name=participant_sid,json=participantSid,proto3" json:"participant_sid,omitempty"`
	TrackSid             string   `protobuf:"bytes,2,opt,name=track_sid,json=trackSid,proto3" json:"track_sid,omitempty"`
	Allowed              bool     `protobuf:"varint,3,opt,name=allowed,proto3" json:"allowed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscriptionPermissionUpdate) Reset()         { *m = SubscriptionPermissionUpdate{} }
func (m *SubscriptionPermissionUpdate) String() string { return proto.CompactTextString(m) }
func (*SubscriptionPermissionUpdate) ProtoMessage()    {}
func (*SubscriptionPermissionUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{29}
}

func (m *SubscriptionPermissionUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriptionPermissionUpdate.Unmarshal(m, b)
}
func (m *SubscriptionPermissionUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriptionPermissionUpdate.Marshal(b, m, deterministic)
}
func (m *SubscriptionPermissionUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriptionPermissionUpdate.Merge(m, src)
}
func (m *SubscriptionPermissionUpdate) XXX_Size() int {
	return xxx_messageInfo_SubscriptionPermissionUpdate.Size(m)
}
func (m *SubscriptionPermissionUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriptionPermissionUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriptionPermissionUpdate proto.InternalMessageInfo

func (m *SubscriptionPermissionUpdate) GetParticipantSid() string {
	if m != nil {
		return m.ParticipantSid
	}
	return ""
}

func (m *SubscriptionPermissionUpdate) GetTrackSid() string {
	if m != nil {
		return m.TrackSid
	}
	return ""
}

func (m *SubscriptionPermissionUpdate) GetAllowed() bool {
	if m != nil {
		return m.Allowed
	}
	return false
}

type SyncState struct {
	// last subscribe answer before reconnecting
	Answer        *SessionDescription       `protobuf:"bytes,1,opt,name=answer,proto3" json:"answer,omitempty"`
	Subscription  *UpdateSubscription       `protobuf:"bytes,2,opt,name=subscription,proto3" json:"subscription,omitempty"`
	PublishTracks []*TrackPublishedResponse `protobuf:"bytes,3,rep,name=publish_tracks,json=publishTracks,proto3" json:"publish_tracks,omitempty"`
	DataChannels  []*DataChannelInfo        `protobuf:"bytes,4,rep,name=data_channels,json=dataChannels,proto3" json:"data_channels,omitempty"`
	// last received server side offer before reconnecting
	Offer                *SessionDescription `protobuf:"bytes,5,opt,name=offer,proto3" json:"offer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SyncState) Reset()         { *m = SyncState{} }
func (m *SyncState) String() string { return proto.CompactTextString(m) }
func (*SyncState) ProtoMessage()    {}
func (*SyncState) Descriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{30}
}

func (m *SyncState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncState.Unmarshal(m, b)
}
func (m *SyncState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncState.Marshal(b, m, deterministic)
}
func (m *SyncState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncState.Merge(m, src)
}
func (m *SyncState) XXX_Size() int {
	return xxx_messageInfo_SyncState.Size(m)
}
func (m *SyncState) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncState.DiscardUnknown(m)
}

var xxx_messageInfo_SyncState proto.InternalMessageInfo

func (m *SyncState) GetAnswer() *SessionDescription {
	if m != nil {
		return m.Answer
	}
	return nil
}

func (m *SyncState) GetSubscription() *UpdateSubscription {
	if m != nil {
		return m.Subscription
	}
	return nil
}

func (m *SyncState) GetPublishTracks() []*TrackPublishedResponse {
	if m != nil {
		return m.PublishTracks
	}
	return nil
}

func (m *SyncState) GetDataChannels() []*DataChannelInfo {
	if m != nil {
		return m.DataChannels
	}
	return nil
}

func (m *SyncState) GetOffer() *SessionDescription {
	if m != nil {
		return m.Offer
	}
	return nil
}

type DataChannelInfo struct {
	Label                string       `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Id                   uint32       `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Target               SignalTarget `protobuf:"varint,3,opt,name=target,proto3,enum=tc.SignalTarget" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DataChannelInfo) Reset()         { *m = DataChannelInfo{} }
func (m *DataChannelInfo) String() string { return proto.CompactTextString(m) }
func (*DataChannelInfo) ProtoMessage()    {}
func (*DataChannelInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{31}
}

func (m *DataChannelInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataChannelInfo.Unmarshal(m, b)
}
func (m *DataChannelInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataChannelInfo.Marshal(b, m, deterministic)
}
func (m *DataChannelInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataChannelInfo.Merge(m, src)
}
func (m *DataChannelInfo) XXX_Size() int {
	return xxx_messageInfo_DataChannelInfo.Size(m)
}
func (m *DataChannelInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DataChannelInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DataChannelInfo proto.InternalMessageInfo

func (m *DataChannelInfo) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *DataChannelInfo) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DataChannelInfo) GetTarget() SignalTarget {
	if m != nil {
		return m.Target
	}
	return SignalTarget_PUBLISHER
}

type SimulateScenario struct {
	// Types that are valid to be assigned to Scenario:
	//	*SimulateScenario_SpeakerUpdate
	//	*SimulateScenario_NodeFailure
	//	*SimulateScenario_Migration
	//	*SimulateScenario_ServerLeave
	//	*SimulateScenario_SwitchCandidateProtocol
	//	*SimulateScenario_SubscriberBandwidth
	Scenario             isSimulateScenario_Scenario `protobuf_oneof:"scenario"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *SimulateScenario) Reset()         { *m = SimulateScenario{} }
func (m *SimulateScenario) String() string { return proto.CompactTextString(m) }
func (*SimulateScenario) ProtoMessage()    {}
func (*SimulateScenario) Descriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{32}
}

func (m *SimulateScenario) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimulateScenario.Unmarshal(m, b)
}
func (m *SimulateScenario) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimulateScenario.Marshal(b, m, deterministic)
}
func (m *SimulateScenario) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimulateScenario.Merge(m, src)
}
func (m *SimulateScenario) XXX_Size() int {
	return xxx_messageInfo_SimulateScenario.Size(m)
}
func (m *SimulateScenario) XXX_DiscardUnknown() {
	xxx_messageInfo_SimulateScenario.DiscardUnknown(m)
}

var xxx_messageInfo_SimulateScenario proto.InternalMessageInfo

type isSimulateScenario_Scenario interface {
	isSimulateScenario_Scenario()
}

type SimulateScenario_SpeakerUpdate struct {
	SpeakerUpdate int32 `protobuf:"varint,1,opt,name=speaker_update,json=speakerUpdate,proto3,oneof"`
}

type SimulateScenario_NodeFailure struct {
	NodeFailure bool `protobuf:"varint,2,opt,name=node_failure,json=nodeFailure,proto3,oneof"`
}

type SimulateScenario_Migration struct {
	Migration bool `protobuf:"varint,3,opt,name=migration,proto3,oneof"`
}

type SimulateScenario_ServerLeave struct {
	ServerLeave bool `protobuf:"varint,4,opt,name=server_leave,json=serverLeave,proto3,oneof"`
}

type SimulateScenario_SwitchCandidateProtocol struct {
	SwitchCandidateProtocol CandidateProtocol `protobuf:"varint,5,opt,name=switch_candidate_protocol,json=switchCandidateProtocol,proto3,enum=tc.CandidateProtocol,oneof"`
}

type SimulateScenario_SubscriberBandwidth struct {
	SubscriberBandwidth int64 `protobuf:"varint,6,opt,name=subscriber_bandwidth,json=subscriberBandwidth,proto3,oneof"`
}

func (*SimulateScenario_SpeakerUpdate) isSimulateScenario_Scenario() {}

func (*SimulateScenario_NodeFailure) isSimulateScenario_Scenario() {}

func (*SimulateScenario_Migration) isSimulateScenario_Scenario() {}

func (*SimulateScenario_ServerLeave) isSimulateScenario_Scenario() {}

func (*SimulateScenario_SwitchCandidateProtocol) isSimulateScenario_Scenario() {}

func (*SimulateScenario_SubscriberBandwidth) isSimulateScenario_Scenario() {}

func (m *SimulateScenario) GetScenario() isSimulateScenario_Scenario {
	if m != nil {
		return m.Scenario
	}
	return nil
}

func (m *SimulateScenario) GetSpeakerUpdate() int32 {
	if x, ok := m.GetScenario().(*SimulateScenario_SpeakerUpdate); ok {
		return x.SpeakerUpdate
	}
	return 0
}

func (m *SimulateScenario) GetNodeFailure() bool {
	if x, ok := m.GetScenario().(*SimulateScenario_NodeFailure); ok {
		return x.NodeFailure
	}
	return false
}

func (m *SimulateScenario) GetMigration() bool {
	if x, ok := m.GetScenario().(*SimulateScenario_Migration); ok {
		return x.Migration
	}
	return false
}

func (m *SimulateScenario) GetServerLeave() bool {
	if x, ok := m.GetScenario().(*SimulateScenario_ServerLeave); ok {
		return x.ServerLeave
	}
	return false
}

func (m *SimulateScenario) GetSwitchCandidateProtocol() CandidateProtocol {
	if x, ok := m.GetScenario().(*SimulateScenario_SwitchCandidateProtocol); ok {
		return x.SwitchCandidateProtocol
	}
	return CandidateProtocol_UDP
}

func (m *SimulateScenario) GetSubscriberBandwidth() int64 {
	if x, ok := m.GetScenario().(*SimulateScenario_SubscriberBandwidth); ok {
		return x.SubscriberBandwidth
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SimulateScenario) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SimulateScenario_SpeakerUpdate)(nil),
		(*SimulateScenario_NodeFailure)(nil),
		(*SimulateScenario_Migration)(nil),
		(*SimulateScenario_ServerLeave)(nil),
		(*SimulateScenario_SwitchCandidateProtocol)(nil),
		(*SimulateScenario_SubscriberBandwidth)(nil),
	}
}

type Ping struct {
	Timestamp int64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// rtt in milliseconds calculated by client
	Rtt                  int64    `protobuf:"varint,2,opt,name=rtt,proto3" json:"rtt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ping) Reset()         { *m = Ping{} }
func (m *Ping) String() string { return proto.CompactTextString(m) }
func (*Ping) ProtoMessage()    {}
func (*Ping) Descriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{33}
}

func (m *Ping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ping.Unmarshal(m, b)
}
func (m *Ping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ping.Marshal(b, m, deterministic)
}
func (m *Ping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ping.Merge(m, src)
}
func (m *Ping) XXX_Size() int {
	return xxx_messageInfo_Ping.Size(m)
}
func (m *Ping) XXX_DiscardUnknown() {
	xxx_messageInfo_Ping.DiscardUnknown(m)
}

var xxx_messageInfo_Ping proto.InternalMessageInfo

func (m *Ping) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Ping) GetRtt() int64 {
	if m != nil {
		return m.Rtt
	}
	return 0
}

type Pong struct {
	// timestamp field of last received ping request
	LastPingTimestamp    int64    `protobuf:"varint,1,opt,name=last_ping_timestamp,json=lastPingTimestamp,proto3" json:"last_ping_timestamp,omitempty"`
	Timestamp            int64    `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pong) Reset()         { *m = Pong{} }
func (m *Pong) String() string { return proto.CompactTextString(m) }
func (*Pong) ProtoMessage()    {}
func (*Pong) Descriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{34}
}

func (m *Pong) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pong.Unmarshal(m, b)
}
func (m *Pong) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pong.Marshal(b, m, deterministic)
}
func (m *Pong) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pong.Merge(m, src)
}
func (m *Pong) XXX_Size() int {
	return xxx_messageInfo_Pong.Size(m)
}
func (m *Pong) XXX_DiscardUnknown() {
	xxx_messageInfo_Pong.DiscardUnknown(m)
}

var xxx_messageInfo_Pong proto.InternalMessageInfo

func (m *Pong) GetLastPingTimestamp() int64 {
	if m != nil {
		return m.LastPingTimestamp
	}
	return 0
}

func (m *Pong) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type RegionSettings struct {
	Regions              []*RegionInfo `protobuf:"bytes,1,rep,name=regions,proto3" json:"regions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *RegionSettings) Reset()         { *m = RegionSettings{} }
func (m *RegionSettings) String() string { return proto.CompactTextString(m) }
func (*RegionSettings) ProtoMessage()    {}
func (*RegionSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{35}
}

func (m *RegionSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegionSettings.Unmarshal(m, b)
}
func (m *RegionSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegionSettings.Marshal(b, m, deterministic)
}
func (m *RegionSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegionSettings.Merge(m, src)
}
func (m *RegionSettings) XXX_Size() int {
	return xxx_messageInfo_RegionSettings.Size(m)
}
func (m *RegionSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_RegionSettings.DiscardUnknown(m)
}

var xxx_messageInfo_RegionSettings proto.InternalMessageInfo

func (m *RegionSettings) GetRegions() []*RegionInfo {
	if m != nil {
		return m.Regions
	}
	return nil
}

type RegionInfo struct {
	Region               string   `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	Url                  string   `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Distance             int64    `protobuf:"varint,3,opt,name=distance,proto3" json:"distance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegionInfo) Reset()         { *m = RegionInfo{} }
func (m *RegionInfo) String() string { return proto.CompactTextString(m) }
func (*RegionInfo) ProtoMessage()    {}
func (*RegionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{36}
}

func (m *RegionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegionInfo.Unmarshal(m, b)
}
func (m *RegionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegionInfo.Marshal(b, m, deterministic)
}
func (m *RegionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegionInfo.Merge(m, src)
}
func (m *RegionInfo) XXX_Size() int {
	return xxx_messageInfo_RegionInfo.Size(m)
}
func (m *RegionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RegionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RegionInfo proto.InternalMessageInfo

func (m *RegionInfo) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *RegionInfo) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *RegionInfo) GetDistance() int64 {
	if m != nil {
		return m.Distance
	}
	return 0
}

type SubscriptionResponse struct {
	TrackSid             string            `protobuf:"bytes,1,opt,name=track_sid,json=trackSid,proto3" json:"track_sid,omitempty"`
	Err                  SubscriptionError `protobuf:"varint,2,opt,name=err,proto3,enum=tc.SubscriptionError" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SubscriptionResponse) Reset()         { *m = SubscriptionResponse{} }
func (m *SubscriptionResponse) String() string { return proto.CompactTextString(m) }
func (*SubscriptionResponse) ProtoMessage()    {}
func (*SubscriptionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e711e4d1068ab00e, []int{37}
}

func (m *SubscriptionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriptionResponse.Unmarshal(m, b)
}
func (m *SubscriptionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriptionResponse.Marshal(b, m, deterministic)
}
func (m *SubscriptionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriptionResponse.Merge(m, src)
}
func (m *SubscriptionResponse) XXX_Size() int {
	return xxx_messageInfo_SubscriptionResponse.Size(m)
}
func (m *SubscriptionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriptionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriptionResponse proto.InternalMessageInfo

func (m *SubscriptionResponse) GetTrackSid() string {
	if m != nil {
		return m.TrackSid
	}
	return ""
}

func (m *SubscriptionResponse) GetErr() SubscriptionError {
	if m != nil {
		return m.Err
	}
	return SubscriptionError_SE_UNKNOWN
}

func init() {
	proto.RegisterEnum("tc.SignalTarget", SignalTarget_name, SignalTarget_value)
	proto.RegisterEnum("tc.StreamState", StreamState_name, StreamState_value)
	proto.RegisterEnum("tc.CandidateProtocol", CandidateProtocol_name, CandidateProtocol_value)
	proto.RegisterType((*SignalRequest)(nil), "tc.SignalRequest")
	proto.RegisterType((*SignalResponse)(nil), "tc.SignalResponse")
	proto.RegisterType((*SimulcastCodec)(nil), "tc.SimulcastCodec")
	proto.RegisterType((*AddTrackRequest)(nil), "tc.AddTrackRequest")
	proto.RegisterType((*TrickleRequest)(nil), "tc.TrickleRequest")
	proto.RegisterType((*MuteTrackRequest)(nil), "tc.MuteTrackRequest")
	proto.RegisterType((*JoinResponse)(nil), "tc.JoinResponse")
	proto.RegisterType((*ReconnectResponse)(nil), "tc.ReconnectResponse")
	proto.RegisterType((*TrackPublishedResponse)(nil), "tc.TrackPublishedResponse")
	proto.RegisterType((*TrackUnpublishedResponse)(nil), "tc.TrackUnpublishedResponse")
	proto.RegisterType((*SessionDescription)(nil), "tc.SessionDescription")
	proto.RegisterType((*ParticipantUpdate)(nil), "tc.ParticipantUpdate")
	proto.RegisterType((*UpdateSubscription)(nil), "tc.UpdateSubscription")
	proto.RegisterType((*UpdateTrackSettings)(nil), "tc.UpdateTrackSettings")
	proto.RegisterType((*LeaveRequest)(nil), "tc.LeaveRequest")
	proto.RegisterType((*UpdateVideoLayers)(nil), "tc.UpdateVideoLayers")
	proto.RegisterType((*UpdateParticipantMetadata)(nil), "tc.UpdateParticipantMetadata")
	proto.RegisterType((*ICEServer)(nil), "tc.ICEServer")
	proto.RegisterType((*SpeakersChanged)(nil), "tc.SpeakersChanged")
	proto.RegisterType((*RoomUpdate)(nil), "tc.RoomUpdate")
	proto.RegisterType((*ConnectionQualityInfo)(nil), "tc.ConnectionQualityInfo")
	proto.RegisterType((*ConnectionQualityUpdate)(nil), "tc.ConnectionQualityUpdate")
	proto.RegisterType((*StreamStateInfo)(nil), "tc.StreamStateInfo")
	proto.RegisterType((*StreamStateUpdate)(nil), "tc.StreamStateUpdate")
	proto.RegisterType((*SubscribedQuality)(nil), "tc.SubscribedQuality")
	proto.RegisterType((*SubscribedCodec)(nil), "tc.SubscribedCodec")
	proto.RegisterType((*SubscribedQualityUpdate)(nil), "tc.SubscribedQualityUpdate")
	proto.RegisterType((*TrackPermission)(nil), "tc.TrackPermission")
	proto.RegisterType((*SubscriptionPermission)(nil), "tc.SubscriptionPermission")
	proto.RegisterType((*SubscriptionPermissionUpdate)(nil), "tc.SubscriptionPermissionUpdate")
	proto.RegisterType((*SyncState)(nil), "tc.SyncState")
	proto.RegisterType((*DataChannelInfo)(nil), "tc.DataChannelInfo")
	proto.RegisterType((*SimulateScenario)(nil), "tc.SimulateScenario")
	proto.RegisterType((*Ping)(nil), "tc.Ping")
	proto.RegisterType((*Pong)(nil), "tc.Pong")
	proto.RegisterType((*RegionSettings)(nil), "tc.RegionSettings")
	proto.RegisterType((*RegionInfo)(nil), "tc.RegionInfo")
	proto.RegisterType((*SubscriptionResponse)(nil), "tc.SubscriptionResponse")
}

func init() { proto.RegisterFile("tc_rtc.proto", fileDescriptor_e711e4d1068ab00e) }

var fileDescriptor_e711e4d1068ab00e = []byte{
	// 2601 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x59, 0x49, 0x93, 0x1b, 0xb7,
	0xf5, 0x1f, 0x2e, 0xc3, 0x61, 0xbf, 0xe1, 0x8a, 0x19, 0x49, 0x2d, 0x59, 0xf6, 0x5f, 0x6e, 0xfd,
	0x65, 0x29, 0x8a, 0x4d, 0xc5, 0x52, 0x39, 0x76, 0xa9, 0x1c, 0x97, 0x35, 0x4b, 0xc2, 0xb1, 0xe5,
	0x98, 0x01, 0x67, 0x5c, 0x71, 0xe2, 0xaa, 0x0e, 0xa6, 0x1b, 0xc3, 0x41, 0xd4, 0xec, 0xa6, 0x00,
	0x50, 0xf2, 0x5c, 0x72, 0x4b, 0xe5, 0x98, 0x63, 0xee, 0xb9, 0xe6, 0x90, 0x4b, 0x6e, 0xb9, 0xe5,
	0x53, 0xe4, 0x9a, 0x53, 0xbe, 0x46, 0x0a, 0x4b, 0x2f, 0x6c, 0x72, 0x28, 0x29, 0x95, 0x5b, 0xe3,
	0xf7, 0x16, 0x00, 0x0f, 0x78, 0x1b, 0x1a, 0x5a, 0x32, 0xf0, 0xb9, 0x0c, 0x06, 0x33, 0x9e, 0xc8,
	0x04, 0x55, 0x65, 0x70, 0xa3, 0x2b, 0x03, 0x7f, 0x9a, 0x84, 0x34, 0x12, 0x06, 0xf4, 0xfe, 0xd6,
	0x80, 0xf6, 0x98, 0x4d, 0x62, 0x12, 0x61, 0xfa, 0x7c, 0x4e, 0x85, 0x44, 0x03, 0xd8, 0x4c, 0xce,
	0xce, 0x28, 0x77, 0x2b, 0xb7, 0x2a, 0xf7, 0xb6, 0x1f, 0x5e, 0x1d, 0xc8, 0x60, 0x30, 0xa6, 0x42,
	0xb0, 0x24, 0x3e, 0xa0, 0x22, 0xe0, 0x6c, 0x26, 0x59, 0x12, 0x0f, 0x37, 0xb0, 0x61, 0x43, 0x3f,
	0x82, 0x06, 0x89, 0xc5, 0x4b, 0xca, 0xdd, 0xea, 0x2b, 0x04, 0x2c, 0x1f, 0x1a, 0xc0, 0x96, 0xe4,
	0x2c, 0x78, 0x16, 0x51, 0xb7, 0xa6, 0x45, 0x90, 0x12, 0x39, 0x36, 0x90, 0x5d, 0xc6, 0x70, 0x03,
	0xa7, 0x4c, 0xe8, 0x21, 0x38, 0x24, 0x0c, 0x7d, 0xc9, 0x49, 0xf0, 0xcc, 0xad, 0x6b, 0x89, 0x1d,
	0x25, 0xf1, 0x24, 0x0c, 0x8f, 0x15, 0x96, 0x8b, 0x34, 0x89, 0x85, 0xd0, 0x7d, 0xa8, 0x4f, 0xe7,
	0x92, 0xba, 0x9b, 0x9a, 0x7d, 0x57, 0xb1, 0x7f, 0x35, 0x97, 0xb4, 0xc4, 0xaf, 0x79, 0xd0, 0xa7,
	0xd0, 0x12, 0xf3, 0xd3, 0x6c, 0xa5, 0x6e, 0x23, 0xdf, 0xc7, 0xc9, 0x2c, 0x24, 0x92, 0x8e, 0x0b,
	0xd4, 0xe1, 0x06, 0x5e, 0xe0, 0x46, 0x9f, 0x41, 0x5b, 0xaf, 0xcc, 0x17, 0x54, 0x4a, 0x16, 0x4f,
	0xdc, 0x2d, 0x2d, 0x7e, 0x2d, 0x17, 0xd7, 0x93, 0x8e, 0x0d, 0x55, 0x28, 0x79, 0x59, 0x00, 0xd0,
	0x3d, 0xd8, 0x8c, 0x28, 0x79, 0x41, 0xdd, 0xa6, 0x96, 0xeb, 0x29, 0xb9, 0xa7, 0x0a, 0xc8, 0x97,
	0x69, 0x18, 0xd0, 0xa7, 0xd0, 0x9e, 0x6b, 0x85, 0x7e, 0x44, 0x2e, 0x28, 0x17, 0x2e, 0x68, 0x89,
	0x2b, 0xf9, 0x4c, 0xdf, 0xb0, 0x90, 0x26, 0x4f, 0x35, 0x51, 0xcd, 0x63, 0xb8, 0xcd, 0x18, 0x9d,
	0xc0, 0xb5, 0xe2, 0xba, 0xfd, 0x19, 0xe5, 0x53, 0xa6, 0x4f, 0xc9, 0xdd, 0xd6, 0x7a, 0x6e, 0xe8,
	0x83, 0x2b, 0xb0, 0x8c, 0x32, 0x8e, 0xe1, 0x06, 0xbe, 0x2a, 0x56, 0x52, 0xd0, 0x00, 0x40, 0x5c,
	0xc4, 0x81, 0x2f, 0x24, 0x91, 0xd4, 0x6d, 0x69, 0x4d, 0x6d, 0xad, 0xe9, 0x22, 0x0e, 0xc6, 0x0a,
	0x1c, 0x6e, 0x60, 0x47, 0xa4, 0x03, 0xf4, 0x10, 0x9a, 0x82, 0x4d, 0xe7, 0x91, 0xe2, 0x6e, 0xe7,
	0x87, 0x33, 0xb6, 0xd8, 0x38, 0xa0, 0x31, 0xe1, 0x2c, 0x51, 0x87, 0x99, 0xf2, 0xa1, 0x5d, 0xa8,
	0xcf, 0x94, 0x65, 0x3b, 0xb7, 0x2a, 0xf7, 0x6a, 0xea, 0xd8, 0xd4, 0x08, 0x0d, 0xa1, 0x6b, 0xcd,
	0x31, 0xa5, 0x92, 0x84, 0x44, 0x12, 0xb7, 0xab, 0x15, 0xbe, 0x9d, 0x1b, 0x64, 0x44, 0xb8, 0x64,
	0x01, 0x9b, 0x91, 0x58, 0x7e, 0x65, 0x99, 0x86, 0x1b, 0xb8, 0x63, 0xe4, 0x52, 0x04, 0xdd, 0x81,
	0xa6, 0xd2, 0xe8, 0x73, 0xfa, 0xdc, 0xed, 0x69, 0x15, 0x4d, 0xa5, 0x62, 0xc4, 0xe2, 0x89, 0xba,
	0x87, 0x8a, 0x86, 0xe9, 0xf3, 0x3d, 0x07, 0xb6, 0xa6, 0x54, 0x08, 0x32, 0xa1, 0xde, 0x5f, 0x1d,
	0xe8, 0xa4, 0x6e, 0x23, 0x66, 0x49, 0x2c, 0x28, 0x7a, 0x0f, 0xea, 0xbf, 0x4d, 0x58, 0x6c, 0xdd,
	0x46, 0x1f, 0xe3, 0x17, 0x09, 0x8b, 0x53, 0xba, 0x5a, 0xb6, 0xa2, 0xff, 0x57, 0xfe, 0x62, 0x3d,
	0xb2, 0xf6, 0x7a, 0x1e, 0x59, 0xf0, 0xaf, 0xfa, 0xeb, 0xf8, 0xd7, 0x03, 0x68, 0x18, 0x83, 0x58,
	0x6f, 0xd1, 0x17, 0xaa, 0x60, 0x39, 0x63, 0x4a, 0xb5, 0x20, 0xc3, 0x86, 0x0e, 0xa1, 0x6b, 0xae,
	0xfc, 0x6c, 0x7e, 0x1a, 0x31, 0x71, 0x4e, 0x43, 0xeb, 0x33, 0x37, 0xcc, 0x44, 0x24, 0x78, 0x36,
	0x4a, 0x29, 0x85, 0xfd, 0x77, 0xe4, 0x02, 0xe5, 0x0d, 0x6e, 0x7e, 0xea, 0xcd, 0xce, 0x6b, 0x78,
	0xf3, 0xe7, 0xd0, 0x13, 0x33, 0x4a, 0x9e, 0x51, 0x2e, 0xfc, 0xe0, 0x9c, 0xc4, 0x13, 0x1a, 0x5a,
	0x47, 0xd1, 0x41, 0x63, 0x6c, 0x69, 0xfb, 0x86, 0x34, 0xdc, 0xc0, 0x5d, 0xb1, 0x08, 0xa1, 0x0f,
	0x61, 0x9b, 0x27, 0xc9, 0xd4, 0xb7, 0x46, 0x31, 0xde, 0xd1, 0x51, 0xc2, 0x38, 0x49, 0xa6, 0x99,
	0x35, 0x80, 0x67, 0x23, 0xf4, 0x14, 0x50, 0x90, 0xc4, 0x31, 0x0d, 0xb4, 0x6b, 0x3d, 0x9f, 0x93,
	0x88, 0xc9, 0x0b, 0xeb, 0x0d, 0x6f, 0x29, 0xc9, 0xfd, 0x8c, 0xfa, 0x0b, 0x43, 0xcc, 0xd4, 0xf4,
	0x83, 0x32, 0x09, 0xfd, 0x0c, 0x76, 0x84, 0xe4, 0x94, 0x4c, 0x8d, 0x57, 0xa5, 0x0b, 0x69, 0xe7,
	0xa7, 0x33, 0xd6, 0x64, 0xed, 0x51, 0xb9, 0x22, 0x51, 0x06, 0xd1, 0xb7, 0x70, 0xdd, 0xba, 0xed,
	0x29, 0x0d, 0xd3, 0x65, 0xa5, 0xea, 0x3a, 0xf9, 0xea, 0xc6, 0x19, 0x53, 0x79, 0x75, 0xd7, 0xc4,
	0x6a, 0x12, 0x3a, 0x87, 0x77, 0x2e, 0x09, 0x27, 0xa9, 0x7e, 0xe3, 0x8c, 0xb7, 0x2e, 0x8f, 0x2a,
	0xd9, 0x24, 0x37, 0xc5, 0x1a, 0x3a, 0xba, 0x03, 0x6d, 0x4e, 0xcf, 0x38, 0x15, 0xe7, 0xbe, 0x4c,
	0x9e, 0xd1, 0x58, 0xbb, 0xa8, 0xa3, 0xe2, 0x9b, 0x85, 0x8f, 0x15, 0x8a, 0xbe, 0x84, 0xbe, 0xb9,
	0x94, 0xf3, 0x38, 0xbf, 0x96, 0x7d, 0xbd, 0x86, 0x9b, 0xd9, 0xb5, 0x3c, 0xc9, 0x69, 0x85, 0x8b,
	0xd9, 0x93, 0x25, 0x9a, 0x8e, 0x38, 0x49, 0x3c, 0x71, 0x51, 0x16, 0x71, 0x92, 0x78, 0x82, 0x3e,
	0x02, 0x87, 0x53, 0x7b, 0x5c, 0xee, 0x4e, 0x7e, 0x1a, 0x38, 0x05, 0x0b, 0x3a, 0x73, 0x4e, 0x74,
	0x17, 0x1c, 0x25, 0xee, 0x73, 0x2a, 0x66, 0xee, 0x6e, 0x21, 0xbe, 0x24, 0x3a, 0xbe, 0x34, 0x15,
	0x51, 0x49, 0xa2, 0xaf, 0xe1, 0xca, 0x82, 0x4d, 0xb9, 0x55, 0xe7, 0x5e, 0xd1, 0x42, 0x6e, 0xd9,
	0x94, 0x85, 0xe9, 0x76, 0xc5, 0x0a, 0xbc, 0x18, 0xb1, 0x3e, 0x51, 0x01, 0x6b, 0x3a, 0x8f, 0x02,
	0x22, 0xe4, 0x7e, 0x12, 0xd2, 0x00, 0xed, 0xc2, 0x66, 0xa0, 0x3e, 0x74, 0xc4, 0x72, 0xb0, 0x19,
	0xa0, 0x1e, 0xd4, 0x02, 0x16, 0xea, 0xd8, 0xe4, 0x60, 0xf5, 0xe9, 0xfd, 0xbb, 0x06, 0xdd, 0x52,
	0xaa, 0x4d, 0xb9, 0x2a, 0x19, 0x17, 0x42, 0x50, 0x8f, 0xc9, 0x94, 0x5a, 0x41, 0xfd, 0x8d, 0xde,
	0x85, 0xba, 0xbc, 0x98, 0x99, 0x2c, 0xdf, 0x31, 0x59, 0x41, 0x6b, 0x39, 0xbe, 0x98, 0x51, 0xac,
	0x49, 0x6a, 0x11, 0x2f, 0x59, 0x28, 0xcf, 0x75, 0xa4, 0x6a, 0x63, 0x33, 0x40, 0x57, 0xa1, 0x71,
	0x4e, 0xd9, 0xe4, 0x5c, 0xea, 0x88, 0xd4, 0xc6, 0x76, 0xa4, 0xb8, 0x95, 0x8f, 0x9b, 0x70, 0xd3,
	0xc4, 0x66, 0x80, 0xfe, 0x0f, 0xb6, 0x43, 0x26, 0xc8, 0x69, 0x44, 0xfd, 0x50, 0x7e, 0xaf, 0xf3,
	0x6f, 0x13, 0x83, 0x85, 0x0e, 0xe4, 0xf7, 0xe8, 0x2e, 0x34, 0x44, 0x32, 0xe7, 0x81, 0x89, 0x34,
	0x9d, 0x87, 0xdd, 0x6c, 0x25, 0x63, 0x0d, 0x63, 0x4b, 0x46, 0xef, 0x41, 0xc3, 0xa6, 0x56, 0xe7,
	0x56, 0x2d, 0x75, 0xfa, 0x3c, 0xa9, 0x62, 0x4b, 0x45, 0x3f, 0x81, 0x9e, 0x48, 0x8d, 0xe9, 0x6b,
	0xbb, 0xa9, 0x64, 0x5c, 0x4b, 0x43, 0xed, 0xa2, 0xa1, 0x71, 0x57, 0x2c, 0x8c, 0x85, 0xb2, 0x9e,
	0x60, 0xa1, 0x0e, 0x2c, 0x0e, 0x56, 0x9f, 0x6a, 0xc3, 0x42, 0x52, 0x4e, 0x13, 0x1d, 0x33, 0x9a,
	0xd8, 0x8e, 0x8a, 0x5b, 0xe3, 0x34, 0xd4, 0x11, 0x20, 0xdf, 0x1a, 0xa6, 0x21, 0x7a, 0x04, 0x40,
	0xe3, 0x80, 0x5f, 0x98, 0xca, 0xa5, 0xa3, 0xb7, 0xa7, 0xe3, 0xdc, 0x61, 0x86, 0x0e, 0xb4, 0xb9,
	0x0b, 0x6c, 0x66, 0x36, 0x15, 0x2b, 0xb4, 0x8f, 0x3a, 0xd8, 0x8e, 0xbc, 0xdf, 0x40, 0x67, 0x31,
	0x4b, 0xa0, 0xff, 0x87, 0x76, 0x40, 0xe2, 0x90, 0x29, 0x47, 0x3c, 0x8a, 0x99, 0xb4, 0x27, 0xbe,
	0x08, 0xa2, 0x7b, 0xd0, 0x90, 0x84, 0x4f, 0xa8, 0xd4, 0xa7, 0xdf, 0x31, 0x91, 0xdc, 0xa4, 0xc7,
	0x63, 0x8d, 0x63, 0x4b, 0xf7, 0x1e, 0x43, 0xaf, 0x1c, 0xb8, 0x53, 0x6b, 0x54, 0x72, 0x6b, 0x64,
	0xc7, 0x5c, 0x2d, 0x1c, 0xb3, 0xf7, 0xaf, 0x3a, 0xb4, 0x8a, 0x19, 0x15, 0xdd, 0x84, 0xba, 0x0a,
	0xc1, 0x36, 0xe3, 0x36, 0xd3, 0x00, 0x8d, 0x35, 0x8a, 0x3e, 0x82, 0xed, 0x59, 0x9e, 0xc3, 0x6c,
	0xb2, 0xdd, 0x29, 0xa5, 0xb6, 0xa3, 0xf8, 0x2c, 0xc1, 0x45, 0x3e, 0xb4, 0x07, 0x28, 0x91, 0xe7,
	0x94, 0xfb, 0x05, 0x50, 0xb8, 0x35, 0x7d, 0xb8, 0x2b, 0xa5, 0xfb, 0x9a, 0xbd, 0x80, 0x0a, 0x74,
	0x07, 0x3a, 0x82, 0xf2, 0x17, 0x94, 0xfb, 0x2f, 0x28, 0xd7, 0x15, 0x56, 0xdd, 0x98, 0xcd, 0xa0,
	0xdf, 0x18, 0x10, 0x0d, 0x60, 0x9b, 0x05, 0xd4, 0x37, 0xa0, 0x70, 0x37, 0xf5, 0x1c, 0xda, 0x4b,
	0x8e, 0xf6, 0x0f, 0xc7, 0x1a, 0xc5, 0xc0, 0x02, 0x6a, 0x3e, 0x05, 0xfa, 0x00, 0x50, 0x16, 0x8d,
	0xb9, 0x3f, 0xe3, 0x6c, 0x4a, 0xf8, 0x85, 0x75, 0x85, 0x7e, 0x4e, 0x19, 0x19, 0x02, 0xba, 0x0b,
	0x5d, 0x12, 0x49, 0xca, 0x63, 0x22, 0xd9, 0x0b, 0xea, 0xcf, 0x79, 0xa4, 0x5d, 0xc3, 0xc1, 0x9d,
	0x02, 0x7c, 0xc2, 0x23, 0xf4, 0x05, 0xec, 0x06, 0x11, 0xa3, 0xb1, 0xba, 0xca, 0xf1, 0x19, 0x9b,
	0xcc, 0x39, 0xd1, 0xb7, 0xa9, 0x99, 0x17, 0xb2, 0xfb, 0x9a, 0xbe, 0x5f, 0x24, 0xe3, 0x9d, 0x60,
	0x19, 0x44, 0xb7, 0xc1, 0x6e, 0xd2, 0xe7, 0x74, 0xa2, 0x94, 0x38, 0x7a, 0xca, 0x96, 0x01, 0xb1,
	0xc6, 0xd0, 0xbb, 0xd0, 0xd2, 0xf5, 0x96, 0x64, 0x53, 0x9a, 0xcc, 0xa5, 0x4e, 0xcf, 0x9b, 0x78,
	0x5b, 0x61, 0xc7, 0x06, 0x52, 0x7a, 0x34, 0x0b, 0x8b, 0x25, 0xe5, 0x2f, 0x48, 0xa4, 0x9d, 0x65,
	0x13, 0x6b, 0xb9, 0x23, 0x8b, 0xa1, 0x07, 0xb0, 0x6d, 0x27, 0x63, 0xf1, 0x59, 0x62, 0xd3, 0x6d,
	0xc7, 0x94, 0x47, 0x0a, 0xd6, 0xe7, 0x03, 0x22, 0xfb, 0x56, 0xee, 0x24, 0xd8, 0x99, 0xea, 0x24,
	0x58, 0x44, 0xb9, 0x76, 0xa7, 0x16, 0x06, 0xc1, 0xce, 0x8e, 0x0d, 0xe2, 0xfd, 0xb1, 0x02, 0xfd,
	0xa5, 0x68, 0x5e, 0x3e, 0xa8, 0xca, 0xab, 0x0e, 0xea, 0x32, 0x83, 0x56, 0xdf, 0xdc, 0xa0, 0xde,
	0xd7, 0x70, 0x75, 0x75, 0x41, 0xb5, 0x22, 0x06, 0xdf, 0x86, 0x4d, 0xd3, 0x24, 0x55, 0xf3, 0x32,
	0x5c, 0x0b, 0x6b, 0x43, 0x18, 0x9a, 0xf7, 0x31, 0xb8, 0x97, 0xa5, 0x42, 0xf4, 0x16, 0x38, 0xb6,
	0x97, 0xc9, 0x14, 0x37, 0x4d, 0xb3, 0xc2, 0x42, 0xef, 0x31, 0xa0, 0xe5, 0xaa, 0x53, 0xc5, 0x7d,
	0x1d, 0xe3, 0x0d, 0xb7, 0x09, 0xea, 0xca, 0xa3, 0xc3, 0x59, 0x9a, 0x43, 0x44, 0x38, 0xf3, 0x9e,
	0x42, 0x7f, 0xa9, 0xa0, 0x44, 0x1f, 0x43, 0x6b, 0xc1, 0xc9, 0x2a, 0x97, 0x3b, 0xd9, 0x02, 0xa3,
	0xf7, 0xa7, 0x0a, 0xa0, 0xe5, 0xce, 0x0c, 0xbd, 0x0d, 0x90, 0xad, 0xde, 0x68, 0x73, 0xb0, 0x93,
	0x2e, 0x5f, 0xa0, 0x9b, 0xe0, 0x64, 0x4e, 0x62, 0x23, 0x4b, 0x0e, 0xa0, 0x03, 0x40, 0x85, 0x39,
	0x4c, 0xb3, 0x99, 0xfa, 0x7d, 0xb9, 0x20, 0xd6, 0xf6, 0x13, 0xb8, 0x3f, 0x2b, 0x43, 0xde, 0x3f,
	0x2b, 0xb0, 0xb3, 0xa2, 0xe9, 0x7b, 0xd5, 0xd2, 0x6e, 0x40, 0xd3, 0xc6, 0xf4, 0x50, 0x27, 0xcb,
	0x26, 0xce, 0xc6, 0xe8, 0x3e, 0x6c, 0xa5, 0xf5, 0x64, 0x3d, 0x8f, 0xae, 0x3a, 0x29, 0xd9, 0x8a,
	0x0c, 0xa7, 0x0c, 0x79, 0x36, 0xdd, 0x5c, 0x9d, 0x4d, 0x1b, 0x0b, 0xd9, 0xb4, 0x07, 0xb5, 0xb3,
	0x99, 0xd0, 0x41, 0xa1, 0x8d, 0xd5, 0xa7, 0x5a, 0xc7, 0x8c, 0xb3, 0x84, 0xab, 0xc9, 0x9a, 0x1a,
	0xce, 0xc6, 0x1e, 0x81, 0x56, 0xb1, 0x38, 0x57, 0x1e, 0x1a, 0x10, 0x55, 0xa3, 0xa4, 0x05, 0x51,
	0x45, 0x2f, 0xbc, 0x15, 0x90, 0x38, 0xf3, 0x20, 0xf4, 0x3e, 0x34, 0x38, 0x25, 0xc2, 0xde, 0xfd,
	0x8e, 0x29, 0xdd, 0x0f, 0x98, 0xc8, 0x3c, 0x4c, 0xd1, 0xb0, 0xe5, 0xf1, 0x7e, 0x09, 0xfd, 0xa5,
	0x3e, 0x76, 0xed, 0x9d, 0x2c, 0x24, 0xec, 0xea, 0xba, 0x84, 0xed, 0x7d, 0x09, 0xd7, 0x2f, 0x6d,
	0x08, 0xd5, 0xae, 0xb3, 0x0e, 0xd2, 0x4e, 0x90, 0x8e, 0x57, 0x95, 0x35, 0xde, 0xaf, 0xc1, 0xc9,
	0xfc, 0x5e, 0x31, 0xcc, 0x79, 0x94, 0x9e, 0xa9, 0xfe, 0x56, 0x0a, 0xe7, 0x42, 0x45, 0xd8, 0x4c,
	0x30, 0x1b, 0xa3, 0x77, 0x00, 0x02, 0x4e, 0x43, 0x1a, 0x4b, 0x46, 0x22, 0x7d, 0xd8, 0x0e, 0x2e,
	0x20, 0xde, 0x67, 0xd0, 0x2d, 0xb5, 0x28, 0xe8, 0x87, 0xd0, 0x4c, 0x5b, 0x14, 0xeb, 0x23, 0xdd,
	0x42, 0x27, 0xa3, 0xfd, 0x23, 0x63, 0xf0, 0xee, 0x03, 0xe4, 0x5d, 0xca, 0xfa, 0x14, 0xe9, 0xfd,
	0xa1, 0x02, 0x57, 0x96, 0x1a, 0x13, 0x1d, 0x28, 0xef, 0x42, 0xb7, 0xe8, 0x0d, 0xb9, 0xe9, 0x3b,
	0x05, 0x58, 0x1d, 0xc0, 0x83, 0xfc, 0x76, 0x9a, 0x13, 0xbe, 0xb2, 0xb2, 0xdb, 0x59, 0xb8, 0xa2,
	0x22, 0x48, 0xb8, 0x29, 0x0a, 0xab, 0xd8, 0x0c, 0xbc, 0x9f, 0xc3, 0xb5, 0x4b, 0x3a, 0x24, 0xf4,
	0x08, 0xb6, 0x4c, 0x43, 0x91, 0x6e, 0xfe, 0xfa, 0xca, 0x19, 0xb4, 0x19, 0x52, 0x4e, 0xef, 0x77,
	0xd0, 0x2d, 0xb4, 0x48, 0x6f, 0xb6, 0xa5, 0x85, 0x0b, 0x57, 0x2d, 0x5d, 0xb8, 0x3b, 0xb0, 0x69,
	0x5e, 0x3a, 0x6a, 0x79, 0x25, 0x59, 0x98, 0x09, 0x1b, 0xaa, 0xf7, 0x15, 0xf4, 0x97, 0x5a, 0x34,
	0xf4, 0x09, 0xb4, 0x8b, 0x6d, 0xdd, 0x42, 0xc0, 0x2b, 0xad, 0x16, 0xb7, 0x0a, 0xcd, 0x9c, 0xf0,
	0xbe, 0x85, 0xfe, 0x52, 0x8b, 0x56, 0x0c, 0x0c, 0x95, 0x57, 0x05, 0x06, 0x17, 0xb6, 0x68, 0x6c,
	0xe2, 0x8b, 0x89, 0x7c, 0xe9, 0xd0, 0xfb, 0x0e, 0xba, 0xb9, 0xea, 0x75, 0x8d, 0xc1, 0x23, 0x70,
	0x8c, 0x36, 0x46, 0x53, 0x6f, 0xbb, 0xb2, 0xb2, 0x77, 0xc4, 0x39, 0x9f, 0xf7, 0x8f, 0x0a, 0x5c,
	0xbb, 0xa4, 0xb9, 0x5c, 0xef, 0xd8, 0x43, 0xd8, 0x5d, 0xea, 0x5c, 0x5f, 0x39, 0xf1, 0x4e, 0xb9,
	0x59, 0x65, 0x54, 0xa0, 0xcf, 0xa1, 0x5f, 0xd0, 0x64, 0x8b, 0xf5, 0x42, 0x3d, 0x57, 0xda, 0x3d,
	0xee, 0x89, 0x45, 0x40, 0x78, 0x7f, 0xa9, 0x40, 0xd7, 0xe4, 0xe0, 0xfc, 0xd9, 0xeb, 0xb5, 0x6f,
	0xd3, 0xdb, 0x00, 0x24, 0x8a, 0xd2, 0x7c, 0x62, 0xd3, 0x0e, 0x89, 0x22, 0x93, 0x30, 0x4a, 0x89,
	0xa1, 0x56, 0x4e, 0x0c, 0x1f, 0xc2, 0x6e, 0x71, 0x1a, 0xa6, 0xa3, 0x84, 0xcd, 0x04, 0x0e, 0xde,
	0x29, 0xd0, 0x8e, 0x2c, 0xc9, 0xfb, 0x7d, 0x05, 0xae, 0xae, 0xee, 0xb7, 0xd1, 0x0f, 0xa0, 0xa7,
	0xd6, 0x52, 0x4a, 0xba, 0x6a, 0x45, 0x5d, 0x12, 0x45, 0x0b, 0x25, 0xec, 0xe7, 0x69, 0x37, 0x9d,
	0xf7, 0xf5, 0xa9, 0xf1, 0x77, 0xf2, 0x47, 0x9e, 0x8c, 0x66, 0x5b, 0xe8, 0x1c, 0x50, 0x2e, 0x78,
	0x73, 0x5d, 0xdb, 0xff, 0x3f, 0xf2, 0x47, 0x17, 0xb6, 0x48, 0x14, 0x25, 0x2f, 0xb3, 0xc4, 0x99,
	0x0e, 0xbd, 0x3f, 0x57, 0xc1, 0xc9, 0xde, 0x20, 0xd1, 0x20, 0x7b, 0x75, 0x5b, 0xfb, 0xac, 0x9d,
	0xbd, 0xb9, 0x3d, 0x2e, 0xbd, 0x09, 0x57, 0xd7, 0xbd, 0x09, 0x97, 0x5e, 0x84, 0x9f, 0x40, 0xc7,
	0x96, 0x56, 0x8b, 0x65, 0xc4, 0x9a, 0xd7, 0x31, 0xdc, 0xb6, 0x12, 0xf6, 0x5a, 0x7c, 0x02, 0x6d,
	0x95, 0x7e, 0xf4, 0x03, 0x56, 0x4c, 0x23, 0xe1, 0xd6, 0x73, 0xd3, 0x1f, 0x10, 0x49, 0xf6, 0x0d,
	0x6e, 0x42, 0x45, 0x98, 0x03, 0x02, 0xbd, 0x9f, 0x3e, 0x16, 0x6e, 0xae, 0xdd, 0xa7, 0x61, 0xf2,
	0x08, 0x74, 0x4b, 0xea, 0x94, 0xf7, 0x47, 0xe4, 0x94, 0x46, 0xa9, 0xf7, 0xeb, 0x01, 0xea, 0x40,
	0xd5, 0x5a, 0xbf, 0x8d, 0xab, 0x2c, 0x2c, 0xb4, 0x7c, 0xb5, 0x57, 0xb4, 0x7c, 0x7f, 0xaf, 0x42,
	0xaf, 0xfc, 0xba, 0x8b, 0xee, 0x42, 0xc7, 0x66, 0xac, 0xf4, 0xb5, 0x48, 0xcd, 0xb6, 0x39, 0xdc,
	0xc0, 0x6d, 0x8b, 0xdb, 0x5b, 0x72, 0x1b, 0x5a, 0x71, 0x12, 0x52, 0xff, 0x8c, 0xb0, 0x68, 0xce,
	0x6d, 0xdd, 0x36, 0xdc, 0xc0, 0xdb, 0x0a, 0xfd, 0xa9, 0x01, 0xd1, 0x3b, 0xe0, 0x4c, 0xd9, 0xc4,
	0x16, 0xd9, 0x35, 0xcb, 0x91, 0x43, 0x4a, 0x89, 0xed, 0x13, 0xcc, 0x7b, 0x63, 0x3d, 0x55, 0x62,
	0x50, 0x5d, 0xd6, 0xa0, 0x31, 0x5c, 0x17, 0x2f, 0x99, 0x0c, 0xce, 0xfd, 0xac, 0xb9, 0xf5, 0xf5,
	0x3f, 0x92, 0x20, 0x89, 0xb4, 0x31, 0xd3, 0xdc, 0x96, 0x52, 0x47, 0x96, 0xa8, 0x5f, 0xc9, 0xb4,
	0xe4, 0x12, 0x09, 0x3d, 0x2a, 0x84, 0x31, 0xee, 0x9f, 0x92, 0x38, 0x34, 0xf5, 0x59, 0xc3, 0xbe,
	0x2b, 0xe5, 0x11, 0x8b, 0xef, 0xa5, 0xc4, 0x3d, 0x80, 0xa6, 0xb0, 0x86, 0xf2, 0x7e, 0x0c, 0xf5,
	0x11, 0x8b, 0x27, 0xaa, 0x78, 0x55, 0xdd, 0x92, 0x90, 0x64, 0x3a, 0xd3, 0xb6, 0xaa, 0xe1, 0x1c,
	0x50, 0x95, 0x1c, 0x97, 0xa6, 0xc7, 0xad, 0x61, 0xf5, 0xe9, 0x1d, 0x43, 0x7d, 0x94, 0xc4, 0x13,
	0x34, 0x80, 0x9d, 0x88, 0x08, 0xe9, 0x67, 0xfd, 0x56, 0x51, 0x43, 0x5f, 0x91, 0x46, 0xb6, 0xeb,
	0x32, 0x9a, 0x16, 0xe6, 0xa9, 0x96, 0xe6, 0xf1, 0x1e, 0x43, 0xc7, 0xb4, 0x70, 0x59, 0x61, 0x7b,
	0x0f, 0xb6, 0x4c, 0xa3, 0x97, 0x66, 0x33, 0xf3, 0x4e, 0xaa, 0x21, 0x93, 0x92, 0x2d, 0xd9, 0xc3,
	0x00, 0x39, 0xac, 0x6a, 0x52, 0xdb, 0x20, 0x9a, 0x6b, 0x66, 0x47, 0x6a, 0x27, 0xaa, 0x51, 0xb5,
	0xad, 0xc3, 0x9c, 0x47, 0xb6, 0x36, 0x96, 0x24, 0x0e, 0x4c, 0xd2, 0xad, 0xe1, 0x6c, 0xec, 0x7d,
	0x07, 0xbb, 0xab, 0xde, 0xc3, 0xd6, 0xa7, 0x96, 0xbb, 0x50, 0xa3, 0x9c, 0x17, 0xcb, 0x95, 0xa2,
	0x8e, 0x43, 0xce, 0x13, 0x8e, 0x15, 0xc7, 0xfd, 0x0f, 0xa0, 0x55, 0xbc, 0xd1, 0xa8, 0x0d, 0xce,
	0xe8, 0x64, 0xef, 0xe9, 0xd1, 0x78, 0x78, 0x88, 0x7b, 0x1b, 0xa8, 0x03, 0x30, 0x3e, 0xd9, 0x1b,
	0xef, 0xe3, 0xa3, 0xbd, 0x43, 0xdc, 0xab, 0xdc, 0xbf, 0x03, 0xdb, 0x85, 0x2c, 0x8e, 0x00, 0x1a,
	0x4f, 0xf6, 0x8f, 0x8f, 0xbe, 0x39, 0xec, 0x6d, 0xa8, 0xef, 0xd1, 0x93, 0x93, 0xf1, 0xe1, 0x41,
	0xaf, 0x72, 0x7f, 0x00, 0xfd, 0xe5, 0x7b, 0xb2, 0x05, 0xb5, 0x93, 0x83, 0x51, 0x6f, 0x43, 0x7d,
	0x1c, 0xef, 0x8f, 0x7a, 0x15, 0xfd, 0xf1, 0x74, 0xdc, 0xab, 0xee, 0xdd, 0xfe, 0xd5, 0xbb, 0x13,
	0x26, 0xcf, 0xe7, 0xa7, 0x83, 0x20, 0x99, 0x3e, 0x88, 0xd8, 0xfc, 0x9c, 0xb0, 0x28, 0x79, 0x41,
	0x1f, 0xa4, 0x97, 0xf3, 0x81, 0x0c, 0x4e, 0x1b, 0x7a, 0xf0, 0xe8, 0x3f, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x29, 0x54, 0x65, 0xc6, 0xf2, 0x1b, 0x00, 0x00,
}
